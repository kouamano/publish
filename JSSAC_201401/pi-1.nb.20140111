(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    470103,       8560]
NotebookOptionsPosition[    466198,       8424]
NotebookOutlinePosition[    466828,       8449]
CellTagsIndexPosition[    466741,       8444]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Mathematica on RPi Demo", "Title",
 CellChangeTimes->{{3.5969322539172983`*^9, 3.5969322751747637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["$Version"], "Input",
 CellChangeTimes->{{3.596934484207304*^9, 3.5969344919764347`*^9}}],

Cell[BoxData["\<\"10.0 for Linux ARM (32-bit) (November 19, 2013)\"\>"], \
"Output",
 CellChangeTimes->{3.5969344938655577`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Program", "Section",
 CellChangeTimes->{{3.597025374149418*^9, 3.597025386773148*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gpioNos", "=", 
  RowBox[{"{", 
   RowBox[{
   "4", ",", "17", ",", "21", ",", "22", ",", "18", ",", "23", ",", "24", ",",
     "26"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.597055439880509*^9, 3.5970555607750387`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "17", ",", "21", ",", "22", ",", "18", ",", "23", ",", "24", ",", 
   "26"}], "}"}]], "Output",
 CellChangeTimes->{3.597055565792981*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gpioNosT", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\"\<gpio\>\"", "<>", 
      RowBox[{"ToString", "[", "#", "]"}]}], "&"}], ",", "gpioNos"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5970556049213333`*^9, 3.5970556297747393`*^9}, {
  3.597058024736845*^9, 3.597058075107654*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"gpio4\"\>", ",", "\<\"gpio17\"\>", ",", "\<\"gpio21\"\>", 
   ",", "\<\"gpio22\"\>", ",", "\<\"gpio18\"\>", ",", "\<\"gpio23\"\>", 
   ",", "\<\"gpio24\"\>", ",", "\<\"gpio26\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.5970556324254713`*^9, 3.597058078762657*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gpioExported", "[", "___", "]"}], ":=", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"ReadList", "[", 
     RowBox[{"\"\<!ls /sys/class/gpio/\>\"", ",", "\"\<String\>\""}], "]"}], 
    ",", 
    RowBox[{"x_", "/;", 
     RowBox[{"StringMatchQ", "[", 
      RowBox[{"x", ",", 
       RowBox[{"RegularExpression", "[", "\"\<gpio[0-9]*\>\"", "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.597025454309679*^9, 3.5970254543260517`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gpioExport", "[", "n_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Intersection", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"StringDrop", "[", 
            RowBox[{"#", ",", "4"}], "]"}], "]"}], "&"}], ",", 
         RowBox[{"gpioExported", "[", "]"}]}], "]"}], ",", 
       RowBox[{"{", "n", "}"}]}], "]"}], "\[Equal]", 
     RowBox[{"{", "n", "}"}]}], ",", "\"\<Already exported\>\"", ",", 
    RowBox[{"ReadList", "[", 
     RowBox[{"\"\<!echo \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>/sys/class/gpio/export\>\""}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5970556565329638`*^9, 3.597055685416829*^9}, {
  3.597055855176358*^9, 3.597055863171986*^9}, {3.5970559194482822`*^9, 
  3.597055920938744*^9}, {3.597056065409844*^9, 3.597056157456285*^9}, {
  3.597056617332467*^9, 3.597056619544664*^9}, {3.5970570453443108`*^9, 
  3.597057159580534*^9}, {3.59705735497439*^9, 3.5970573904890327`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gpioUnexport", "[", "n_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Intersection", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"StringDrop", "[", 
            RowBox[{"#", ",", "4"}], "]"}], "]"}], "&"}], ",", 
         RowBox[{"gpioExported", "[", "]"}]}], "]"}], ",", 
       RowBox[{"{", "n", "}"}]}], "]"}], "\[Equal]", 
     RowBox[{"{", "n", "}"}]}], ",", 
    RowBox[{"ReadList", "[", 
     RowBox[{"\"\<!echo \>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", 
      "\"\<>/sys/class/gpio/unexport\>\""}], "]"}], ",", 
    "\"\<Not found\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.597057425528739*^9, 3.597057478972661*^9}}],

Cell[BoxData[
 RowBox[{"gpioGetDirection", "[", "]"}]], "Input",
 CellChangeTimes->{{3.597058116376635*^9, 3.597058122993417*^9}, {
  3.597058167117074*^9, 3.597058167965043*^9}}],

Cell[BoxData[
 RowBox[{"gpioSetDirection", "[", "]"}]], "Input",
 CellChangeTimes->{{3.5970581741562366`*^9, 3.5970581815378532`*^9}}],

Cell[BoxData[
 RowBox[{"gpioGetValue", "[", "]"}]], "Input",
 CellChangeTimes->{{3.597058201903597*^9, 3.597058207333716*^9}}],

Cell[BoxData[
 RowBox[{"gpioSetValue", "[", "]"}]], "Input",
 CellChangeTimes->{{3.597058213351829*^9, 3.597058219836784*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gpioExport", "[", "18", "]"}]], "Input",
 CellChangeTimes->{{3.597057232512558*^9, 3.597057240157661*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.597057241824127*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gpioUnexport", "[", "18", "]"}]], "Input",
 CellChangeTimes->{{3.597057488357191*^9, 3.597057497918045*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.597057499347101*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot", "Section",
 CellChangeTimes->{{3.5969322835047293`*^9, 3.596932299392221*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"8", " ", "8"}]], "Input",
 CellChangeTimes->{{3.5969258797626534`*^9, 3.59692588623949*^9}}],

Cell[BoxData["64"], "Output",
 CellChangeTimes->{3.596925900127639*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.596925905387672*^9, 3.596925950553318*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwlWnc8le/7N6LMrCibOMIxDqW07itJJQ0zmdlCRkUqLSorJZVQkSjiQykt
yW1lRkKyIpvjnPPI3n7P9/X763m9X899X+N9Xfd4P69HwdnPzI2DjY3tDicb
2/+eT684c9NcH++uvPz/z/ImeZPj8heQ24eDsybkc6WiKExePhK9qLm6ZUYu
Ej0tjpHjkk9E75OejzjKJSKfXYGnZ+ReISqx/5WzzCvUtOD5YEzuM/LafO1a
8rrPaHVHrwpTrhpVg796/nQVSq1JCRiVa0MNxknE/KVWNJnwXq37dhvy5GvX
vf63FRl51PY1zrUh3roPjtiwDTE4ZywLmtoROxIacOBvR9t2HdkeGd6JzI8P
iPEldKCG14scKkQ3Sn4X4CL7rAtdraEa0xz70On1ovM1W3pRZt5HSvbDPnQj
IFI4xLkXNSYYcCp/70P5hoY9M3d6kZKHdeF6/X7U6BX88vBQL6rhvKHJJjqA
hjk7m13IeeK7OkR+VAwiN77OnXWD/Sj3dWSHjyYdHbGXFzxkO4ToIvTbxk50
1HCkKnH88hBSCTLevekBHa1uWKl2eDaEnu3kS+2bo6NPFnWFYf1DKK76trvN
t1FkGt8dM31qGAX13f23346JVumaDOudGkFvjcaeK99lomKeb/vZI0YQ8eqY
BWcpExX5fFKKfjmCPP2FPxapsFDaGoGNnb0jyGYpLmTLBAt5RdqPeFnTUQpf
bZjwvjHUE5t5dUFvFO3edcnumsMYqnveNZ1kOoo6fdW3EOfHUJ7JcY8p71G0
vjF68HvWGNoc567WnjKK7iWYHIwQ+ofOzVRK2a1ioDDlesGVjn+I47gCD18x
AykevzJ0euofiv5122lnCwMVR2gWdwqOIy2B/X+UGAy0OHonoGDPOBq7POkk
KcFEgW+PNgdmjCPaxR/43ikm8kA/ExlnJlDQ1GWtm2wsxPZ8uqAjegIN3gfO
z8IslLBKurMmfQJJ8hQ3pCmyUFW1u+yrlgkkyGn6/uleFtpksfjcbfskOmih
YyYbykLFHxTKLcwnUUTzpSdc91jIesP+gb0+kyj/iG328xQWiui6p6KYPIky
rj6OXPrCQsOeKv91sU+h0AdjcTr/WOharUldneQUOl1dt798iYXWa55hFepO
obSbqp95eQl0YKJQ+7HbFLrv+svmvQKB/lr2mkZdmULQnW26QYNAwZ9Wn73w
aAq9lxaMo20j0KvLZu+PV0+htYc8blw5TCCDv+dbjHqnUFZoGse74wRqN3g6
s2VhCklETDs/diIQ75phfTGNaZSzx9Yr/ByBvOIuFzXETiOj9WzyNfEE4ph6
3o1fTaOjXyu2PE4mUNLxKrbXpdNoX5n/dbmXBKqRFt0bMzmNcIbSmT35BHK+
us01RGAG8el0TnYVEGi+x/6mN2UGaVU1emqVEEg9I7PyoPUM8vzTMzT8nUDl
PPXD2wJmENf66y2mjQSy85ng2RQ1g3IlT18+/ZtAk/Xr1SXSZpDf5t0NOzoJ
dJu224S7cAYJXTtQVviXQEoPXE5PNZP22J4cGusnUOF0xJ1+5gwiClY5tgwT
yOJE7usm7lkU0cA76csgEONLU0Op3Cy6+GCcvYAg0A3ZuX9522ZRVmrhtY/j
BJK+LiuaajqLuFjKpzymCJTft3dzrNcsUurMyK+eIZCJ0SnLq2EkPhRs3zVH
oP7MO0G+T2bR+/RIhxcLBArhy39k/34WOY1EvZNdIpCYb9snk/pZxPNlyNp4
mUA5DcttO4ZmUZxb1aFNKwQy0lVaUGObQz8GhKM+kbjr4UFpyQ1zKIXlJrJA
4qBZ3108OnNoJ0OxnyCxoO0Dh1njOVTN5boST+KXXz9fHXKZQ7wy7G5jpP3d
8t3PWkLmkN33O+KLpP+W0FWl3x7OoT/ODuIFiwTyHVDty8+dQzVdlz3UyHj/
OrStKameQ3vCTbkVyHzMWyM06/rn0Jt3340KpwlUYbrNom1lDu3zrtBanCDQ
ttqhCwOS88j+i2T13zECZRs+Svm3ZR6JpWZJeTEJJFtk9G3p2DzqIWxpCSME
it06TefxmUdHt2xY5z1AIM68F0Li4fOoNvFnYy9ZvyA1Sz3F5/Mosij4/EoH
gYbTVtlpfp1HoQncwiUtBKqPd8kwmphH/mM1jrq1BAIh0TozwQXkdpNLr7+c
QO8iS8cdVBeQform3u1FBEoIUdh93nEBUT9cOtrymuzv6QaXsIsLSFUHn5fO
JNBlv2uRdx8uoN1ftFTXPCP71bm7OaN2Af06Nnmj4Q6BmjvuzL8bXEDE6KWT
OTcJtN9yt3wx+yJ6r/RIRTuEQNQDT71bty4ifwr7oIongZJLTO71my2iLeV3
xJ/aE0h4x+KHsdPkeC6NF5/MCDStYcvBk76Ilmelbfp2EKhEdEOivtASktm1
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
+Q==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0, 20}, {-0.999999941761652, 0.9999995837354044}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.596925953824604*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyVXE1wVEeSbkv82ebXQggQEphf8eMBIwkJIYQRNrbbaMY0AuMeRrO2diJm
omNi19MywSLZc7COijlMdHgJRoYLOoqDAzFgou0TOsqHARGEArE3HXVwKHq1
WuJt1ZdfvpdSv/ZqDtCPpN6XWVlZWZlZ9arjk57f/+6Pn/T8ofuTbe/+6ZN/
//0furPbTv/bnxyp/KVE4qXfJxKJp2sT7vm/E8v/K7E1CII/BEEisfB3k/ur
vPuA+2fgaR2e9or7a6nQgiDTkShz/14yfL53und6+PMlJV5YoS9MtQZBvjD4
D/9W+eA/8gX3W1biJaWVuz/L+g9NbQHAlv5D5TEvJMrHPs7ezt5OlLk/5QOf
4T/LFqJk/xI8hxzPs39xBNeP0747I1c/nUme664czyc+8c2C5wMfpXLJnuzd
wk1PWDr5rLsxlUv15B8kDseKZ4BvW/HedX+WD6eTucH7k5MjvcmG3LXEb71C
Cj9kLmT/Mz83PtjfnL4z1eaJS8f7Uj29T6ZqH84lytIzb3pOKzzY5MT49e4D
iaU/pwjfkfKhzenH019CpPKxL1I9Y5cSXf45/XjgIkUtd9J0Tv858RsAP0v6
NqBP/znTOPg0cSjkOrqx/5ByzRdy37oePs99O7rRcn0Hb3a1V4xuQcPysb5U
rvBD4pJwSo34bvnn7N8hAeipHjzDWAo3UrmxvsRBz/VliOg0yJeWDH/e+2Pv
j/PNChx7C7dmMVDuOXdl4Ir7TUOSL1M9UzVCL/yQyrkB/bV/HrmeuaDtR6vT
M+73FwsN/G3/PJ6H+MsBcDPZM9UmwLlruXt+KP1z/kHmsvv9WJlMPhN9ZS+P
XHe/b8QC9z4ZvurHHXY/i/5fFIndaHwpXU8/HutT+nC694m2Hx9M34kDPuWf
p2pSueC5ABRutjdMvhCAwae5a+73Zel+9q4Cpx+N55We7Bl86n4PxALnrg16
HcPUMxcg8QUZoJRXyyvyDBV9JHqFjkHPz+G5CLhddJbsme5KvAoDfOGkJ3B+
Lvu1+wU9dy93X+nZu/kJpTttv3C/+wnscAGZn0AHV4JV45i3svMyJPk5fdUp
qkfp013JHqe0laKowfsGcr6s5I2Gw1f7q9xvp8idrHcAq6CcxtFWpQ+noaiV
4cjEAJ/Ef7ad/MkZ2iqZA8lOBwaAW7NZb1yrDBjo3ZWwjVWmh/tigUeufuWd
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
cYlk4qX/A8v/CaI=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], " ", 
    RowBox[{"Cos", "[", "y", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.596925976878848*^9, 3.5969260234664183`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxcnXk8lV33/6WkElGKBiJKEtGoyTl3qERpoJFKiSgqktKgRCpKGRtQIhUV
ImMcswxlnsdjnjUrKb/n+/BZ1++573963e9Wa+9r7bXXXnvtfV1H+tCJ7Ud4
eXh4bgvz8Iz+z585St4tIf3P1Ib/jFF7LjL8/7zxt4Ysq1tZ4JdOnGw2+dHM
KjtUwLKs/kHc/8mq/Vqv+lj637rt3WVHscEnlT5riWvrZLFiPtdbVI8lrnOk
IKv4eyFL3u4HS8t9IvGDkcEi7qFVnJv+f3TdZUWIf9Vt5bkj3cMZ+u9/U4i/
P9Pw/UpYL+e0EW+4RfU0pt3RAYJT1nI5HaljDlZHTyce7CV0f61LKmu/LL+w
lvss4l63JjlfVGtnFTuNT462mE3caIX0te9Dfaygr3yq7rLSxFPyHrfemdXO
OvBfPXOI/7zpaLUoKYU1Q39c+9CQDPHXf5Si/I5yObDzsF1/sI4bigt6K54n
O4M/qp9wXTMjhuwMbpjqMS73ewrZmfjn5POHHZLIzuDqOtH3Ew2DyM7gc0xD
ExaqvSY7g8tZVF7b4JhMdgYPuziqpe1ICtkZ/IWD2ey1rpFkZ/Cjt3drKPB7
kZ3Bpd4fNG+5mEB2Bv+e+/l5iGwq2Rk8r2zCMYtdCWRncNGb1dJPJT3JzuD1
TTu/+iZGkp2H7TeWvSrmlpnEqGdJsDP4admy4lTJZg7sDJ4iorHFwrSXAzuD
uy0y4vlW1MGBncEjVn0dO3ltIQd2Bm9QnvZ3+f1KFuwMftjRc3nz9y4W7Aye
47jRscK6hwU7E09eXpno0sCCncGNNkiW2uWlcGBncJHDDy+KabZxYGdwf+8+
3qzoXg7sDK56h1PuLNvGgZ3B04ULREP4UziwM/j+RlPv628bWLDzsJ1E2PL5
B3MtyzzIzuAnT1yaErunkOwMPin74LGBFVVkZ3ADvWvX2zTKyM7gU+/uuimX
kEh2Bo9Suq4mMSWT7Ax+5k+r5a1ZFWRn8LF5/Nd6jlSSncHvrr9vve1GHtkZ
3MjYz/Xim9dkZ/Daghe7BEVKyM7gopNPZpteqCI7gyvFyMv/+lZMdgbXMhTh
CBx4RXYGP7K+xORIYR7Zedge09jyv+y3aqgEUdwAF5h1RX7BCy7FDfB1LzST
+MM7KW6AXx2tsb4+pJXiBviiui+im9Q/UtwAXxbnyaNytoziBniD7K+cbzfb
KW6AG+meFFxZ1UFxA/y3nvLD3wK1FDfAb5156DuRxaG4AT67sluz73gzxQ3w
yyFLLV9/76S4AW4Y98hp79ZmihvgXz0jrl9vSaS4Aa7YF+CzR7+W4sbwc89i
2118eneH1iOyM3ja15MS8wyryc7gEkaj/ha8bCY7gwd0nLNwcuOSncFnVBm6
15/KIjsTD/NVXHe0kOwMHv7549Cp0U1kZ/D84vgwRf5msjN49qqWtMjLZWRn
8Nkup/I6lsaSncF9e2OzMp/Wk53Br4QY3chsbCY7g+vbGUlcOldPdgbPdd1x
fK18DNkZfOnp41o348rIzsPPJ82ez5PB+Xr1EcUNcHVpoYDjd6opboAv9j5c
f7u4meIGuAp3zxaLcC7FDfALUvKzPvplUdwAr26efKHheiHFDfAxf/0+TJZr
orgBvkZeWfntwmaKG8QPah+uCymjuAE+PsU4X/NQLMUN8AQrw8Wi3HqKG+BX
+Wc5d4xvobgBvunnF9ezUfUUN8ALst5UB+rFUNwAX+cmaz67uYzixvBzyLAP
Ttf2UJ8VRHYGT3p0/UauN5fsDL58g8IVTc9OsjN4oXO/vbZHK9kZvGjV6cp8
mY9kZ3AFltbnwoNlZGfwV3vMQyxOtZOdwcVfly/R53SQncGF09MWZvTUkJ3B
t14suOoqySE7E1cPPxu+q5nsDP7wYXpSYGUn2Rm8W+mD1crVzWRn8KdfhYtO
ZCaSncHDSowry5bXkp2H+zuPzfP19OX+WZ4UN8A/qya0HfUppLgBftvXccsS
ryqKG+DCqV12Uz3LKG6A+5dscqiVTaK4Ae6l/HT+A6NMihvge/UX79toVUFx
A/zBYoE7q5MrKW6AjzV9PZTVm0dxA7zjxUDfk9lhFDfAv1VcO2eyu4TiBnjC
G85Pj6oqihvg6uv7T/euLqG4AV5XeX6FXdYrihvgayoFV9Ws+EBxY7hf8uwU
v1mys34Ek53Bz71YnzlnKrNPAf9oaFDE3d1LdgaXrQg1u5/ZQXYG9zee2FC0
lNmngEeHHR3707WS7Axec2/iwNX2LrIz+GPdUW4pR3rIzuCrH69wLr7aQHYG
71DbNqU/LYXsDB6uw478vrKN7AxeNXrN3anPe8nO4LPmCgbYTG8jO4ObeRnZ
OQ4lk53Be2I3rL/5qoHsPNz+Qral9+P1rw9eoLgBPuX6xQW1hbEUN8A/mJjN
TkhOpbgBrnl+VvHsag7FDfAve+7b16o/pbgBfm3T2s2tHmEUN8C/f/Hf066W
QnED/ImG97xLC1IpboCHHB94L2EWRXED/Eae/72Mb14UN8Az15wQuxH1juIG
+Ji7eYdffk6luAHuaSd+fL/rO4ob4CL/6IgNjvKiuAEu4ZPtEOobRXFjuJ1F
7JcR7Q4u/cw+BXytkuQp7R/MPgV8UFesafarPrIzuH2UXIh3WyfZGdzF//O6
d9+ZfQr4ishu2ROhVWRn8OKti6vNpHvIzuAtisJZe8J6yc7gB2wi7AbXcMnO
4NouzlvnuqSSncEthIKyDNXayc7gWgYJ/rlDfWRn6k9lwI5Ts9rJzuCJ6Q7L
xZOYfQr46ZpV7deOcsnOw/pU2AbOTxbtHThHdgY//dA77nZsNNkZfGKMgXHa
ghSyM3i5/Jw59vKJZGfw2HvRfx1sA8nO4J3am65ot78kO4PzaTtPm+PBITuD
3/ZOKFoVkEx2BncIti1eF/aG7AzeMZRpYDPdk+xM/WydEi6xIZ7sDC7DWStz
d1cK2Rncf6qK2+458WRn8HWfBXKWrPYgO4NPL0m7fLruDdl5+N8tZh8W/rGQ
K8DUkcAb392Yqjific/gootX2D+zYeIzeJHTeJfx9Ux8Bs+aemSajCYTn8GP
Wok5qjxl4jP43YzX4b94uyk+g89P4cY9vsLEZ/CacU095z2Y+Awee4iPJ7+E
ic/grg0LhX/rMvEZPDXdUX9eBhOfwS+WxygaLGLiM/ilH57znkxi6kjg6sdt
V+5NZOLz8N8vYVt/dNsc7+ZBdga3PFz8tWEmk2+Av/WeFOJcVUl2Bn9y1/HE
9e+lZGfwf8L9vy7alkh2Bpe7HPnwRHoG2Rnc4SOvtl9mOdkZXMrVysJUgMk3
wEVM07oeyjD5BrUb53FUVPM12Rk82/t1l3N2MdkZfEigW3aUJJNvgLcqrigs
f1VMdgafXLzQ2uDHS7Iz+GLl9J+vzfM4+46Osz9ZXcYa/rOVNW/nAeX4tgJW
96PcenfZz8Td5S3EY1e2sHL0+xbx8Ixhg4tW/D3p8qmGFSX+za06ejzxN3fE
nMLEX3L8q3/2RVtMIp728Z+V3rO5nHjlURXRFlOJ/4y9LT+4vYmj5D76uqyW
OHG+T34XH+9IH5m/M4nvdD15UndTOUv8v88jQfxGxbMDea9aWRv28eVFW0gR
tzcxvib5uJXF6zo2yKJamvjQjwvavnzlrHfv+C/IaskQf564Mv1GdzrZZ9ge
o9hHTm/mxq58z4F9wDf6PvMOMK/jwD7gk9YcPqLzroQD+4ALlcuIP5EOYsE+
4FHx4bMzblSwYB/wAI66j3RENQv2Ab9wRPRqm1QiC/YBv5obfUkovIAD+4CL
FlTyd7IaOLAP+BCfS9es5Q0c2Ae888lkqdJLBRzYB1zj4yp7/sFEFuyTPLf0
0f/Nm8eia8TydpaQHcCLaga+Rh7lkh3ArSxcnlW2hpMdwF2FFxfxPGgmO4Df
DRewK2e1kR3AH+6zUPY7/Z7sAB5esS7clK+Gngs8RfusXPKbanou8MFps6u8
FmbTcw0/hyg7K6Vn0/TDcTQvwC/MF9k1qiGf5gXJx++NKo3PoHkBvrDnZkmy
uBfNC/Bd8yTlBqOzaV6AG/RqrJ/E94HmBXizb12S7bXXNC/AbdxW3W67kELz
AnwGr9XlQ/yFNC/Ac5Iap0j8KaB5AV4oPP/zNq0Umhf0XI05d6cfD6N5Mfwc
/8kft20yKZ65neYFuEBf2Izb70zIH8CNXjQX/hzaT/4AXhc8qTJJXIn8Afzv
4zt2L3YdIn8AX6upZKIQaUz+AH7+4uWJUzM1yR/A+fiCRLK+7KZ5AT7uH2G3
2dpHaV6Ad3N0jp5dc5T8B1yde6J20Yvd5D/gP/ctncs1W0/+M9zfuewb7LCf
EytiyT7gCR9PTTiukk/2AX8aKWBWqJ5B9gGv0765fulTT7IPuInknYOyC7LJ
PuCVn4esJEzyyD7gmxXz/q6vf0X2AbcVV+CfLZFC9gG//zE+SCKkgOwDLvm3
5Jzw4wKyD7hgeNaXwM5ksg/4n6md4kOc12Sf4X7NZ4dvcpXOPlJC8wj87tbZ
q67bcGkegfufObtmy9dwmkfgRdkLDy960UzzCNxsSq3br61tNI/Ai9fpFT65
9p7mEfjE3W8GBGfU0LwAt9QpuS6fVU3zAnzgYregDCub5sWwPgX24K/udW8G
syhugNvtmXKGV7KOnhd8TOQtI+HrJfS84NcPH4vo6g2k5wXv9Uyr/qZdQc8L
fnepnNOBY9X0vOA7P/L9vVb+jp4XfMKPM1VjrhVQ3ACvvWDVODCtgeIG+D2X
92fWCzaQfcCfGgef36BfQPYBVz06YfBSeCLZZ7gdRXZPfuhLw6ECmhfgeTa2
4ia7WmhegLvX9FbyTq+leQHu3JQu9ov1kuYF+NjxBwudV3BpXoB/TlvuNsqy
ieYFeFivWfLEk+k0L8DNbDa6N5iX07wAz3x16ZnDh1aaF+BbHni8SuG00rwA
H1MsZfhhbjnNC3DTxVMrcsdn0LwY1qfMvlK4aWFPPmMf8KPbb30tncnYB9zL
9V1fXlYN2QfcZO7hbqnPoWQf8LlS0nfs+Bn7gAcczd+UtYKxD/iSFjVt3hWM
fcCzniiLOckz9gFPNm8/WHeLsQ949Lm2bPXLjH3AORXLQxe3lJF9wC0MZLVE
89PJPsP/ToUtd6Bq1Lkz72l+gd8c+3hZezQzv8Dnn502RecTM7/Ag8ozOiX0
gmh+gZ/7UDu4OYuZX+DnO/dN9fjBzC/qj/5Pza9miTS/wPV3iHu2VTLzCzxp
4E3zi6PM/AKfdVBjafp+Zn6BH5OrSV/8nJlf4Iu/Baaqbkii+TX890vYo1uX
Oz/cwMRV8MJDLM/IfUxcBW/P7v9nVRUTV8F1K9VF/G8ycRU8cu5iezslJq6C
y47a7rvnEBNXwe3PGprbfaqm5wI3lub3FfZn4iq45O6p3PfTmbiK+wYHeuZp
lR0oY2E/iLx99Mkz2htf1TN+MnJurvZR98XsAy9o/w55J/WCRXUzn6hRXjei
n13+siVQrHskrx0k/c6rRNfJPWpj/G1Ef6lVbNDoag7JQ4/QiqOXrqv3Mfnh
CA/UXnL69bwm2odCv5hCuFO9TC7tQ8HvOv9jFzSP2Ueg3X/mBClaT3Vi8skR
/eFrC1+lv2jlaOT/ldNyn0x6xM/UGd2TbGf8fETPPZfvh76/iSN56KkJlri2
tLuPyUtHuEnFDp6THsy5J/R7ndlsFT6xiva54OaPLR4943tH8QTtrhjPkgu/
4s/ksSP6TY2Da9YW19G+GHrmz7316+C2Roo/0MPdbua2wC6CyXtxr6bYSUN8
TC/to6HH9YsF20mxncmHIW/jZP/ncw+TD4/wC3XzOraeraP9NfSsfx7gm5Mf
z8zTkf5Yq4mO9VsfweTPI3o8Z9zaeTEil+pL0LNj4j+HLmyporgHPR1XzvAp
mT7iwM+x/wpafmbvoTdltC5g/8IdyvM5daODAz+E/K7onv6K7gaq74G/FXif
6C5dS/LQo7S3Zff5Y91U94P8Mtf4H6pWabTu4L5EYu9A6EujRqoH0n5zmVjJ
yYY8WncgX3PfkvdJcgsL/gb53yG3lspv5FKdELxsX8XsaN8Gkkc/l7PTrPPH
MPdJIP+cPXnpopAiWtfQ7tZtjU93urZTXRHy/XvP6A1NiaK6Irh19b7OX6wq
8k/ouVH9vkjWu5bWO/RHz2/L0HStLqo3Qk/psQlZajOraB2EvI1VRWmQahfV
ISG/722P7MCySFof0e6AaZ5qvVot+Q/kp85KFtKrLKJ4CP3jPsy4u1aoieIn
7l2Md1sws8ExlerAkA9tGbzsl9tNfgV5S6ed9tbscvIT7AdNljis833H1Ceh
x3nJgsGLahW0vtB9kvNrXHZm+VN9GPKL7ulNVjzfSX4CeeH5rjoiqUXkD5Df
1fGlr6u5i/yB9rN5o0w3zyqi+AP5gH272kyqk2mdgv6FblsCjTWiKc5A/t2q
8Wnt41tp3CGffWi13JWr2VRnhvy90w9OpE/rIX+AfOzSXyKCFRU0vpBPrmn7
MiSVTOMI/tHrS6ZFcD3FDbp3NOlpb2tXNI0vntfjffWXv++Z/cWwvaezC/bs
fZae28XcVxyR377p3CIF54+0TkH+b7z/efG+XuYe44j8pZeLz/YejKL1C/L7
/PpZ3780MvcbR+QNzYw5HeuSmPuNI/y3juFQ7bUCWnegx9rv5XK3461UR4V8
r8rimICjhbQeQd7iiv6PQa8+5j7kiPxlgf4Fm93SaJ2CvLa3xmODLR3MPckR
+ZZRp1+fmfCU1iPI//rk+sfKP4fiAORfW0hMW+qQS+sL5BNjQobGRvYw9ydH
5OeKl06K3pdL6wvk5x3dJCUR0MPcqxyRn178RCJPOojWEcgP7JmRzDevjrlv
OSLP85SdEJWcRvMa8q8b3C8dlWHyInDZwSca2YnNlBfhvorIjxnJ35Z+oPo5
5HMe5rxL2NVHfgX5yGn+4Vz9RvIryKsKBdlOetRJfoV6SEdc0/wXm80ob4H8
qOIbK/2PvKH1Anxz8qOZNw9XkTza1ZkatHev5nPyK8hf4Zt4u7Gom/wK8j3F
y+PPeNWSX0H+yPKf7wIMesmv0E//zBPdC8vMaL2AnlfPNh8/FtFAcYD6KTVa
+o89k5+AtySyB3n/tFF+Aj0KYvuML0sy9wcg38Hd53v9RR/5FeRD9urG6/g0
kf+Ad87sfXXepYniA/SM/sH9HWGSS/kD5Pc9VPNZNiWV8gc872K7vzt1+g9S
nB+2xxx2aKz+u+VFXZQnQP6Z53IBr8wjFP8hr6hrXKnxo5fyBMh/E/kjeWXy
ZsoTIB/yzkd2bz+TJ0D+1+9s5RYvfVoXwF3nVDlkeZhSnIce58XX+Lf69dG6
D3mD6z+aT7Xto3GEfKfe8tZVeh207kO+qCBolsEYNVoXIC98gnfJo6AcGl/I
X+dp3Lry0WGK85B30905uTOuh9Z9yD/+bWeWfvUwrfuQn9xzQ2DwWQ+tC5Bv
k3EtOBG7htZ9yAfN23txtGIdrReQr10h97tb0YDmNeS7s0fF3JxfRvEB93n2
uzgECmcW0boPece4jft5DvSRP0D+puixzzrubeQPkH/77FDh6qed5A+o7zna
ZH48s6+Qxh16LGwMdCNFGmieQo9x5YsjqadaadzBr6REB9+t7KZ8AHpW3nZa
M30Mc28N8tljBWVfHu4lP0F/opvvls6MKyQ/gXzh1G2JZyczdQ+6r+Wd/Tbd
poXmL+TVDfkTJjnXURyg/pxU/bK1tpLyAciPv165rCG8j/wE8mvnfNh+ZVEH
+QnkL7fMVxtoaCM/gXzuJZ9jW6U6aF5DfpJL2uOJFrkUByAf+Ieb7L0mi+I/
7FCyQDA/dn0WjSN4XKz3vR/1H2gcUc+0iXOoOX65m/IByNdnbIvf+jmSxhf3
l/hm7BNVn1xA+QDkrxe48Sj4JVIeCPlBnSChzKWPKJ5Dfqu4i8CehQU0juiP
rsSR7yozmPNryB+Ys/iegmwajSP0d6fKRTueKaV1H/ILcm4bq/oE0XyH/Lw4
7fQ7HtG07kP+WvRMyRtdOTRe4Ozttl21GTk0Xujn1vebV0fpdNH6Dnmd6VUL
rkcG0rxGu5nhii8672bT+g75no+b7zjqpdH4Qj7phn2wydoYmte413Qm3XaO
yYlSWq/RH/Po8JXqvh20voNf77pZU9rQTfLQI9ez0yGlg7lHDXnBXRF/Fju3
0/qOuu6mbQ+Ul6c2kJ9Anv1Q0cv3QAHljdD/RCLzJnd3I81r8LDGY4Krolto
vYYe/V/qm+x+ddF6jXZbRF6ZPJ7FJX+g84Je2b8GlvWUB0L/TZ3gLfcut5M/
QP7EH4eJxW3JNN/JDmOkbf4419K6DPk98+46LTPsonUcPPdX48KlC3tIHnp0
xdyab6R0U34Iefdjb2es/N1C6zvkF0lbv1IJ7yb/gfyTlT7xjQuTKT+EvPI5
oYdc5VryH8ivuLspIjmxnuIG5A3mlL9sds7h/O+9IAX2JO8Al2XnymgdwT2u
ja2D+z5eDPnXfSEF9kRv0x2tAw2s/70vpMAWsTp0Q7mihvW/94UU2A9yHE6s
+SeN/AH6dUVFQwpeRv/rHpEC2/KU+5s3PnmUB0K+4+ye+tejr/3rfpECO/SY
w+npq+s5/3uPSIGtJLLMe8H5IvIH6Akbm/6P6sakf90vUmC/O8racIwbSfsC
yMfN3uRpXPWI9b/3jhTYFWk7Miv/VJL/QD62/3vSU9abf907UmBr/l674Hxl
Jet/7x0psJV7Bw968UXS+ELPmk9DEYXj3/zrPpICO/jbldcVL4pofCEv8HJ0
1qgjjyn+07kJb6WrR2U9xQ3cH7uT6DwYe4CpI4GXJiyeZS/WTesC9CxQqRu7
KJnJB8AN5zs1O55sJnnU7QW7rG1aLrZRfgh5v7cpGUVaubSOoN3jB2cf9JrX
RP4A+W/X5pYVriuhuEH3AxuMeJ69aKX1AvIbXt3au53N3LsGF9jkPDZBt43k
0c8P1erzAwfbKE+AfNz6H7oSKlW0vqBdyecnHLZ4MPkk5CtVo7zKFjLna5Df
3zrBfmpxHeUJkG+xrBbT022nPAHyBukLf3wazbzHBPm+q3m3Vbc10roDeZOn
3I1ln5l8EvIhhdqbNn6Pp3UH8tse+fLKn2XySchbcRvZmtZV5D+wT5TgBtWw
y/X/Ot9UYUsPyUfosp9TfID8yokK8w0+tHH+99xThT0heen5Nqsk8gfIt7wd
ff/Fnxwad/AZFzb7aU7493moCnspu6N0ppwjxQHIF3blhgc3tbD+95xUhW1m
9s/bU3diaXwhv1+31Wt0eyWNI/g1t4bCJXUJ/zo/VWFX1VfHFs/3ozgA+cvr
fmd7r2j817mqCvval/un70WF07hDfts589HnBZh7nuBbp3cLC4Qw4wU9p3wu
v9l2NZzGC/KBn9c0WclX/eu8VYW9bM7DLYvG+NM44pzojtYiyc1dZbTu45zl
0yRrzQNnOmh9h3zpwCX7TWJc5n3MEa7BEVZ6bF5L8tCzd65a+T87mbwR8sJL
NdsHnzDxH/f9Hnw/+Gy9OVNHgvyEX2P6quZ/oP0C5Lfp6HzMz2mhfADyCSn9
sfbWXMofwEf7z3qzP7OB5OmcSz3shExfN/O+54i8yjc9hz8VzHqBdjXi9u4t
9mHyB8hv0dX4vnt9FPMe6Aj3Xuby8sOVKloX6D6ngdDUP4FMXoH+lFr77I1b
2sW8Hzqix+10/fFogyrKEyBfLvvo/FZZJs+EfEv5JV45E2YdQbtN7fZBt3WY
PAHyB2KXed8bV0z5APTLPK49yMvTRPkA7g1K7/NKqFuXSudokG/K//rzn7in
aogD4GK69UtmRTP+AL5yqELi8AZmvwBe/dOm+NDCCtoXgDeLt6wwMe2k8QW3
VrbpnlbQReMCLr3CSajgYzKNC/grBzbL+lcL5W/gqnWHeAVGMXU58L/sVN1v
osx7BOCv7dLDcm4z+RXss/3WvUdLHzD3q3G+Y9MeaS3U10bxCrxjxsDbQN5W
ipOo87+Xrgh69oPZX4O/zbmxtXsUU78CF5BUVC0M7CW/ArfU+CO7Pb+b1gvw
50Npfp8TmfUddea/MhfOWDVUkn7wReul5wsdr6K4gfcKg0Q3TegKaaM4AF44
Yfrf3p2dNN/BhZK93M/PaaD4DF6+7djB72JN1C74hqNmfeNbOmk+gv+cekxL
ybWF4jO4S3DE+L0hmbSegvv7XfjxUauD5hF49ftsldurOmi+gOfuuGQaF1pJ
z0X1tG7VjhzTZsofwC/mOrdxS5spPqMu1/wlas39lVwaX7y/9nC2nfras41k
f/Cnt99Z899uprwI/Pm8eZdClJhxATe/efRd9yBzTxL83oqLkpEFDZTHgq9v
ytfjC2fuB4Jbn2N7875rIj8Bl24+dmRmeBOtR+Cplw9XHxtXQv1H/SGiVdni
xupO6id4V6Ctm3B2J80j1DGmWJ5877OWS3bGPnfmxECp02uqyM7gviy5ZTw5
zDkaePVO4ZUq0sx4Yb/z9fKlw3e/9pAecNu1Zyrme/VS/5EX2XQk3zqg3kf9
B9/zzSt2QjdTD0dcvbnAIExzdBe1C36tl4+3fxJTjwI3PGkbKveml/wT3PJO
oOGHmm7yT/AF7LQo49xuWn8RN5bsCxoQ02um/Bb8VNv5p7qL2ihvBF/hVLCc
s6KR6gA4N9xjuWrH9Hlcirfgsyb85d66ybwnC/7mUnJL1XYu5f84t2K9qPyy
0Kad1lPw1U/7zDR21dO6Bt5l7C87uauF5DFfwiRmL3IU4lL/wWf46P8+Vd1G
+Qz8J3zZQrd7qc1UtwH3S4zh9+Btp3UN+2Je/Z7zG2c1URwGf3zqW3n47U7S
Ax5wqtVq3oxWsjP2XzEsnhW1Vg3/et9Egd1vay63Qo55Px159bmyGV+dhNvJ
zuAvHsY/N5dupXUK3GOQO/+veSPZGflezY8JUudWNNM6CD7rgoFuqFAb2Rn8
xg03iemSjbQeYd1/8TXy+IxtXLID5V1pwteDK5n3dsGrK6+s1rnE5IFYBw8Y
Gn1tP9ROeTX4x5pjp2pY9TSO4PIb459HVrWwxPuvP/KQ5Y78+Zllb7Bgfp1W
PstS67upu6wAG1zeKT420y6Js3Dsn6ZoC2HiE1JHa0xbWslxXTDm29CQOHE9
3oW10zXvcEb9t98ziZddUDQU0ylmKVeM3Vu9fA7xNzJ+skWyaayuceMWuwfJ
EJfUSrCUfZ3FMRr10Y2H5xtr+M8x7GTvhzfk9do5jtc+8cdY8LHBm0UGNZNa
y6if4P84KiyQndrCQn/A+QLKZxvKNnDO9IzTq46WJH7A6WK6uloHB/0EXzH0
LPjq6AIO7LbMuVw35j/r52eVo1HGwuWc4f8fIq598Eu8TW0zB/YEN90u3vHO
NpMFu4Gz9UW1rg36UD/BFwstiZtiXcOBfcC/+r4PfXq6kAU7DP85lb17YMnj
WUqFLNgBnCdFa8WzgHqOWPYoDXfZacT/GCokJMytonEEP7JO8f6hY55kB/AD
+nHfk8a+Z0HP8PPNZD9zkhbZLtzEOfOMz0E2W4q4lMx9vXyRdurncL+k2Apb
REfzz0+n/oBnLvWv1X/1kewDvvYSe96Pb84s6AefnxR2OsmwmPoJ7rJ1kd5G
5Xc0Xk9Mhzz+L08st9+rurKlnvwT/Giui0p7aBP51XC/5rGPB62dfk0vgOYF
uHTDzZuK2h7Uf/B7q05XqBwMIXuC10yzV5lw35jsAy41Jsb8QXA4zQvwZeMC
JtiuuUfzAtxG4tzaqAE/eq7hduazfWIz3lrpNNC4g++9dGDD93866XnB1Y/u
M4qd0UxxYPjvFdiGwbMqYyYl0HiBf5g8Pf/jqxiyA7jbpg3tDwxCyA7gGVpf
pdvGpJIdwN8azNfJlL1A/QEvCql+9zI8mewAXnp7ffzb2+FkB/A+9yrTOeej
KD4Mz2Ml9jxvZR53x26KA+D/fMzYbRPdTvML/PyoHTPauhrJnsPjo8xO5cz8
3tr9keYv+MmKwbLlUklkZ3DxiwfvL+moIL8Fz7+esD9V9A7T7ghfLTdXJWUy
47fgpvOEn33qSqX5Dm4tMOPQe9MsFp53+N8tZrsGxxmcOsXML3CrM5c2b+Et
p36Cr5suW3xVqYXsD+71vdkjZ0UDC/EQPCq5dtdTgw4aF/DoVffuZk8rIP8Z
7u8S9pfv+QvLO8tovMCN9G8XrdxdyBHK+HPRujqT1h1hRfuxFplvWT0X3A9s
cu8mHliqGF1aV84Sntu7S8udlz3878pYm0yezLDpbmENtH2JkdUaR+tF5trQ
tIUdL1jNIf1iPDxCxGUFf/PucyzkGNzjOV4dLUp6ni8unjflfSen8BfvLC13
MZIfo3Cx6dr2LM76/67fM4iLx8q1fHNIYxWzxvYO2UuTnouKfbEf4xtZt0/y
Z0b3MOuaff3NN3P3e5BfDT/fIGttqaegU10CB88LnnL55Dw+9QwOngt8dfL1
pvWiPuSH4EvH7Nw1aV4oPS+4UXt8jMdSDgvPBW69b2+oQGYU+Sf4l9Ubkyt+
X2DhecE7d8yrmGYUQX4Cfn9Z7jpV5RSyD9ZHde8nc9dt/8/6OIlvmtZkKeK8
imeWtSzv4MBu0NMy8UhgvmAK+T94aIZtxFrBCJKHHosJa6MnjmngwM6QdxWr
tNrMvkL+Bl4bcGF2sNhb8h/t9KK+/6tfWshv6Anc2caB3bCetjl/6lIpriQ7
gD9dY5T+Iy2P+gM9X/cEF6781ET9gfzkJ3I739zypXkx3P5k9tatgz1685/Q
uIOf+xR22DUqlDjWWVb3j3rD77XUf3CTrUfK3aRqyP+h5/nhaV4fJl8iPwFP
lzSPnhd+l/wE3K3Luj1DL4jiA7jZ6RznR+xXJI92X137sF54sJTmC8kvlJSP
FHlIfgW+Vzm+dlXjIfJD6On1jlFYr/mB/Afy+huT5po+9SZ/A9eU+qwUdySY
k/Df/FWCeHWKc4ns09c0LtAfmRZz35W/guYj5I1HZU9/bWdCfgLukcjnOu7C
Qxqv4eeWZO+evHvmuOBMikvg/U4zNI5sKCSOfENbZ5Dvr3shB+MF/tcq0P23
fQHNa+iRCpyvZZ/yhNZT8MzdCdpSwtHkn+CmK69UTjfIpnUN/HWU2EJztSJa
f8EVZtjMPSj/kcYL/Tn70OlEhEIK+Tnk0+4qrdVlvaN1Ctz6ptpybl8uC/YH
f7dyfWfarGLi0L/9xfxlh04WU54D+cL+ql0nJxRT/IT8TQ/heytV8mgeQb7T
YKII3wRXWgfBJTa+njNPNoXi6nBcl2Vn7JYI4TlbTPMI3NwlaltcVC2NC7jw
lemVdU3VlO8RZ3n5ThjPjCPyrvxTwbLWB17SvAM33Zu5qNDkMs0X6PnxctfO
x3mlNL/Aj4nGXDMxrKf8GfzDh6u7t/ZU0nyBft0yid6Ya340XyAvurxKU3Dj
e5ov4BFRd8QyR1fQvICeb39M7NavfU7zAvKXTPdZqM1g8kxwv0Clt1JnP5A8
9Fxf1rB/gtNRss9wf+XY6/hUa3ofNVAeAs5pPVgppFtCdgOfdP1E8iXVSLID
+LWEbp7E9jryW/Agx3TVzzqFlE+Cj9n7q3+PzD16XvBbHb9/FpjWUN4CvuhW
F7fWJI+eC3zhk0y3zgRf8jdwr50/RNvuFJK/DY/DArZA4UqfExOr6HnBXzXW
TurLKaO4jXzVM7nwuOKhNLID+APz6t4xZt4s5CfQ8yz9ZnBpTivZgfLk7rrz
LQpR5A+Q70ziWpxUK6D5C37pjphMmnADzXfoSW7bHC7VEE75HuQnH7N39Z3d
wcI6Dn5raNen9eIdNH/Bd/d49yzh1pOdwTnXtGfKNOSTPNoV0lx1St0tmexP
+itP7sud/ZjsD14+2dezNbqY4gP0PCl56LUp+TKNy3AcUmQf/ZY773ZwPvkn
+O90u+XhoWU038HPP9wVnheRS/EZ/PPzBsfeZSG0noLvr9RbK1KaRH4L/s/X
intKU0pp/oIHuccF+/lk0foI/mtCq56OzR0aF/Cf4x1ep7xLI38GH2tiU6C4
n9kvgKt1yYhcN0wj+4AflJA+5eTjQfMa/FrDGZ9N37Jo/cL+otFv/WC7TznZ
bXj8ldk9Dpz+mfUtZB/I/0kcL6Ds+4LWKXDz/PGftmwtJH+GHvdsVnl6TCfZ
B/IzLSonrhbMIjuA/3Vxjfq9kbED9Gg3rTIzDWuk54V8rNfZhvuyHrSOD/87
FXbjw68Gn1++o+cFj16ukHW5IYPmI3j8PbsHqhwfWpfB59j6H5rbF0rPC75o
tP7XKsFkmqfgWlVLAjoOvKV4BS53dNOJa0UXaf6Cm/tc8yjgRtD8BV8/QWHs
9TBmvcb+S8plclnrkQKap+DvNbU71+oz8xR6bCMCbkq5ptA8BZfViD5w0yWC
5KHn0Pk563eINdA8hfx+SV990eQrNE/B1Y9mXGmIfEv7O+z71EVabv9t4VA8
HNa3mJ0z6e3xjB1t1C64wgv37Zk9TdQu9PgmmUYsPeDLGa7XTKH912ej3NhL
H3qI4z2vpVMezN+T30f5APLzFSFWO27e43KG8/hfVFd8VDT6XqB/B9XxkOdb
Bdxb+v1cD+Uz4BNXvb1x1biL8q5hPxJnH8hwunxMo4Xkwb/pz1s9rqqTnhc8
M6jonYVLE/ln2/K/Cf93zuNlVXHmR2cL9R91qj7eWq99+u2UD0O+Sf/s/d1q
DIf8PzIbxhh0dpIenAelrrb6/aqjmTP870VovYuKnXQuf3wrcdSLEk6azXz1
tZf0gG9o73hjWddOeSC4ZdCFlwNXuliwM+otvIv8j3/l7yX94DaWxh5npXtY
GEfM98mFHVf3JPSQHvhnRFTl/HOJHSyMF/xn94taZ/0zPVQnBN8oYXZqrlEX
C/6J82LW1LQFx26/oXMx+Jvzqz28vscr6Hlx7ib7qOty76EGsjO48YzjopOk
Gsn/4Z/7woIFpDdnUP/BtSLlekb96GHBDuA8/PHZwsI9VK+AP0tXLzAr8+qm
/TXky2dyVMIu9FCcB19yqvn56gXlVB+D3wYGBa28pdVLfg7/HzXmdfrRV23E
cU49OF6or8OQqadBT8sJ3uAhtU4aL+j5kVUjN3S+gzjkX25POVAe10frJuQP
i2zaeMyCSxzyAXuntE5/00L5CfiYcYet/xzvo/kFPcJVOmc6eFqJo/9yxSuj
XA06ab5DzzJ73ar+5j6yM/GMjFQHh26Kq+A/r/wsKzjcR/bE/G2p2hl8IryH
/BD70MdDnKC5aVzikD+seHzm5+Zu2heAb43QUN4a30FxDHpChLckKEg2EYe8
0wblPuvpfRR/cG6+5qJLf/iORjrXgHxco5Cz5MdemhfQbxbgc+LNlQbi0PNY
f7l+sEwb+S30rHq6/XC8eh/VIVHn/+IoafzVt5OeF9zL4pbxzVZmnmIf1xzs
OnftxRLyf+jP39A5/v2OXhoXcM7Z435GX7rIDtA/1uTCd7eGLpoXkI/e3awt
ldFL/gP57j/aceP8uuh5cX9A64Sh37QeLj0X4qr2hMU2F6M6aV5g3yq5fYwL
t6yEOORbPQQlrf8w4wh+PDFuneqvLuoPuL/tF22bt13kt+AGmuvOTJdrJ78F
Dwi50qE2u5v8EHF+3Ra/zq9Pe6g/4INJZqsSq7qJY39n6np7YpEvl+Y15H+I
HndZFdFB/on1YkPX4Jpg0VbK66j/gxFCmjLMfIeepqOP484KMfMdvPiPunDH
mhbi0D913LOfj9mNNO+gvyvG4ez+V13kz9AzqlW1a21aL9kNPOPvgr+uBZ3E
8bzx3HHWovsbyG5Yp37blTn06/TSuGPfMXvUOx//5e3kt5DfYb156saLzHyH
vEnCwa3P77TRfhDy0uf23Kh0qiGO+w+5z6OOZR6qJjtDj/9p6V03fzeT/0DP
oNo85WOJfcQhf5Pv3q+Jhh0UByA/X3ucomtUC3HIv131I+af3VyaL1j37/HZ
zlA0aCX/hJ6FJwzuXz/ZRxz9Z+//dj9iERNPIH9pygf1B6bM/EK7Qatdd6q0
ttA6C24z631sR2o1jQvWfaH0J8bLDjF+izxBecfr9zNSuohDXl/C7M2LR120
v4O8Z6/E7NUVVcQhX+43+Lgxpoo51x7hh/nP2r6+107+DD33zo3/vqueyU9w
L0Vzfs3lRfmMn0NetWjZTz+LZuLQL7J+5Rse/WayJ+QFekMtf3v3kJ9D/uYy
aSU9ayb/pHOu83eNinM6iEM+nV/sMie0g+yJ/Gds4h3+Es1e8lvkUZv+rm9t
y24jjnsvjpbbpikf6ya/hZ6bXj3rpe1ryG/Bp1rPD8xY3Un+Cf1reJfyhz5g
4iHkt2z+0vrpLbN+QV5DTjzd2IFLHPLfZz4SPxHWQvYBX2G20kLKrI/8DXoO
mDtxjWe2EsdzHfv8N6DxaCfdn0S+N1d5YYRcwWM1xFvoX/1VVXQit4/iHrj5
iqAro+yZfAz8XvWNz98O9FE+hjxz1OhklwlK6XTfCd+XWG4nsqk0LoX5Ts4I
T399/qVlzFu6vwTufDXXynZ6KvM9nBFu+uEOvyNPIt3Lou9gnL0qdnogme6R
0u90jFWa+/JcKb3fQd+FuNS55W5FBN1bAz+bPWq5QVE23XMGny090PbQM4fu
l+J+0Zz2Lc6eOwroHh3uMQr1N9V/iMyn/oO7uPxcwlYopftX9H0A51udwtkV
dP8NPKnxhQBLlfkuDfKW1YsF/oZWFjG/HzTyvvZ1/u9HHv4spDiP/Ofr/rKW
tf9Zd2AH6FHpDhXW1Auj++TgHfVLZun9rCQ7gF/Zn6NfrZdF9+pxbyr8SWvP
toxCGl/kG9JXwtSLhirovivk92wvqle/nUL3ISFvfmVutVxTMY0j9h29pvl7
w44x97TBz5Z2KrTm1dL9Z/DT/V/uLdEooXuz4FsOs1eLLksl/bjXF/RlwsPY
zFS6Lwre6y58IG1MMdkH/NSW13tV67JJHu/FbClhG+4qjSd/Bn9+aPTjgZZU
GnfwtKy3S3XiUzj/+76bCntGYsgZ68/J5Ffg51Ktln5KifrXe2oq7NZt5jdq
dFLofiZ4o+nsjBexCf/6rpoKe17W9WinVcnkV4gbG7Xs3sVeLSU/AVe7WCXd
1RBB92DBtUOenDtVl012Bv9huV5kYkAOPRfig+64PWErHCvJT8BrKs/656/L
p3bBA6pkpwfu8ad5BP5qatHPvPoS6g/4iv5SA/7vb2m86Hu8on2Bd+dnkx3A
g6+HtcWdrCA/BFcwM03fV/ee+Y7WSJz5eGhfe8yYFIqruK/o8l5TU/vr/STs
i7Ffk1Vy0P+9PJXqjTi3tfgrOm3LjzRar8FfaN7KSj0US3VI6DGI1Cjzf/mW
1gvI75fweP7gdirVGyGf5mvnvM2BObeCvPyTnNVejlm0noI/UTilOs4yi+qN
0HP3z9Ew2yWP6XkR9wKNJx11zn5Kz4u6U9PjujRpwWTqP/iSiQ8GPKZHUv0Q
+80H5mXmjloVpB9xLEMtVKZCxUUN+hHHtv/V2z9PL4HqbDjfrP1gF8EzOoTs
CR57WWTns8xH1B/oGfNwmveZdeG03kE+3OND+9XMMMpnwF+/aB6rrfSc6pPQ
EyZy+FvThfdU74J85e6yyU2qwVTHBrftW90qq+pNdoYeN5vVFhFb7tH3qPHe
vZ6Gs1bbERmyM/Zl/gW/50weF05+ReeJkuycUSsLKJ8BNy+bkLa9MI3O76Cn
8fQNI8HcbFoHEYeXW+1dJumWQuMFPeK2Avyl3GSq94JrcbI47becqd4L/Rn+
A/XN8e+ovg355be65n2LyaU6LXjS1ppPY2MSqC4KPenzZtyOcHQlP6Hvlzb7
bmnxvUn2wfnd7cfrA9l3XWh9hPzYGsudit6FlDdi3/T4m7FRjXgj3Z9HnN/d
1FQ626Oc7Ab9wseOxa1QDKb7sdCfYXZp5cbxhWRP7PsmRg98yHTPpHmKds99
EvGUGPuBzk3ovPJ+nuoOlif5G9rlLmQrB0Xeo3gF/VkeW7r47laSnaGnZ6HT
rMjicvJD8Eol1tK2oizyN9xD/nlbP9ir8qka3pcB3+WZFr9vawXtI7Cf+l3x
5pf8m0Yad3DX79Gl177k/ev3AhTY/kv26XRH3Kd5jXMu8TdPVXVLn9C9d3pv
14ZvzPmAZMrfsC/Li05N5y+IoHmNfdYa9SSRze5v6VwDvOWUetbYg9l0roF2
Ld31J/BtTqJ1hN7LTuloG5WZTf4PPfe+RFY/Ni8m/yfOG3hxtthDum+P/oeu
W8g7JiOF7Ix710mGgq7Ky54koe5K51Y+ByRc51aQf4LvqbKRjTxWS/0HLxQK
VWXFFlKcB1e/cPfjubdVFOfBfaf/vFj7sIr6g/vbHra5Ow/wPqF5hPOm3V/9
xeOd3tJzIX8YP1Pnor5GMvM7jCP3t0smnkvYv/QBjS/2Kbp3m03bdFIpbuM8
ZYHLwC75m+kUr8Brtu3pNxKLo3Mr6Onvzf8YlfmW4jPk3++yDBEUT6PxgnxV
6bWDefeLqY4NeWPbxe8zF7+nfRP49NGjE91nvqf4Az2nx4ze1r/+Mfkb9lNL
Jhpm2A28oTwQ+cMtrnrxMvsi6g/2TZNP2QtdX19B8wV6AhJ/p0l55dH5COrb
T89uiazd00bzCHyM6PY1l08Hq8FPwI9/yfzubN1N+1zwSab7rjuFM++PgLe8
+f3w8ibmvRXwHbfa+5zbe+jeBfihKtu2ew2NdH6H9z6uWdyytLOqIz/E/cBp
ey1c1plWEYeevPJWJ6WSDqoPgL9/FGW52Yn5vgF44TExF9XZ3SQP/dJVBtqm
inVUTwO/4KD320eW4ejnjIQGg0dZbTTu0M/l+bLGPKGD9rP0O61xvDGBcRVU
n0S+ZKo01iNtQy6tv8iX7IQUtVZyGolj/3jK5PeBJJtWmr+Qfxl/WF5rSy2t
L8iLzm9T8Khd20h1Y7QrZr1O/siZHMpboKc291liUCtTt0S721lt/Vknuui5
KJ905+h++1hM58ho90bn0hO+mxrovgHyvTctBT+d39TSORHk+9e+lwmobqd4
hXxv7XeVGUdPtpDdwN97CpwL8GglDv2i/F9KGkV6aH2B/NmOzRvEPBk7gCcW
8p0yaG0hjv4cmzh+nPKnXqpfQd6Ld6XxDBvGPuDVNnn2m5WaiaM/QxY9m+UH
O8jP6T6k4Qnt0+LNNC8g/znVKq52ayPFGeifbrZc1elME3Ho8cnX+9Vwian3
0j3Myc+Eo9Raqd4CfmfQ0WuZaivJo900G/Gz14OY+gx9nzNZv1LBt5vyAZwL
5KiEaPE5cWnccY4wzkLE8PKneuKQP/5T5qBeQA3FJXAnI8unQeUtxKEnyjlp
5Q/DdjpPgfxP/vtiNmO7qS6BOsArEfnxIhN7SR6cvd3ojGpQH+lHXuphPYvH
WqOB4hvkrz5MPSWp1kPrC9oNEZpWXX6lmTj6OdvMw+lZQyvV9yC/9WF2Seuk
Njq3BZ/RrCx/YFEXcbQr9+qGm1EEc44D+azTM4JnCTL1QMj/7Hl1/cQ55jwO
3IhHRv/Jxm56vxh8YvzbZfP3pFIeCP3tczn+7lWF5J94LuO3+uU1b5qIQ975
3EPL/c+5FIfB1x6RHfg1nznXhh6LfSeNGr52UvyE/L6WJfy/PJnzHfRzibfP
IxXFPpIH32HGEygm20f6MY5SPLdu7vrLpboQ3qcbdIkS3OnO3JfG+YhbnlRl
j0ch5RuQj5z+xOLEu2dJ8B+cj9xS2cEOV2XOMSF/xMUtZdyUXoo/4NJjbUtu
h/ZRvR08d6vm0VaNHorn0O9VHuHkUdFKHP28eLp1z2+PZuLIz9dpHP1x/EkT
+Q/0WD2MeTxZq5f8EHoMpULKdWTbiKM/Lw/eOZQyqZPiHuRXf4t7Z76hi+IY
9MteunjoansXxUPo4VnEHUi4zNR7wfk1Qver6HZTfgX9gbfGxypJNxGHfLL2
ljMTXVpoX4N2j4f2ietllhOHno28CaXS5qXULvYjrqcv+vePY37vjL53VzT1
pJlhKsVb6OG7nBE1GMOc76DdhwUDNevieylOQs9cxfTDx5f2kTy40eX6TVsV
+ig+oz/+vyV2llo0UP4M+f374j4vXdJFcRXtFgoEjXZ2bCKOftYdqNB29OTS
uon9kbPLjjK+t1yKezhXOnfkkfOddubcGfI5C3YtmeXRQhz7sogFZ7VYYcz9
E8g7snt+LYxtpfhJ51NyXRon65sofkJe5sKc/tVDzcShf9N5UdVLnzspfqKf
J3PCH2n+Jy8Fh/w7XtEpy/RbiKPdu2pHnGyeN1KeAz1jRY7N7WY1Ul4E+bTx
XP7IBbUUJ+m+zRL3d3FO3RRX0f/BtHy70/dbiaM/X932qTcNdZMeyD+LHFz6
c0sz1dMgL7FryeuPJU0kj/2gSeKppmeHumgfhPqAYPyi54eUKym+0fiuXnVy
rHcTxUP0/+NniW97TZlzRrqPJPxCPPoQcy5Jv/exInhsUBxzTwNce5Op2j8R
3dQu7Dbt9crlmr9bKH9Gu9OEDsopfmXuC6HdVo8MH7WrTcSh35jTy988nrlf
Bz0RB7fvP/eliTjkZxoq+PmsZM61YTcj1VR/7rxeqrtCj1tfkvcsLnOfB3yW
399xUaHMfSScA3Y91sypNG0jTt81Ug15r9DXyPCR80HDT71Tg7XbqP6M/XhQ
Z0zdbIdUiv/YF1fPlFfa/buO4j+4UsPLeIEnNcw57Ei7ikcOcjnWTPxHP0PG
+ez1/tXC3C8dka84q17TkMkljnPVe4W/zu8yYd7TgR6vReYmExS5zHteI8/1
WDl8625xLsV/9PPxpOq9dwXrKM6DF/jLPLAuZDj6849jpbrJgnaKw2hXXG2b
ikRFJ3HosZ01kP8qopo4+v9h3YmBcC9mXwZ5ldvXHuZdq2POeUfaHZjk+6ym
r43iMNqdG2Q+bvftHuJ0D9nUbnHTxTqKz5BP//TCPripgzjsc3owI+p0egfN
U8jLbzQWE1buZn5XZUTedc7vLdOFupnz5ZF+fswSGDhe20zxHHpE3vFuGpvZ
yNzXHZHfJu5dkH6gjvoP/fPPnVBOMO+h80roGXd18aNJs5nvpUB+SuSCHYp/
usifUZ9Ze2Gpw474RuY90JH6zIrvQ+ZSnBryZ/Dj16XW+WnWEYf+pzPfC6Y3
Mfss6DfvlFOblNlEfgU9emJi8lqGtcShp6plc+f+v92UZ4K/lnnmNaO0kdZr
6BdbPHTXd8P/N44j+s/N6FHJF68iDnlemR9qQjHN5D+Qj7CT3ZJYXMv4zwif
YbtQYVwuw+l7X7prvWWDme+DoT5ztXqgzKOnjNZN1H+SXu5YVyySR+sX6j/m
AWf1sksbieOc63LWyy725Vaap5B/q/Pn5O1TTL0O9R/jk4vsHq1upDwQ7T7f
vHyqyapcWnfofP/cieClvG3E6XtWo66G+19g1iM8l2yAXvBl+wqKq9AzOzne
OLe1mPb16M+EjcHRDzc20L6Pfj/F13PFXt9ayh9Qpxo/bt345vNc4tCzX2Bc
oXtFO+UnkM/flMO139xCdgY/YdIkWm/ZShztrr72Y6LiIHNvEPKPFow3L7dh
7IZ2d7o+3nOom9l/Qd4292T8KcFm4tAfbiqkm9LeQf4JPZe26FT9ntpM/gw9
dq+GjqVo1NA6Cx7nV/q6ZGcTcehx7NkQaH+e2R9BXji0/Ov5Ga20PoK3bnUT
GCfKcPTzbmjTwIdrzH4Zda3Y3/n1N6fWkt3An7Wk3/V7XEcc9a7g38H+Z+Tb
yZ6od6lvy9eLeNZOcYB+73Kg/IZgI7NPgX7vJXOE3d7WEod8dOSsT2NPMusy
6ks7B5tswvqbiKMedWjwm7xYdxvFJXBelvb9RxHMd3KgZ9GX/SKDAszvjKB+
IqW7fu0RpT7qD+S/aXQ1j65qp3gF/duqo92EMpk6J+RvBbMvS3h0EIf+R4d8
Vz0qY/atkP+TelFQbForxSvoV5woKdpt00nzEXpkX/UP5vUx6xrkl19JldFf
1kvxn+7b73e3SartIbvh3kXp1Vy203/yc9gN54aV7bHP5qs2EYf82Ggj7fmf
me/kY19/xXlzauqdXopjkP97Jud0b3QTxTGqk8yNPvCUyyU7o93kuM/Fz4KY
+Qg9r7W73A7NYb7LBD3fLfU3hSxj6h7QI1yedXa8Epc49DhO9Jixdipzzx/y
SZfuPfC620DjQt/RkpqQ0rWyjcYd54kurPNq+6+U0nscqGOctIyxmhbKcPRz
956GR/8srCCOOob4k1HuNWcq6HnpfVjNvPjT9aXULu6ZOP6OusB3hBkv7Cvb
FgkuDhdqIn/G/vHb5a6CfifmfQHIn1h1P8jiQiP5J+SnzLwp+XQBc/8K/On9
qTdiZZj4j32o9VK9anZSKXHsZ72bBuquX6igfmIfsdjq1W5ne+Y7jcjPpTT3
63Wo9BGHfNmnF213e5h5R+/HufQcLUtoJ3+AnvtFeVrLq5jvX9E53dR/WJNO
d1B8QJ7Z7i8xdHygj+yGPOrsiq/GAgY9zPdjR/IQ/g/a80NVe5h1dkRPNb/j
JR6+PrIn9MioLjU8NcDEB+i5t15Ic3tZD613WE8H1ujfiZnUTBzrstXVIu7G
fuY+Obhcg63DIKeX7AY9gncUpaUXMHbGOlIsN6XD7T/ji/5DXiCsrqC7v52e
C/p/bg5c+6e4h+wJ+fGvbi5uieggDv0hlXyqb4uYuge9D6WR9z1UuZXmF/T3
b9nN3ezQSftK6DlW61As2d1D6xfkf1UlNdmqM/s+yDtnGDtOruqh91NwznLO
tOqbybtMsht4ieH5eu8Bxg7g9kMXJeT5mHoOuEdLxhbxc310/xbrXa7QkLKJ
LnMvGnG4coPm1Yi5PXRvBHFYz77f5YlDDXHIc/fl3W49UU3rJp3vOPirTl3H
3A8H7/moHyV5vZfqZuCyqWJ547jM/Vjw/Oqlu+XVeuk7WuiP0YU23zqfPrpv
AG7p6Zqd+oD53THw1lCX+u2dfRTHwDNY3irdzyvIPsS5Pq4VBsx7AYir7Jnt
Ho+8mPcawMusZGzVW5m8AnxQaQnnrQJThwH3LHouGZ/XSd/7wj0fGSOj/Q5y
RWQHxHkLQeU9NX2NxKGnTyJRMN+lk+51IG7f12B1zvvZSxz3Z1ZsUL3HDjSj
cce6kC5xt+aGYCk9L+rSH3bVRY4rYupj4JLnuy8rbWK+54Z2+6dnrR6066Zx
AU/K738xgaeXOPqzaOuz5dWlR8lP0J+mNzY9NwTLyG5ot9Xcb/3EtGayG/QP
CJzWH9jYR+MO/c0nX32UbzWjfRP0V1lrn5WsKCV7Qv/hqGSjlDvN5A/QP2WD
T5cIH5fshvUuac8Yr6dmpcSx3hXfzfFf+J98D3YD3/VxTvUOS+a9HuhZdHPe
Sz7LMrID5KtTbhZ87WDmBeTfJvnZh68oo+eC/OuG5a83/d8+cWT/Tt+rfBdQ
9EqI+R4d1sG3baWSGtVd1H/U56e/eCw6+jzzXiT43liOoWFeO40j9HB+Hpgp
Psi8F4b12lj/x+6ub43Eocenc8e4qvBOGi96n9HvZ0a/TDeNL+4R6ZVsODYl
vZCeF/q9t6c3DWUy7z1Bf0LmxYuLTzLvg4BPuNLS6ynQRt8LRbsSqhkn2f51
5P+o1wnIiHzmiDHvfYD7R63u27WV2ZeBq7dH9w0tY865wBeLPva8eq6X6qvg
9U0XPgqUN1OejDrkTkOzs4o7mO/lgnt2m9//k8Dcb4eeKR5XNn3S7aT+Y31X
OHvXs8eQee8P3K6opCX7FhPnwVlWoysLvGoonoPzLSwbfLa1k7lnMsKN6qOc
3yQz7+uBdziebZB2YN7XAze8Z7T785kuuh8LXrS2fPKeiFzme4Aj+YZaWLmA
9Kxyei6spydXpszTX9JD92TArZ1i9RMvMO/XgC/9WfizdTMzLuAq6q9Ujnoz
4wLua2Hy40MnU2+hvGJR2cqtOkxcxTquPpa1bdCjj75XSfvxOS8fDv1HP8YR
/HRo+0mTViZfBVe7GTqj+WkF+SfJJx6UiN7LZequI/tQvx3jh1S2MO8ZgTeF
Zl95czCXqXOO8Mrpq14usa2j5wVvOb9gnG1pCVP3G+GeNbGrPm+uonoI9n0a
QQapKxZW0XcSwJ0teX0GL2XT/T3ws+xjAoqqDymugrO/2Ta8b64mO2Dd15u0
o2JTQjk9F879uwfShw4rlVD/wfevK5rFF1NH8wJcdr2eV/XhJjo/BT9svvuM
0so8qv9gnV0ruEBn/5Niui8Hvrel7bOZVBrVScDFf1aojFNl9hf0PcYL/ib/
xH6g+YV9VnG/nKeqYCXd8wT/+sxt3wnHQrIz4ryalh/f7PFZdN8P+xTTJcG7
Gs3e0P1wxHnxgUSFUqvn5P/QY/dK6cXq20VUzwFfZ1esP9M8j/Ii8NcCrmGy
J1KoP7hvafv2srXGx0DSD+4fNkfzYHsY2Ye+Y1NVe1bJkukP7hnevT33zpG8
DJqP4DopGeev7skhPwTnNouqLUzOpDhMdV37lgqxAeZ7PuDc5yv49k7KJf3g
D57pmr2eVce8tzXCD6nVC97xKSH/AZ+3M2FG9lAl+Qn2BWLBR2JjtKvIT8BV
5npOeumXTfchweu+lV7u2/2Q5jV4zBavKfvGMt/5RJyZUOgQfyST+b4o6mNn
bySnX0hopnkBzt+XOfW6YAn1B5zvwuI+uR2ZNF/AM50MXXmd6qif4F1xV7XO
lvrQ93jB1cqtN5aN4pL/oL46dvmRwspTBWQ3ur/HbrHU0mgiPwc36JplsUog
j/ZTqJslbnOIMSpppv0U4k/yrizDfZwa2h/h3lfg/tiDq48E0nv3dM9cJ/Tb
D80bxJHv7RvbtkP1Whjdn4SfL/4Zonl7CqOHvgelU3hKaTrzvT74M+fe3j17
VF/TvENe4VZ4uOX1EkY/vX86pmiC0exwipPg9ttvx8r2p9L7KeBPuxOlY87X
0fNi3RfT1FolIZdM9SjwvzN+2A0NVlL/UTcIe36Vt1YqlfbjmEe6BXfvs56m
k/3BV3Qqd4mUZVK7OG/i6zc26R0bzZwfjcyLC4tLBz+Z1VC7qNvbKBZMb/4W
SP3EuO+x7/eY+6KS7Ilxf/KNP6uspJHWd+xbfV+k7J66n3lvETzH5vT9T7d6
KN8AvzVXV0bbgTlHpt/d/rjT0/1jG+27sf+dnmS7ep1QN/WT9r/ituypt5l6
Pu6P5bk3X5r8vJXyZHB9myK7tgddlC+BW1V7HfrZxdTfwNXbJp55v7ib1mXw
KN5z0zw7mfNr8Kw9USFOkzoof8D61Xr44fdjPq0Ul1CXu1E+uuyGfAP1H9xT
UNRzwYt2yluw7qwoiFONTu2i+ifkIzfeG68ux9y3Ae9eaxESM575PQjo+bvh
SfeW5k6qW9L37lpLQtYUFhOn3xXtsotgPWfOxaDfdsGfhOd9zDkC/e6n7V6/
SRuY3/9Cu31TruTICzD3AdDu0wslfYmFpcTRbnxMs3nyzWZ6bxHr6cB+kYaT
2YW0jmBf4JFgPdVIhplf4C2/jiRa/k2j/RTqjVJSzWdW9PTSuTb0p+jwOAYs
bKPf2QFPD/jx7LlZFfkh9F9NOdbnPLWBOPQ7hpf+1atmvh8OnrQhIL3nZDf5
G/RrN772s4/tJT2IVyv4S7acjqijfBV63tw2KLL63kP3lOh3PG9rFOdJVNB5
N/REzll5THmwje7jof9ClyN0DDsLyW+hP9m/bVfvWqbOBj3yJWeV06Tb6BwZ
7Wam3ZLfmddEdS3ESWXbo26OKY3Eoee4saO/3dFOGhfUVzNkn9+zfNhH9TTc
03jbve/XFjmmnon91FW7nPNPG5j7POBSiq2ZQ+bM+SZ4zbGlu8OcmN/BQbtX
jv9YtdyfOY9Du0l5787pTmLqP5CfyXtarruHOWeB/sqA6c7qZszvOND3nw/r
cz7sZ+5TYT+llfD2yN7udua7VSM890PcNplNjcx3ukbO64fGFXzRiGlh7o2P
8Ozz62Lr29uY9wWwr1xe5HjwLvP9Dfo9rJ4Bsb6zTJ0N9eTls7+rzlQtp/6D
j7pRmLdgTwPFf5xT53vMdbtQyNyLBj+1rlfMip+p94J7FtRe4Ndto/gP/urT
uzFCr5jzOJwnBl4xrpnn00rv12CdqveKy+mMYs59kI+Zqb1Q1fHmkh2gJ+mo
osnHwXbKW6DH4qqU5QEh5n4a5JUy7JO0rnVRXAV3GvO3akZVG9WlkV8tlPiT
zRWsoueF/oSf3xZEpbYQhx4rK1udOAnmPhjkc1w9om5sZeqQkPe47PPid0k3
xWFwyS/S/YvUG1mu/91/zmKXNPLvqj6zhD1NM0P6FovZ70Ne4f7vvbJuzPks
1t8dDlEbcj4z8wV1y62ug7YOhcz9EOybqmdMEtPvZO5NQd4wf+nsSY6dNH8R
57leh1c5KjD3FhDn1R9v2q5Z30zxEFxJ792qqSzm92KwjvxSNzJUv8rcD0F+
+NO8XOqqaxlx7LOm3HufZDS2heY15I17l9z8JFdC8wvygvzivstymeeC/Pqc
UOGlKmVkB8gHrNG3VYtopnYR3yT572ydU9pJ4w7u8dDw2RJ+Jj4g3hp8uWox
aaiB7IN44jnqvf+nJ71kH3BJZ531BTE99D4m6p97tjXra2cEUt0G/K7ozQ1z
puRyhv1Dhr3r8lcZHp7p7PSp8zYs28t8vxHrgo3185477wPoPXrwoG/yS87s
fc+CnmlX/5767/eh3z/y+WVcxNoQMM7fYp/k/6PrzMOxfL7HL1QqlVSijUoU
EVqV3E872qS9KCFpURJSSRtthBaUVJaipJKyJLntoey7kH1fWmhVft/3+znn
3L+e9/XpH9f1uqZ55j4zc+bMOWdmeELLRPIi2xV5yxI2L95iw51Pwfn+ZWFK
jOz1PNoHoZyn9t9sGGwVSRx/d/ZLBdtTPW+pv9DO/6n1J9V6/TPqX/RDzjLv
2e36Opt7NwT2KeOOTr+m8X/6DTnamZNNdLLKIhtoHh26LyLr+X/2mshq689h
Rg3Ufjw3vdru+E79lAzieI6sq2bgWWuxt/SuCs5r69s9GWJ7Kuh9FvQXqc/0
CHxQX8fYj/F4Wh7ZzNz36u9vOWYGb1TK4VzjZdy7jVjP/YPr296YNdC+D+vJ
3GywXE65idqP9QTMbR9bqtDM3X8O/rqejS6eLxsCqH+RB3ZOeLmxJp3qWaY8
+MOKf/J/jdabK+hXMcLTxQbr5k3iBeW8i/pnvS08pjfF1LSAuEx4v5PyAzR4
HfpG7+6fK2Dxu1AvxdXsXr0zt4a5vNllTR+hOrpn4+QEjTElvS8YY9BLyGt/
H7EM+hTPHNtYdERI6A/xAs2+u0PHJDD8cTyA9hce8fPNSq9fIz2GPHyFwfvU
3mo2uuV3X6FTXDwuWlHD3XB4B/sH7AGs/+mJPvWNuxLYJSOFf/aelCJusuFw
6ermCPYS7MexHuMbYUUK932IY3mbr+9SBnRbszn/2ktjiMuqKS6T+fWckYL1
COtpzXdeIi3aweSCfYVcerzPY8PQWsZGr39rLzuR+94LQn2GXXxI8sT9kbLh
ucDlqdX0XcjfOek4lRxuZ/C7kJ9aGGxgGlnDYPuRN4m+SUgc5Mdg+5EPULZ+
cq25isXfxXs/WvTE5N8FZ7HYj8i1g7d1z44tYbEfkUuF/Ylx/1FC7UTe/13/
c+27SqmdyBPmPVW73ZNN7UQ+xbb3sHeoC7UT+X7rhRcVlTOpnbhO3bVLXqA0
8wODv4vcZI3VYM2yZup35PX5V0yK91dR/9L6+MS9fbWyL/UvcrP146Ijwyqo
X3Bduz5SWvX4tBL6XeQ5+TFPVfrX0e8i/8FKXtTSLKXfRe7x/JzW/TxP+l3k
X1w1fq8VKqbfxXXqo7O82ZstnJyRL5iqphYxrY7kjFxUPmrLKYtSkjNxcbsX
F395kpyRq3utYvcpF5Occb2zuapyJGL4B/pdils9KZ6xgW2m30UuZev0JmFb
Ff0u8pxKXTXhIb70u8hf2gp/LrhSQb+L+e2SV7edeTsim/QJ8s/MzKtTR5SS
PkF+U3PWEUODUuoX5Lc0BnnMjy+lfkG+a9M+lWlzcqhfkItd1VT/PcSV+gX5
LMXUUxVXM6lfcB0P+SZSmvq6mn6X3gFf08c9YVc7/S5yqUVlIQcf19DvIp/Z
V/3hSFE/+l3koTax9g7VVfS7mE9enGj0SLY9guYp8iEHooaNeZZA8xS52UnL
6l/lCdSPyAOWeCk4KiVSPyKfnT9td11VJPUjcl7wxm8L3h6mfqR3q3VGeFaW
v6B+xH2Ksc/uF0+daljU88iF/tSy7PVr1B7kjSoSb7Y87aD2IN+rNON0sWMt
tQd5lcX2zyL3fag9yDtlLp9m71RTe/D8+PGZG/vYSr4guSG/4PLLY4xGPMkN
+dB1S04s2xpP7UTu5vUqb55/PLUTeZ1XtbvvpxfUTuRh8VOjY8dbUzuRXzpo
n6Qp85zaifugPK/IxhtZ3Lii9/ISql/6nebGFfKlr+Q/y7PcuEJe7j7vy5Lh
3LhC/sHn46MTn7hxhfug9n0BYy/Oy6J5h3yspnP8YLMSmnfI77WYfnDx4/Qh
vaPqam25exA375Br3JhveetSNrUTucc+tYAuXReSA/9vF6PYMMqO55VC9f98
yV9/2wTW99NQPq9cVP9cdDrVM1Yje/e/+TXzz2w96FNF/ZgH62CywHoqBeWl
98R7XO/h5PN9W9vwqP/bR4bpfzEdMquA6lkH69QEgfWuG8p/tV7TWnSiiOqp
Gf/p8D/xgZCJXmu2HHtP37UA1p3NAutXJZS3K1V59P7Ge/qud9Xd+f/mv9tl
aC/o5epRhHWkTGA9SoPy0yaN+PJIv5Lkvx/2ZfabHqj29H9M9W8z+H3znzjD
J5OOYY6X8ul7L8J6oSaw7myF8rwFgx8mC+XT9+Y879X9x74u7CyTfJHMyf8P
6H85gXUkG8r3dBrk15dW0zzyg33WqZ0za54pBVH9y/79fwo8vzXKdurDkmnc
4v5i2V7vqz+/R9C4bXLo4yafPvn/1r3dn1Y7vqb2HAY97yCwXiyB+oNj6uft
TUog+cTYiYZYbpvKE1PvF5ehVkPybwK9HSig/19C+dhu2bLpY2tJ/pfAvyQ2
TPz7k4G3qH5+PGcaT//zd5vCjkP0XRhHmBi0veHe62T6rrx/57cyTzs8YsXd
ycXUHiPU/wJ6XhXqv7GmpNt44V1OT2oOGKgrOZ0XOna/3r0Szv7MA71aJ6Cf
A6F8XuBhzVWFnP1pA34n4/kKf+xWO1J/Xc7sa/T+qxov7tyXKd7yKf/Rq+8E
9KorlF865XWi8eJ0qkfnT79ZV800eN+WV9qLBlcxf69rGryJAnpyOZSXvPF7
88eB3LrA3/fM4IWFrpUwFCn4jx7TEtBjWD7DV3ahxYoizm5xbDp+9H0qY6pt
fCi5sJr6Swr2p3vhfgxcBw/D/lRI607x8vDbxHG/ZuxtMkjKYSf5FUdBPTZT
Ri7aYVtJ7SmA33Wx8l1/ObGaxpU23nf9qFtH9ZwD6f+b8Ltb5cLuxjtX0v5l
PviRrpYE73j3uIH4ceAHgKvO6vupl5HjLYR6dBKGlZsPaSFuB+1n1/VfNKu0
hvZBc2H/vimUCTryPpP2QetO8Nt/7fNDXWHFMJJbJ8Qfp7wykow9mEL2g0nl
9aHRlr1MTXvcyt+qp0luuJ8Ncd91/dYcb5LDb6gnnsd/hwvlYAf1XDAf66ek
k87i99aBf+Bbdmn/FqaKeBdw+Rw+x+/VgXrk1miIe4kXEQ+H9gTdPCVxOrKO
2t+vO//NP34RXoDS5FfMVeL8eTyEJ/HV5kae5yFq/1rIk9Qx0LK86MfZORJQ
j8SutGHXB1ezKOelELcy6bP2QXl+MYtydryWO2qyrhjPbNxaM4uWh2T/YDzX
aU/YyS/uL6g9lq87kv7xX0qdy9G0ue1KXLGj89Y/fhprtjHB9bsnzfcRUE+O
Ev9dKmynNdQj7tHj9Dk1mMZVKuRhfuhjfcqkfy7xLODLhfkc5WkO9cRPmWvd
eSyauAq058YxIf9ai/c0ftBv+RryLbH9Cxd/P/uPP/VNeB+xGx+uEv/zskfl
H7+gS1PuOdvuqyT/JqhHBO4Zw+9aBvXcWzjmwa/Xr6j9PpAPKaQg4S67woLG
TwByQz7H9s+HeiprRXqX+KfQdwnF8Ntz0syhz+OdqdRfGJfxhXvDsP0udUIT
dSUn85xqt39WbPMkjuud5FHLSt8SV86eh3o64L4v/C43qIcndy1TSTeH2h8N
frk3WTH3xoVwPBa4GXBs/wWox/urwTvXYe+Jt0F7xJexNrf7RpH+DHgsbP5+
tiJv54npX4VW5FG/oB/SwyVa1mmqNXGjShHtq/em8KxU0zKMf1zh9gUQr2/a
xn+3iPw2UM96+92j700tI/3Dwrq8fsncnXvZhzR+ML4/Fu6pxt+1/Tcur8T7
OHGY9ZNZ3sRx/bUz/HU4z+Y0jR8dqMdDhH9PF7bHHupZOWidR8q6Eho/AXBf
WYeDdc1PqSriQcDjgaM8raGe6KUez1Ov1hEvgvbUaz+f/CKikL6LzrfCvV7Y
/pZ//ZMqvLCCCd7r9Y3pu/j+YFVevLysxS+72/Rdr6GeG+L8d3bwu9qgnu8r
VHqttuXTOJGCOFfoY8fgM5kNxEcDzwaO7W+Aej6YWwRu6a0hrgft2SjbWyau
2EL67SHYIeVuL3dpS4dx63veADv59Om8yp4d8yLzqmkeob9UHO7Bxu9V+/d3
1HgfE9QfMu23iW8/3TfY8pYaT3/+24Hng01ovMng+ehA20fZr4+RHNShng82
zISKPZX0vcvAf56+t8m48jInBx3gQcDxe1WhHtejyidOdjcTN4b2nCmL66wN
ryH9bw95I2/HiWSnWWbS92LeiOSjQ2fPTUil/m3Z1S898rE6z1Vq2HyR5lP0
vegH1utXFr5C05u+twDq+bif/84O9TvUE1ai4v3oWTqN2z7gV/f/GV730IIb
zyLAs4DjdzVDPU3Ff6bONC0iPhraI52/fGifsjpqP/rJeT9Cr1U4c/oc/dX6
kkpjRIUPUfvR3y5xXOOQ0mwfan8Q1KPr/Pr82P7VZLe0g9/eXfHu7K77xaQ3
+H81eAcuP7w6bmQI2aXo19VTP9r1xonzk2OczvVhWHLdL26dwvK3IA8H7Xm0
DzNy5uwqCm4mjuX3b+xwibXooO/F+iV+Hj1/cOkF8p8jd7tqYtek8Z76F/3Y
chltFb6zTag8cq+7u6r67nlBdib+7oHoVXohBrXEsf6jtqf3Cs+oIP2A3PiU
b5TG4pskZ6ynR+fM9aI71SRPLG8VH62gsCKQ5I/tib3kPrfvmkgqj7x8/Fjj
hC4HkjPGdy5sEq4SGlxA438lvnsC77OgPM3AfrM6M0VL9ngxcaxnrt6jYYUb
qoij/ZbzO25Z9GdOb2B5j0eOV3+bnia7Hbm/UmXyH4d82l8MxPgC+DGQY/mi
bSWykb5VtA9CbuVX+a61tYDGM/KSkVpGOTJXOT0M/MBQvy0DRnB6GLlEzt/2
bTTmWd1e3Suj20o8Dbg2cOwXrOfYebcvA1YVkl762cWXj84xi6J5q9uJnwP7
9kDUk1mW0U2kt0nO6906G+7fovoxTqFRIxnzq7qG9Dnma328m5Aa/4XrF7RX
65YKMe0f42g8Y/mpnpOa7hpW0XzB+MKpnAfnfbyOUVwJy0ezask/N7ZSPVje
kslpvfs2k/oRy29u/tzZWtfKYD3PXNtb/4n3tniWWj8e+5bKb4J6mt7y/UXY
j1gPr89m+VKzO6Qn8XefzfwxbHBJCckNy688fePPntnBxLH8nT9dT0MmepLc
8NxTsNuZHRNFUkj/YHy5Dt7ZIT0D5Yuzc7y3js8ljnFndRvnt6It7Vz8Dsrr
t0w1PaJpzcXvgDurWJyduz+Zi98B79i/rFSzLYfmC+YJ9O0+tipMjos7UHl1
jSh/i1xOLwFf6JTx7HVbChfXA14yu1BO+PsZ4j3wvSP2O24v/X2f00tQ/vOy
GWHz/iRxcT3gI4X/3qeEQb5cRFRIb7/n7cSjgT8BTnFAqMf7uqOQk0EqrWtr
QZ6HjUdFjp/RQXzUs65f/+R5RSuwwwfdauPihlDPkJvj3uj9cCW9h/l7RXvW
XX54uIb6C/c7ez7My/fXS6b+wn6sEp/QXb/Rlvgw+N2ci0lD5/icon7B+rO0
tScqZVeT3sO4lf4UF82D35xo/NM9bKUZQyYmtlM9WP5cQvPhcsdi6l8sv3v2
91h/ww7qF0NoZ2RA63PLo9UkZ6wnaOuamJXetSQ35EV79oiPH1RHcisE/6ex
g6XPA8PLxLH8ipfaLkEhfiRPPNcWsELCsPGHEa0jgu8WoZyx/E0r+wl1+yyI
Y37FpU/Rv94f5dYLLC+0LuXjm94BJB/kv+90S/pONCJ5IvdwYSqM5S1oXUD+
WSxnvPLyHaRPkJ/aEP391tAxxJug/bHj/Ly+N4TSeoHlO0VCu585G5L+Ry68
8O/97CLIGzy1ZqNky8t2zr4Ffh44jn+sZ2+bxmbDkh20LkiCfOwM+i16HNJG
3G5Mb8U/+Q7vty+ykVXvIP2G9YS/v30tNUSe9BtfThN4loNcFGxml5H8cV+s
8ObT4ct6ZaR/MO+xPlcjQCy9nfQz3b/Xb7B8qGkHyR/9zBmXhe9UZr3l/MNQ
Pi8s+2bi6lqSpzR81wpved3EE9w6i3HPORMzDU5Pbyb5YD0VkIeJcsDy/p8G
O+9KbiY5FIKf3KFuw+hbWv7EsfyLQ3N+Slje5/zVsE9XS9sxT9wjmeSDfN5T
xQ7v+BziuO/O9MnbU8By+18sHz/jwcigwkM0bpFvEtn/0bAnicpj/FR/n3bF
pO5jJE8sv+eteNxF9xwaz8iXe9UPeWCTQuMWufSbYzPHeZwhOSNvYRpdX3ok
kZyRXwe/BMoZ+aLTsp28khSSc89S/vd+MK8JsSpoIn1iDH4GuYoI7/5b20lv
YD1mc+/tvrnVlerH77UY+qbu0Jkcbr8A/KN2TGiOpSetv3i+4B3cs4fyRz/D
pnMneAencvsdzGsVkvTRHqp7mcYt8o0/Fusd+9FK4xzjCFoHii+nRfjRuMXy
8xsDvP6kcH5j5E1SS4czx++QPKcBX6xwxXmWUSvpYTXgWwQ4xq91RrnXXUxo
o3UQ61eDe9to3wfls0JHB13cx8kZy39VK53gvDyY6sHyn9X05nwpqaHyyEX9
ViU+sHvA/B3/Vea9zZY65FiWz/wd/1XmmfnPffNFtIr5O/6rzJs3yC/iyTTO
bkQe1pv2UHXuabJzkBeYnxvduCKf8xtA/KWqZ7PxHlFT6hcsH74lWi/w5wf2
7ziyMk/C51PunKgC9u84sjJP6J2r5Zy2K+zfcWRlnuXUAyN/1uaR/JGXgr8I
5Ub1q3022DmqkOSGPM6sTWGh8S0qj+0/N0t8qPSKKNIzyBMtK6I+znckPYP5
zM0RmSP6TSonfYL+pQD90dY+YrXE0d+i5tRx7Y1bM8kN6wlTjs7esfsC6Rnk
Z99Zx37czMU9kYvrne/3ak0j6RPkEqOuJxVtqyB9gnyKHlPkbH6T5Ib5AxuS
p339KNJB8xrL28B9azhusfx+3QNhJhHcOoXlMy4aesuZB1I9WL5ohH3LotBa
khvmVQb/WR7hWMDt05Gr7a6/s3gSJwfksyrfbL8t/l5gfKrz5ALGH4222Enj
DctrVBZIbbrZIDBu1XnPln+JWXHmOckNy9cdLNjQMICTG/Iqu3kX/WVv0vhB
Pu/tAv2e6dz3Yv0BRSVyhQYR7N/jTZ3X8/zC0P2Pj3P+OvALDUuq/KrDFNA8
Rb+NKLyzhuOnFfxFQRvGZm7KKebyDKEesfU76986cvMa/UVbGi8/XdHAxeOw
vJpuUtVNd25eI+8zWS2m4nH+f+KV+hCvpPxDKC9yZ2z49tQqLm4IPPOZVKOJ
XCGXZwjcSdzCf+byq5y/Gt81GDRrdPXifBqfyGME/GmvID+86LD31pczOT38
GjgLnPwqUI90VsUNmzOFpIfvoR/s1PXIiYvaiReCPy19nvfiab5NnB8G6unw
LFmi1crpDcwzGdrwi81t4fxgmMeu/m1d3KhGTq8il9P+YfJq3GWSP/KqvSdf
79avovGMPGSpaqL7olbqF+Q2arZtUjmtJGfkFlNnzFFYfYfGIfKa/epDRkwO
pu+ivJdnSoM3Fl8nuwX9VKt3D1q34SXnv0V/xe4lv+UNsjk7FrktL8k48Gg7
tR/36YHus25bhnH+f8w/vHHb4WuWbjPJH/mElScfrP7QTHJGHnnoqe+Ya9x4
wLy+A0d5XsKxnD2JfJeHcUeoWh3NU+TBWsozrStLqZ1ot7S4P107W6yU6kFe
rNLTdNG9lH4X+323R6BRZnkbtR/5jcELVx44z/kZUJ7hi+Zamb5roHmE3Lrx
+P010xupncjLhdwNL8dUkH5AP5L2+OVDI1S4cYL84pOa072TOT8zclUz6b0r
T3B+JPSrfLE0YRstW2n+0rt7GVrnnnpw/mHkDktVxmrWVFN53M9+OG6x4tj4
Wmo/cnmTZ5bzjtTSvED7/8zOhYkim2pIDyBfGy7xQO9wNY23JQL7LKwH7SXp
i5NOd1ZX0bhF7uKrL3tFvZXqR77jRGzZaglu/CA3ALvub72nzItihOZUWHNx
cLJn+n0KSFxXRf2C6+BEhfS+X583UL/Qumw83VP+YQO3b8J7YjcqnglOKaPv
RR4PcSLsL1x3+jyRMdYLbSA9gHycg+GaR0Maqb+QD/mqdDjco4L29ajHjvxK
WLx8Iyc35Fc1l+x0XM19L3K3uOGzg4K49QX1ieGXZXf2bWml9RT5op71elfO
cvF65E5t239VFFRzeU2QRzExO+XpmIfFtP6KQR7FR5FpFTJLPUi/TcH3R4T5
HOU5Huq5J5ptPmNFIcnZH/LlFHL79wkIeUP9ZQz3Rbz2unVx6vomko8J8ATg
WI8v5Dl49Juxw8yhhLgC5NHFD9G6eLCzksYn5jkINaxuPehVSf2IXLui9aL9
vSbimHcnryl9vLiBy99WgTwHuU0jdM/1cPGpBcC/b+BzbI8V1G/1JebFAq1y
audvqP/6DguFvT4FNH+VIK+gj/W6Kc++5tLvnoLzU0WLVG6a7LtO/AJwtSV8
jvWMAH/a07VycvuG1hDvhXyDTRMtEuTr46j9SnCO5vcJnsLXrvPEVYHLneZz
lOdh8JNkxYR6+mzl9IYV8O7Y8/2jj1QTzwe/waM+6zforOLskxaIy/soKC3R
ln5IvzsS8uiMh51UH3jTjL5XBrjfeD7H9mBc/t250htGL6pJ/luBD9Xb+vTD
cI6/hvi7THf35W0HufGP8fQgtun0pAWZNI8KgDdHqCreOfGW2tPrws+Ls9o5
ZWWqvANxEciX69nK5/i7OVBP6Nu6uf+8t4hcA/bLoi/P2O5efIfmBZ6jlPdS
E7rq1MYKcgXgpLchTv17/hHTTf6VxIMhTq07r60tWonLQ8P4cobd3i1XjhdT
+20hnmtx6dX2xBEe1C9HgHdd4HOs3wjqGVqvJD9pfCH9rhvk0dkErljdyLyh
9uP9GBeDXhoeOtTECPLLwEk/Qxx2gOwno7h7JcR1Ib+uc9L+8ekDPlA/Yhx2
7K2l3yxtK8new/ze2bMWfc8OvE762S2Zn7d2S6UzOiuGyx9zg3y2Y8DRTouA
ek55j2xpHzqX+Fclvt6b8PnP9IXf71N7+OeZfjD2RYpSf8xOkfwxr6xr3/vb
IiGZtP/C8k8sVBacyub0bQXkla2c93demRmUb5JS+bq0wY/WCwnQh8ukbu/Z
97OF9H8m1KMpviswe3AC8cEn+Dxk8N/8EOhhz4ELIsVFq4ivxfeVgKMc9KE9
x6V03r+NcyX5XILv9bx21e7jYH+qZz7ESftuDcrV/MjZLduA/9nC52T/G/L1
p864X4q71NyIm4O+lc9fqn9t/EOSczjExY79WPAs8U4ScYzfnXxhGNWs/ZzG
CZbvqvk6OXARpw/FId9MaO7f+WZPoPyuR9+sO8eyZD9sAXv7BMTR8Ltc8T7Y
5Kibrv1LaLw5AD+axOf4XQ+g/posmwrjb7foe49A+2eZMb12Fz1pvJ2T/Pbo
n3PM9o5uI0du5vKiMS5zULqnWckkkr4Xy4eltS/dP9SO9PMl4FW1a1qfZeQR
14Z6bqo8Wnjl02ua72egvI7q65NzB3FxKxWId7hB3AT5Bbw3D/YLKAc1WHdW
X5e4oan+jvgU4B1X+Rzl4AC/GyiskdETHEhyWwHtvBzr4Z7W6cDZqyuFIi23
yfPkVnpXvjXg8tvRbz+9I3CY0Zhsmo/oh0+XTbAz6nOe5DAd6mlKC0y8ZPme
Ow8F9fgdXC35/P9aj/JRhvLHr9Y5uXzkxsMYWNe+C+0+tmzBAxoPw/H9zV/m
/3L8rilQT+yYmNlVLBeH9YDfnXL7WU7gTUfietB+rZLLV6YyvlRPHay/AePS
ckrmc/l7mBfn1+x61KfIiztvAjz4285TEmFFJIc/4MceWHih11X5A+mrbPAz
x2/l58WR/gFu3Pzre87ucvreQuB1wCn+Ar9rJqX+YUC+G3FRiBfUvNPKzVDi
zjPy86yUeL1pn3QeX+bOU6B/+/Jzyyt5i0po/KO/+vzwJdMPRHDr2kio54Lk
g4qEgkouLwj4Go/61Vp1LdT+RZB396Ddq31G9QfiesBnC/C+YCeYLJl3aLF7
PPHfYFfkLeVz/F5J+N3N8QOXT+p8SPwYfFdG34vmO1o9ic+E7xo+bbTJBJPL
NB6ywA5JttEd4trOxR/553en8TQN+26P659K8wL9qKaOsvqWRcU0TrB8lN7A
TOEIzv50A/7EbdQgO5UMGj9NUM9n391dkwO4/cVLyOuTH8TP60M5RAFP3GWb
o7I9n8YPC3y3OZ/jd12A3/XbHm6yN3gZ8Q74XQlXkQ7zoUHUfjwX8NHSfeSe
q9epfinIr9tTO2/P7qdcntto4DrAad5BPUL3jK413+xH3BDsIp/uzBt1VVxc
LFam33BdA3VedB+by5dyObsa8+IuqO23vSiVxfmpoPxe36hFps2cPZYHeXEe
5n/nxcVAeR+5WO8jIQE0bpeBvdSy6PyatRKcXy4X6nkX5n9JzjWBm4/A54X/
zTXATrt0fOKydaM4P78qcAPgKIeX0B7hPmVdC8a4knza4Xt1Nrw9Iq/qT/W4
gt91wcOrBqnttcQ9gM8GjvX0hfMRvLZPM50uc3H2XLADj11XOjxG8iH5E4SE
pBv+yQd7Y1fVffopd457Bfh5joH/h/JA8H4qKI/7RA/Ibx8x+0rix9fcuQ+/
NZ9X/HO/Ts+3IcEz6zn/zHrIK/A4lFd8ZCq33n2G/JCMe3mxli7c9wo38Xkl
cFw3XWHdPAXrJvLfEIddBHFe9CegPg85tD7/6ATuPDvGW1VGnpnCW9lE/BXs
j9JFX12SPsD5Dw1hP6X06ckP1YQ2+t1GiH+thLgblr8P+457O1bMOTShnYtr
wz5loPPQO4f8m6lfCgTO+yDH/FUF8Kug/O0gH7Lz7aclCklc/evgfMoxZf1d
OdJc+49CfuNHiTJm60Uur3XmSX75Wp2AzRuj2mk/ogf2Z4BA/h6e+1CuWFUp
t6qOOJ77M2y8dSmkmMvTQH/slpa3sq3T22lcfQR/YA3k3SEvg/KZcE6Q/Mzg
9zOEvC8cV6HQnlL1dTVnEsuIe8H4jB98/0Pr+FriQpBPGOrlPLjyCRcP9YXy
73nb51VLdLCC+Vq1AvlaeC5DX6ZP6mH/MuJ43nCe8/61Awc3EPeFeTHaN1H8
423Ov/cO8osGafDzrJAvBD+zBZxPRB4O/kxzyNvBdmIe12en8WZffFsYQd4J
HNuDeUd6I6Sscve2Ecdzjt+m1QYpKXLjDe3kHKb3+J6gShpv+F3rIg/t3X6Q
i4NvhvkerPBrxYZrXL9HQvtNoP0o/wCop0qiWLu4t5URzP/REcj/+Y3nR2Q2
VjgMSCGO5yijo7Q17X9w/i7MV1k6rF7n9VJOv7mAPlkO5yuRL8Z7uiAvBduD
988sXH275cv9dlaQ84BTXjH4hUb2bxxwuonjueAXKjLIXDfJpZW4Cti3bi8/
xKq01VM7l0J7MqA9dL4e83YuZjSEKXJ5WbHwvVNWf+uIfdJI7cT7tX4eKzrz
bSX3Xf+L47kMOTiXge1Ev5OZVJN92R9u/KD+nPRzV+z+aG6+jAL7TfVOZ+nY
xBaS83Twe2+FPArkLaBXfeBcJ/JA8Hsngz+cztFDe5buHLyxIoLz+8nA7x5r
97o7sIMrbwN244EkCZFizzIah0GwXoTeOPnexI47V4jnF4bA+QXyh4M+n7Yo
tfFefDNx1P/r7sxRXnCG6/c+cD7CXGSkn9Mh7rtkwN8+QiCergP1lx2T1pdK
4vKTRaCeOCNbrz9pNcSn43mK2V7ap+9V/See21cgnovnDtx6ajRuWtURx/Oe
e+wUbDrbOL2BcSXnJ8qu1xa0/ycOKwFxWOTGUF4ZzocKxg3tIW5I59ahPY7+
i5xrO8qIH4H17rDkwrO2E7h8eIyfzncOefAkmDu3Yg/l2y4r5IeO5PLKMI89
7nPh6WvN8Vx8AfjGwR9e9VnK3ZOD65dc+ejtUwo5fwu9uz3cbqPJmQdkV2N8
Si1MY9WlGZepfrrvZeqygIZZpWT/IN+2/uQmV50cmqeYd1qbGSe2uiuH+hHv
E/u4vah+Aa/mP7wbOLYH45VVz99M2CLhQvYh8ixh3pFDZ+9TeXqXedLPkWVp
7lQeubaIZ6DMkodkp2E+p5Dj4h6DJ6UUR8b45rSKP+tqQ7hzHMhr0le4Vaf7
UX4Fxje1lE0Pe8zKIo55LxmxnQvvr4mgfkRePWRua+iDBNJ7yKWOHefJiyUK
5P+o827pZ7aYKsUzf8fR1HlT+kZeSTsdT/1I777FDWjyrOX23chD7OxNyi4/
ILlh/LpKTfxs0Zxj3H4Z+KmHfyIHlXP+LuQGhyJKzwzJ4fINYBymm2xrihLl
xiHaV0L3cuft93Ok8e8E/kbhl7Hq3z38SQ9sBH+jWva2Cw6f3lL9klC/EdSP
36UG9Q+537r2RvdDGudXwb6Ss7L2cZjrRfLBOJF9medTh2yOo/1z6vaI6NMD
11F7IsGPpz/34WhrvQTie8GPtz7heJ5N/0c0L8TA31iyrUiydm4QlxcEvGcD
n9O5BvjdCy9NVMpzubyCcWCnbbYY4ZvZfJL2j1V4j2si/5wp1l8OvOdyq0JX
1FvqrzbgN1z5HOs3BnvjkFPnw8HJgdSe72CfDEj2HNpx5zjNU8xjfFad//iQ
Nzff8ZxpAJwzRT2J5VP2OGrqDMil9m+F8rxb/POk2E7MRz2hNW9m5WnOX70Z
yuupOI99nl9M3Bh4+DQ+x3lHeY96y/2eWFRR/2K+X9X7PFOLVDcan+h3OmVa
vltJ0pHauQTPY4ryz2PiOMR5GrRomrBoSgLJAc9LGsB5SSxvjPftLOaX/zvv
Tp3Xd8zKExuWcPMX16+cy492r1I9ycWFYT/eM2DX6ZJTgVw8DvbjHbKum0R3
vaP670P9XqP59ZNfEe83sHxwL+0X54+SgvVr65Ofzzc6e3H5TrBPl3qk+GdS
mhfpSdQDgf7j/C13cucH+0H8ZT/cY4Dr7z7Y3w3N3inS/xhnX+G9fD9dlSXP
nmjj7ueB8/7MufqWMZO5OCDmdRT2OHaaVZaRfvgM971omPL1A3IhoRv/+g0a
4b415Pi7GftGucyV5fJPbCFOFCnrItKsn08cfzfXI+BT5YxG0uc2oMcsBuUt
mV8XSNwc9Fi1/5r5VSbcvS7of3A87+z/dCZ3XgnPi6W9VxSyDOXOn86EOLV2
t/poC6t64rOBzwOOv/sD9NusB1rX1/7k8hPsIc7yY+bjhGS1JuJu0J5daatl
Bx7m9uNi0B69PNXLTyLayF5KBjthDexnsV/OQT3p9Xu2Jh3i4shoV3iOykhL
m8rlt68F+6EK4izIK8E+2SuQH/UZvkuralffHauriWP9z2S8N1m0cOfO7GD/
GK8eotvXmcvDMQfeARzlj/tBnWbRaRE5nP8Zz7+sL/V8KbqNy0/DfaiKw9YY
zfOcvY32RuiwqQOGiXP2KvKFj8Lsbklxdh3uWz+0nLxuIdNI/SgB9Wfb3Hkv
16eN/PNYz40DT9w9L3H3Nd2A9nvmRVmf3VRF/SIO9WQ5uZ1UteF4Dvxuo2i6
352o9zQvJoNdFCUQ91kMdlegQL5ZKtSTLHRl6zyPRuLYziSL+zt9TDpIz2A+
0ugxWy9063L3SyA3c3FPEBvO+W2Q92QX+HmO6yD54D7U5afHZJ4Rd57OGvaV
9qpRkwyucOMZ99GjfyinaM/h5i+eu/mwNVrdUaKNO18A5WsWPG2+bVdJfASU
j1v7OCZfhrvHBtsZq1nqvM+Nu0cxEuq59Ev7tFQZd79BFrQ/Q1H3nm57K3Gs
Jz5ypnLQng6aF32E/vknz5MXOA8SBPv3wkH3RM47cf7JO8BbBHgt+CUKdpSs
cLrO5Re1Au9jzOeC5w5S4dwBclxnw5TsdZmnrTTO0W85qk+MyKsh1cSxvLHP
ikvd0ZwfyRbs5wi4Twm5CpRfDftrlAPa2/3gXXvkdsBnAkd5RsO+/tLFNP3U
Qdy5OWzPuotlsT//cHmwrWAnaIFflPy34GcYCu/Uk38beBK8O4/8AvBY4Pi7
WE+E1YGU+fc4/YBxmdi9ooWXP+XR+Md8tmkrZG2+/X/6Acs7LilMOrMxn8Yz
xn0Sh414JHOdu29qB54vgPudkI+C+oVg/05+LfADJMsHTRkVz53P9YDf/XV/
b5DTY+68cC74gfUhHx554f/gmA8zEd49p/w98Fecg3fPUZ7HoPx0eN8cuTXw
IcCxnaLgZ1jq/iBW5wnXfvzd29ey8p8XcesL/q68VObCruf/X94O5M9owTvm
glwNOMof41M9NobFYv553L4P4kpJrx4FTNatIY5+lU1j4k3qhnL6Cs875DS5
Zgofaubuw8zllzdZ4RViIMuts5ivuLHFu8AjmsuHDAQ70ArsTORY/pXAPRJ4
j1a45dyzk7vyiGP5PDNJtZnDuXH4CuzSvDX1w0Oqg4hjvn1P14b0/a+KBO7x
mMEbD++A43qKcQE7YWlzs7ncOot5+FJdCYPW3OPWWbwnOQfe7xbk74Bje7D+
Tw8U+z45wsUXsH6fvESduodcXpYtlN8et0fj92HO/syD+NSvq6qtt0eXExcF
O/nJrV/jnfcXkN6Qge9dCd/7975Ag7dXIP+5D9STeun5SQ2Fas4vCn6neRYL
57sXcn5mKcjnjIV3t+k+RuDPgOP3XgH7tp/tmz2lv/JIDtqQ/7nDp+/diAM1
pH/wXTDp4/32hRty+Zb4LqeufedclfXcujwe9uNP6tjBXbtb6HfvwX78p3z3
3vtr6ojTOy9PJ5v+qOD0bRbwbWAHIsffHQfvVqN8kItZLQ1648fZDxgHsS4r
7yiN4eYX7vfXH7Rdk+XN2c8KsO+ebuyXL9XEnQNFv9OyudaPH21spvbMB34O
7CIsj3GH01fEZSckV1A9iyC/RdHF9ulsgxQuTgf78Qg5UeVMKS5OgfEC6x+5
ur5DUomjPyrJYepk8dRabv2Fdf/73RDnrWHcOEf/vGTG6eB2O25euEL+yYXU
7Uo+V7l4EK5T88oLX9zYxK1T6Fcfv7Hv2HEMt49AP7m+5Al1FYMW+l078Fcn
G3tfeTaNi7uhHl6fkiN1zY3zS6MeVrXdaqm0v43qwfNQG6e9nzZrONcezD+c
tjzmrOgxzs+PfmMvC/toa33O3sb9tX5MKu/wCa6d6E9edOHwQGPrOuLoN0sa
MPXI8dY2AT+ABm8bzF/k+Ltm8O4wjk9qj/63GJHbnB2Ccer0x5MbL0Vw8Quc
FyXw/i/Fu2GcW8G7ulgexycD7+GiHJAXaN+Zd/MOZ7ejn9Z09xnzyOW5VA+e
m5YbY7OlcboFrXd4T1oG3JOGHP2o7+BdWvxd5K+fS0b0lNSS/HE+1oSVTDTZ
zX0X8nh4lxY5tkcN3qVFrgz1J8L9pch98Tw7j18evxfrUW2rS6gL4r4L3yOI
gndjBXmyAMd5lwfvyeL3Ind8cjBY5U8ttccP27OD3x6sB/1d0vCuK9aD/Nwa
+11fznLxU4wnxsO7rlxeBH9fMATuR0X+EvxvNeB/QzmgX+7Jc/XZw5o5Px76
xwbC+6rYHuTpo40edk3g7q/AfcFaeBeV7o+CeaoE75xiPci/V2S8vG7BnX9E
7if5zKPzArcfxHl3EN4Vxe/CebQZ3vGkfSKsX9Os38nJ1XL3WrjBerdZbICB
m2ce1bMP/DnmkDdC8TioR+PH/NfDD3H3nGP+gI3lniGrDpbQfnwLrI82C/nv
aSLfA9xqEZ9j/afAD/P2i3GSfH8u/xnj8uc+eadUnMsmu2Ii8Oeyx3sWHM8h
3gDrV//9/RRVpUupHryfUHHxj9k9K6PIr4j73LBw3u2Roqe4+0Vhv8yzLH5a
o2hD5XE8n7q2tz16vDPZRb+g/nMJX2uFfGOJb4f1y3hrh7+fVi7JDe8VtPs9
LVxxXTiVb8D7/ZY25iqIBBHXgbxH95T670k/WOqv+xA/fQjxU7q3HOxq0w1f
wuxfc3YL2uE/DozLsNDMo3mE96dJQF4K3Y8N9RSm1uSmM9y9+rguFBzR23fm
Vgn173RYd0q6+e9IIldH/pXPafyD3bh3U++qDxe4dUoE7L2sc7NXv4vj4qSY
D6/zrM7xYA13D3ML2Ldpr/jvQtL9TsD9Yvgc5Un308YbBk7sl0nzF/2ZTgL3
uOL7KS/hnUe6Nwz690b/lTfGnODugUF9ZWx3P0Kj6xKNH8zX5TmKiM54pk/r
piHsQzUX/e0Px/2UHbxjiPoK/bR/9t+KtE9pIz2Dfr/18N4f1oN8NdxDhf2O
+SS98C4eyofig0ZMUL43d28M8ki4n4f2R2DXdW0pub/VhjungH4buaT7n+fm
uFM8AvlkzzzDFfnVtA6ineZ9KFRDyIjTb8hfwLtv+LtqIM/anydPtHzk8ivQ
TjsL75rRfhbPzQ1qDddfz+VR4D4uC97zEtw3ZcG+ie7thH1HtsB5YSxvAe9q
YT1YXgXe1cLvpfezTBL2HthcQvYVjv9v0+db9MnnzmPifMkXs1QfPLLpP/H3
fRB/x36kc8GbpnhFjuPyB3CcG8C7VyifctCf8Yf23zsk2UDtRLulI2Dp7cX+
3HnYzTD+e9ISLCPSKqmdOP7v/qx9oK/F2f+4bva4T5NTymnj4pLgp7U+wFbU
CN8jv+hO8DM7OIaPqNHk4jIvwH/4QvZ1emSVL9UzGvR5UNX1e6a8ENK32C/h
ug2/OqeWkR7DdXO89hiVid7cuZge8CdYVzEB+WIhVL8G+B/eHVRY9mS2P8u3
U4O18TyOm/lLm68rXbWR43nAuFXS53b+9o9Djuf1jO8f2f0lNyAO30VCv/p4
p7IT/t9rGSyPnCdy1+iSQ4A2P8+gD91D5TJo5T6RgGZ6LxJ5xoZBEeZjcxl8
zxH5+T/lBc8tSlm+31CKeK3xay+T/VUsv59kiG+Lef+KDUmgd6OQv0h+NOSP
dCPc9zGB+CPZpnGh3xvAXplIfOfHL99NG+PpHSi0n1O+JjrNmf+W3v1EnjVl
z2uVawUMfi/yvs8PlMQdzaXvRd5brj0sc30UfS/yUfX7dEINElh8jxL5uVEr
51a25rG9MI+QH5nmVLCpI5/kg1xziZDBO7NUkg/ypQ3rreqlHpB8kLsrjdpw
wTGb3gNFLvb76o6qtAKSG3IDJ7frdgbZJDfkd4TO9jiJB9O7aci/rDxkaHg7
ld7bQn9+ynPj+NuDP9D4xPcCTGRWXFs89l4cyhnLd8SNPblnUxOLckaeLTm2
06+9lkU5Iy86r9h3+K0MeicUuWTBoPOSCfn07ifyKtW6s+HX6hmUM/IfEmn3
za83Mihnqmf4hKmmF0sZlDPygce8hu+xf0XvfyHf+zNnvXh3Nb1TifyJwaWg
j15NLMoZ+dGNu5Jb31ezKGf6rm1+rfd1YujdPeQhtTbt0xPKaD7iuwZDZ4i1
azqdp/mO7xFsk9KsL9kdRBzPS140KltvfvKKNvYX3ut7QLjU9VrpB3oPFPn2
otFfnCW4fkG+bIpznZNVHfULcseIhJQ83bfUL8grzk0uyl1UQP2C3ONWzIO9
ExqoX5B/1OX7vbFfkPss+7pmnHoZ9Qvyl3NfeBZNi6V+ofb0VE/5s7eG+gV5
+oH3o9av4foFednZd25z19ZQvyB3yV2hp9PN9Qvy9dU1vKWHy0if4H2/rJrJ
lYLB1SRP5FrjGqRWpTSTPJGvV7h65lRtPckTear3/PXjNDNJnsg/6s7qdQ8v
JHkin+i86/io540kT+R+FrrtRV+bSJ7I9exS2k+Jl5M8ke9QD3XWnBZH8kR+
0XbXRZ2XtSRP5BPCtZXcxVpInsgfjhuh/PR2LckT+QHbz7uvV8aSPJFfmORy
Z8u6cpInnqcYHpB+cOqCBNLPyMsuaSrmi2eQfkYuNPPCLp5cKuln5OGjp6+d
e+kx6Wfki3eFD0nriCD9jHx/5wHhyq43pJ+RFxx8/1NWK530M/LRIzp8tmyN
Jf2M3GXcZK1vJ++QfkauMP8cr9/HJNLPyNXzzeqz9TNIPyM/qDpcV64gifQz
8rGR32RfqN4m/Yw82HlA21f/WNLPeO+x03fX8pZzdSRP5PJj5zflinaSPJHH
HJfd1ecUt74jV5RYJP28L7e+Ix8worP497JSkifyfVsd8kb4tpI8kUd9SlXS
F+8geSJflOh96sZGzh5AXrjp/uI11zh7AHmQL/vo8utGkify4dGzTVM3dJI8
kYcethfXKOPsBOQTdKvCvubEkzyRF4/YrywmXs3y8+e66Z2jwx3iGnPF8uG+
AyE6H/3zTc+BXd9yIY+/H/Fjd8d0SWjFQ378IOJGY3VcOt5Fsvx9nQTxNVrR
IuNe5bBLYR+K3B3eS+K/ZyNDXF8t3HepmCn4YccSr3ySEuWhnAHvxMgSH1LV
sqbybj7sz+WIy6e/1mu4kgP5uxOJd10vSQt6EEHvTiI/bzTD5mhqPMt/5wnv
g5nEi7174eJbr2o2D8Yb8nnLlU8vvd7CroPxhrzs/LeTK641sAtgvCH/PM+m
NHtSFqsI4w25LKP7Kde4iLkI4w350y17QywPNTGHYVwhn5ScNC2lvZxpgnGF
fMSJnLOu41nWCMYV8jWLw+zDNtWxeTCukPvdSo4LLOX0HvJu1Uxrzfl1oD8n
Eq/7IpF3MPU16T3kDwrMSotmVzAjYVzh+m423/NH9IAcphvGFfIBFn9yzNTS
mUoYV8gX5Nss99j9nEmDcYV8qevX0t6MaHYrjCvk30OKTNcffMe+hPGD/HNU
zUrJotuMKowf5F+vBehMM3/DBML4QX5APnFi9udsxhXGD3Kx/veHeu5KY5bD
+EFeompeWfb5Ho0f5DzHSuObx+PZ/fD+LNozapnnPN+mZ7L88TyR+H0X4Vrb
SXnMEnj3Fu0cm6kabxYlF8J59T40Pl1TG/spN6fDueURxO+0Bg+MmJ7DSsH7
9bhvUlA9s+HX7ES2E97FRr6+p9b26bdaer8e+ZEhKrqabA35GZCHxJhO1V1d
Qe/nIi97G/z6XkMDvSOPnPU9dn7tmXx6Lx75Yq+AyYsMcuj9d+R74d4AfGcW
ud9vi6dHZvjBffR4D/QQntQu5R+GRu9Y/rl9EXq/Zl2VTM7yJx9Y/vn2IcQX
Ko2se5dQBee6RxKfPbzNQTKqHu4bHUV888a5CzOOpsM54dHEnV5pXnw2o5Dl
x6EnEL8dVLd7dVIpy4/7TiK+dFCd/Mq4WEYb+gX7fUf2GqF3u5KZESB/5MYZ
YXeXbmlkmjBvHPjgYfsmtzE17HZ8bxrrmXE19qVzG5sH8kdeFuY63+F+EasD
8kdecFwlUdQxjykA+SP3g3wSlD/yptyRigtO+rE3Qf44PgfslhrWLzyW4b9j
1ElcasKBCWvnFjDW0C/Ifa59HaWomcVsA78W8jwj/nsly6C/kPf+2Dx+9ods
1g36C7n03YEf5qzIY4Whv5CHG33WijwdzdpDfyHXt7rUb3BcMqMO/hbk1xn+
uyRt0I/Izc4vntnsm8YEQT8iv1z7evWFtKcs/52qItpfZGY/CjXqzWGPC/AW
4HXw7jzycNsj0uab6tkuAf4SOP9dIlGyz0+Vd5QKy1SwWQJ8N3D+PeADiHfW
JI/6wYQy0QK8oZbP+e8DDSXeIWace35ONRMgwLuA89/dGUm8Omm2e58DtUys
AC8Bzr+nVZp4dMeeeHGrZEZNgB8Hzn9vZgzxxbY6V6v2FrNBAtwA+GjwEyJ/
Bvdx8fWMHHFNn2uPE9gGGP8cnwmc/y4It2/6kSdnlDm5mBUR4JXAX8E718hn
aIwseTsghXktwA8CXwDzBfcFkz43Layfk84e+zcOVE782Mw3N0eNKmb1YB4h
3z8hTjRuRgPLf8frM/Etg6RD+7JN7G6YX8hf1WXNOT2hhuW/RyVKXMXTMK2Y
fc9K/5uvOZC42Ke0uParicx8mHfITR9YWDUPrWb47z9JEK+79u7siJw65gLM
R+SaN/sPS/3WwPDfVeL49k1Of0xTaxn+vcajiL/X95CRnZHD8O81liZ+5IpP
2kfxCMYa5i/t4/bZHr8Qls/qwfqIfFGO0/KbQi0s/x0a7p2aDF7vvT5STWwz
zGvkjWuK4oQmVrJj/o27cPu4/sc1+z80zWfvwXxHfl/9/JPECy+ZQninnvat
HTNvFCbkMPx7SSRonyL8c/4R55p4djPoZ+R7x/951H0/ieXnmY0nLjLyzRyX
yWkM//25SNq/VG14pHxv+QumEOwf5GGS6m8u6Baww//NYxhNPC9Fw7Zk01tG
D+wT5NK6X1oSfDJoH0r28wp27p34NPBfFxF3XFwx1HxfDNxj+Im4gZLMqzbP
HNo3IVewdiiXmhVB+ybkWln+vO4TLPsC9A9ytQ0Pv5h0ebJ3QM8gH1trpB2e
mEH7JuR6KzvkO7cm074JuW/fzQOc6u9D3qc0tx+5tsF1UfJTsGPHEGdSeh9/
00ik/RTyxPtX7p6py6N9E/IWRZH5pl/uwX18E4i3SvYT0/2dQPspsrvG7BTf
4pbMxoIeoO8dNens7S1htG9FeyaJGdan68gH1gzmO9oJgwvvdv/2qGf578T8
oPK+eSI3Au9w/hbkz30Cnlaq17H8/P5fVI/Dke8WbiebyQ+D5dNP6Z9R/ZrB
ZsA6gjzRNbQyjy0n/wzVXy/xIkq0gMH+Qn7z+CTdROFqOIc8jPjnJa11ImVN
5LdBvtpKwmC5WCO8QyBJdtGvC2afPW2byZ+D5cdWM4cLq0rhXNBI4m7SidGH
NWrJz0P2p82Wk8eKOH8mcrMHZpqXNGpoPCB3ymcfyEwqpv0OcgnTgNvDZWpY
NbATsJ1n4b0YHCdY/mDrMsXggBgWxwlyK+eD08oqi2h/hHxB15GqtLr3NB+x
/ojGxdPrbatYnI/It+7MGxFxJZf8b8jNUqYeiPjQxOI8RX7DI9l/0tAG6kfk
J0I/yi/6VMDgfET+4Hn0SvUZj8n/hjx/re/xLx8aqN+R7x82503i22rqX5LP
lKh7B6SbqF+Q90Z4ie+Vfc3iPEV+q+iVvbBcCvk9kCspaC3wGFBL/YW80k2m
+cTMEvLXIee1+WhIFzez0mAPIPceGzOh8Eoj9RfyjK8LzHZWvKJ+QT7lqIRw
78b3DM5f5JO+7FvYHpcC97J1Ulwp0crVqmJEC+RtfCa+1adEYXRcG4PzEfnY
MPuDe2Q6GdynIF9wNsUkqxnzM0SJN9XqXNk/uorB/Qty3Z3qK0Yr1rH8PAwJ
4ibB9s8PDm9icX4hv1Mne6qmq4Pl52Fw/GhdonX0pk4W90HInc+XjN/h18I2
wTqOvFBll4SZbiOL+yPkPp1Vffdq57KGsI4j/7jUK6RrSDy7HNZr5PMzDZOu
8joYnF/ID8C7M9thHUc+eEf046sL2uAeHC4uVtN0cPXcNdWQP8HFxTLL75SU
HyuhfSLyASvshdx9cuA+03Li7xXyLLsGvKd1EONBpjtXy7yWeE3rIL3jaX52
4mQmD87nDKTfjRpUWThjYiKtd1jet+/bWwsVb9B6h9wvfOHuN1aZLOo35CZH
G3nRvjks7jex/vtDXQM68ksYnBdYfvxh3duX+yYzOP6pHr14nz4n8yEeL0d8
UrbzLOZwPoP7U6xfxfmxhfC0eFq/sPx3c5nItz3PWP79OFz8S0go/t/4F8oN
ubHLmUCJ1DzSS8gvj9j3aeXVRlq/kBeAf4x/L8l38he9eGrqNkwjm8F1Cssf
tDVc83xYFckT+Xw3Zy0Z0VomBt9VgXrWwzspNgJ+sxHgN0P5Iw/zSo9Itq1n
WgT8aR7gT0P5I9eymvtZv6KU9A9yHpyjEfSndYA/DfsFeZaj9z59uWaSP/Kg
39XxXlpvaL3A77K7VKh48Eoy+beR3+yaf3WieQazDuwH3L8f3HX3vEdTJ9lv
WD798aQva+8+Izkjb3y5dIlVRiLZdcj3F+Q7jFWOoXGO3C1o89Hl2lfJT478
wpe+IjzPd2wz2AnYnkirPWMef+H85Fj+6JJImUEt8TQvkN8NPv6CkU4nOxD5
k5Ulo9vUA8gORD7yUpz5+V0hZA8gP7cp6UBU+hvyn1P7R3jOPPDgDdmByCsN
G+68tPAnOxB5RpixqFv9a7IDkf/usOufPCKB+hH52zSnGaOnPaL1HeVwtb9w
gHdLAfMb/HLIdZuaww9UNlFcA/lr+Qc3DtzqJL2E/E2uyHbhxS00HpB7ez+Z
0aDQzEjAeoR+DONVP+s03xbReMDyHb2+MXMycmg8IJeJsq6Z2VhN9gByZuPK
6BfT6ykOgvwY5AtJw3qEv5scm+02/Gwx9TuWTxg0WeT0uCrqd+Tfny7sTGtq
pH5Hrjy+ZWj9hgTSh8ilnzRH9c0tJzsf+XBhG8W2di5ugnyjTrXRpktc3AS5
824Hnxle8dTvyLNMPl3p61BO/Y78mukGNnN7NfU7cqWcnRVna9PJ/kc52IdN
DL1+K4vWHeSr2w+9e7AhnjjFc8GPhOMByzvNVJVZJFdM/Y5cZkjJHut7+dS/
5E8TXfttu2YM9S/yzQMlTzh+fUscf/cQ+JdQD2D5EKHR/uftk0gPIL/QMOtJ
6+RbxMlPBX4n1A9YPvizirjdkkIaD8jPrFSb4qucTuMBOaOYICsamkcc638P
ficcJ1i+ZvHbOReGPyL9gLzfS6b7T+Bzskuxnhvgj0K9Qf7DD8uTRj/PpfGG
3CQ8313ydCpxrGc1+KlwvGF50e42+40+uTTekB+vuOIm1/SQxhtyzZuaIs+0
U4mTXxH8UTgOsfye2D2e0/el0zhE3rpZUZSd84I41rMG/FQ43tC/cVV8q1zV
DG4dR54fGrkgvqyB5b/T2UPjc7h6Zb/p8Y1smgCXAM5/j/MX1WMjciehIKyF
9qHIY2UqTOWnfqD1HbmFvnpoX6sahv/emyS1X+Xx5a0GvCZmmQBXBS4J+gfr
aarSGXD6RAtjB/YwxeuLpDb+ed9C9gByd/so6YdZddS/yONmKKo3Dy+lfR9y
Wz2JhR/TS0jPo5/nRaX7yF3m4aS3kT8rzNuoOvoN7cuQSw7xbnl83Y3kgNza
+rK7emAijVvkpoYJm+Jkg8g+QX4stLb9zJaXNH6QzxK2D4sd8pL2O8jzlH53
TEsNon5BP1Krx40af4Ua0v/Ir08fuCPpWD17/9+8Ui6vwDDqipiJVwbNUyxv
dt1j0okFTdROistPMtk7dk4FtZPi71E7J3ZWlVO+EPLlp7p3aEYFaaM+RH/L
OKNhRs+f55GeQW7m5fa4TSOXxjPux7u+jZzbM7Ke7DfkzKV9UnfON5Cdhjz3
TPCS/sca2HgY57hPlL9wPDfEtYldAuMQ+ccbRdvGDWumfqd9lo4Uzy2phfQt
cjGFuwVF2pyckbvqjU2w8K4neSKfM9ttYK5RE40H5NvHe8Xv90+n70I+W33H
7+gbbbQvoPsHeCFmR8+3kfyRH9z85aF1/woGvxf3BTfFJHgnVhcw+L3In2y7
FTMotoDkjHlf5X2f+b/KqiO5IU9yVMiUmtJI4w356uNNH0O3l5M8kR/omu7e
934jzVPkLY77JDw/1ZCeRz7rnOE75fYk2h8h/9qx1NZhPte/yLeaf3EbrtpA
8xr5HKXqpCtXiqj9aJ9HNahZXpzfQu1E/inwiLtEegvJDe1A8U1X0j+HZpHc
kIe1fTKzNsim9iCvEn5yI2FnJo0fHP9NtdUjxP24+pFPdnG1XXy7g+pH3nMv
7tCBRZ00HpDXz74mbWfWTuMBea7wdd9XBu1kV+A8io4Q1/2dnE3+H+RlZ+6k
VY7Lo/UOebJnl/YF+3dkx+I8GsRj9ZNSG2m/gDwyOf2aZ0U92W/IgwZu7soR
5fL3yM85YGawo1w92Q/I4+saTtyWfE/2HvmFhH3j2zpqyB7D/oqHvI7tAvkS
BpAvgeXRrtPqlfGPuFFLegb5AmehPT7zW6ke5Io7hg8fEsLlB+K6rOP9eHCP
eRH5tZCPnxiketuwmPwVKM/+U5gB+TmJ5H+gfnGa4x7jFkZ+IeQf5RN88/2y
2TzIY6f8anhvBf0nyNsWBQfLpb2C9xI4P/Y2mb3TB956xZoIvM8SB++w8O9Z
60v9VTusZ2lcQ9F/eBXwaRA3Qa7tpKwkP7KeEeQMcH6cjvPfCvsXyxrJV7GC
XBS4HcRZkBs6n0herN38PznmYyCf0xscdFYk5z98BvAl0C84rnQm5e268byQ
xbwp5KmiDRvXPmxgsb+QjxlQGTu1NY7ypiiPXXXbXNXXuXBfJOdHFQrYoxUa
9Yj6EfkheEcG86OQtxnnrnk5oYbNh35EfnBKyY2PA7PgXBDHTW8avbx4uYTZ
J+DPsQJ/jhL4J1Evbc46U5yvlciMgO8iv4SX97sfzE22BfyHyL/ozv50KTGN
3QH+PeQuo+Lyi/UymdEwDikPJ/f0paM3Y2kcIi/LqYgYHvuE5b8/VE3z8Vx0
SoT1yipmigC/C1wJxhVyPccdy7sXtrCqAnwbcP47Lty+UsNi287o0XWMiOvf
XBf4eBgPOH9jgl6PWp6YyEwEudG8/r5upNPhDKYB8p2Qz1w/tHiSNMuIgzyR
d28sXZk0OZjNgXGCfONEg8j93glsA8gZ+c/9Ei7Ns/PY1zB+aF9W61AzXjaA
0YBxgrzynbGktHIuIw3yRx4mNrelyz6Z0YV4InKXOP/LkzOeMXnQL8hfnPj8
LGfkS1YUxhXyhJv2Ov5pb1gbR358E/VJzeXNLw+k3mcOgZ8WufSla5Z/5j2D
91GaibtcVpNWzMkkPzzyzZ+33fUqzIb7lfqTvhJNCVO1nRQM9/MOJi52zMpH
bmUK5QUhH2gVvU360xuWf7/MKOLTvt54aeAaT35v5Mriu5piJ75ipSEOi7w+
PXxV2aRIyhdCfmFn+bSBvFi4h4LTt6cM+O/FoD8W+YswofKHJjdZwbwpBvKm
+L/L2aW90+xm1c9u/k8+1X7Ip0I54HyPMhrcVSxWCvfPcnlNE1aWFz7JTmWP
4DsCwHty+O+nREIeGs7Hn+6nPojIZTB7Ia6BfGBTp736nSTGD/oFeUz2hIL3
0mHMOjzXBrx9PP8djXsgf+TPJV46Zq+JZ/9A/gDyY6r5rHb3YxbjAsg/HXyz
XMufZbD9yFWL+O9cYHyf7DEXux9ufR6wT+C7cNxaPay/G7gkn7kB7Se/2dzt
g42GRDJ+0E7k8e+mdU8694YdCfKk9f1B6q8U43DGFtpDfh54Z2GLwHmEJXAe
Yb7AeYQ7cB5hsQA3BT5Z4JxCDpxTsBM4d+AB5w4aBc4dnIJzB60C/Mdf5xG4
cwRv4RyBjMA5Aj04RxAN8sR9catWvYveoHpWDfIVkTdMXD18bm0TMxf0Nu4f
k3y+GH4KjWW+f/2b/wGeCf5S5D2zlN+cqkph+O8VcbwROP8+fTFuf+p9zGcu
683w79Pn+IEbfG4HeZvI62zvmEzufMSaC/B9dnxeDnl6yJ8Ib/hSNjiebRPg
HsAzIU+P8kNKZ/g374hgCwV4CHAPOIeLfNEe/vsOi0A/IG/xOnctp/oZoyfA
HwDvC+sXcp8Byv0uPE1gfrv8zV8ALwR9grwJ3oPQALsIedDiyB2XXJ5Bni3H
dwF3hXxC8jOM990wIv406yHAQ8byefu/5ww5v8TO3Smnq55HsM0C3A/4Axhv
lD+j9+H47ptNzBHQS8g9hAcN7PehjmkHvYH84eo9ef30qhk7WHdQ7/m9WvbZ
dF0Nq/c/8jEwz5zOA35dMOb11mbGBurB/aNXwlNTr9Jq1hzWL+RSulMrbqrX
sQMF9iNpsB9pEoijuUAcjS9P7tyWz/l1Ww6NqmP557e5fe6D3eXeKr/rIQ7O
7Wu2wL6mHeYR8jfzrX89bq5j6wXiNU8hXlMhEKeYA3EK/nst47h81HsOoT9P
tzL8e+i48ztPFQL3CO9qYfjvdQmR/B28D198GtLKeIA8kS895pHN02lmDMFu
RJ6kKjV8qVQbg+3H7y0Vqzn+WaEW8vQ4OcjO/Vw0Y3o9y7/vspf6sVfkSbLF
40Z2tgD/AzwA/FrIv7wpV+w93sz8Lz7q3/eZuDwWk2F6Ovssq//DjYHzz6Vz
6/iQspV2zUINrCAfDBzPa+B42/zK49lIpw46r4E8a9wFXaHEVgbPXyC32DZl
x81lrWwO9Avybu0RRQNfdbB4ngL5WpOIK/nzO+Fe0e/0u2f8hki8WtVJ55GR
P4B3DTAvHfnVTRqPTyu2s8L/3kfG1a8/Ts5m/ZxOZjx8F/bXvBw9pX7JjewP
+C7k52JmzP5YVM/mQvvJX/TF5uVXySbGGvy6yBsmXTkpebwJ7p3nzjO6Muf3
PN3RxC6D/ATkZ+1lPr2KbqR5jfxVlVFliFAdi/kJxEcUW/q01rNuIB/kZn7W
deZHm1gxiLshvzP2rmrgxibWTyB+vQji17j/Rb6ytUcraEQDvH8wgvN3SR6S
/R3cwLhC/gbykT7eUj0/6pil/8Mf9Uog3v0Y4t04PpHLiAV/9+PVwL38nNzC
d2T3Bm5rgnWfi3cvhXi3jkBcOxPi2nvwfhvQD9/gPQUVmHfI9Q+vGqlzop1Z
IMCXAj8F/gTkM45uuVjqXM5cEOC99nzuB/MUebe2gtq+153sPQH+CfhIkAPy
aSvEVFxf1LMyAnwUcBvwJyCXO2h484JVJ2MvwBWA28K8Ru44PHOxz+5W5ogA
PwhcAuYF6s85TeapaaNa2M8wL5DPHThvz5XWRrYc9pXIfbXYyG1jCtjNoAco
r/XHhOtK2o3MIjiHhbzvHP77CAEwX5A7Fafc2M22sHguhs516uSvbqv7P7sO
2on62e2badJrow5mFvQj8kaXUdmJH9uYNmgn8q0bHqpOrClixsF+Gfmqqn33
W9dXMcbQfuQ7fFsf7pBtZb+Dv4viETtiovVEmtgi0A/IlfrvzUm71cEeAP2A
PKtypq74zE62DvbRyJ+1OGj6T2pkQ0AOyL9L7dg5aVQnswj0BvIEhwP1Xyd2
kD5Hvq7/iwGi9S2MA+gH5Hcko9O3KHcyo0E/IC+wknU5/b2DmQLzHbl+T+K4
tULtrAfMd+Ra9r2We11aWP49C1w7p+qfD7ws2Un+YdxXjnqU47vYNo/iDsiv
Z6poDr2dSn5j5Dtcf/0qKeHirciF+u0KVZmRRf5q5PtOibz7+TiX4om4fu02
btFb8jaH4sK0Du7t2WrSzMVnkcv8Sfm1Wz2Z4lPIxye/zV+TnkxxbbTTNq1e
GJs08x3FEZCPz+h6eH54JbUf+YfC/gG6I+vI7408rt+L17fPNpL/n/ISbYf2
jmovprgerl+S3Vbbf+gXUvwO+Zv3WqvYyGcU50I+Uz/7g+T2CpI/xk0O+lbo
5VWlUfwF+ZlhOo8cM5JInqiHrTWzDjpdzaH4IHLTczXNy9KrKF6JvE7C3r+l
oIjiv8i7lWfNSVnOxX9xX3zlllnIsK4IikNRPk+BzddbWqn0Xcglmw+KpmjH
UXnc594L+KMa4MK1E/eJn+FcCY43LJ+tKrJMfXUxxVOw/DSI52J/Yfnn0l7K
fuWFxAXPd+D4x/2CmteDxe8j0kn+yDsvfxnkd5Kl9iB32zJP5QqPi2MiZ4eO
uGchlkLjH3nitiWXl/pxefU4H49bTT34bCY3TpDvz6lu1r77jOJ3yPudWn1m
30kujk/28NR5S+czGRTHofnr9PPBe788uB+fO/c3Hs79/YT9L9mlz5cU3QmN
YAXP6yXBeT3B83eOcP5uH/jxcF5UH+PNVhwcxqL/DfmMfd3OP2RS6N4MHM/1
BySTzk9018bvRR7+aZXc5qPP2AKoH8dVq/+sCosrx5kt4CdEbm7I3H938gXF
lZDbOLjrRY7IpngZcpGdmnHrPd4yl8APRuN2kNCoprZXrDb4A8kvJKS9cW9G
CuU1IQ/xWjs/YkwW9RfaOUMjf2amXk1lZMD/g+X7Gg92iom9z9iAP5Dy1tZF
VoV2xdJ8x3oyrq1u7XullPJt0B7oO9Gr6mFHCZsP50TIv1p8a5hh4VX6XuQR
BYPtDc4UEMd58QLOl+E4xPpfeN0WerTzGXsG5EN5OLcrb43+kELfi+V7+tw1
NFDg4stYXnuGeX5xcyHFW/F3Q+F8Fo4H5A+NBruqzQqIkxS4x8MB7vHI+h/3
eKgI+Lvawd9lLHBvhjPcmxEocD9GNdyPge1Be0YxNW9nyMnAOGw/zuthjezA
qU/TKA8Buc5ej+lpEWe1xeD8JnLzSz83Tb2UzEgLcAfgrmCv0n0La7d82znq
JeMgwN/r8/kYsD+RT910IGSwdBI7XIAPBR4F+1/k1+000lI10hhWgJ8Bbg92
C3Jd4f9X15WH1Zy9cUrWDE2y79SMEWVLM+Eb2ZcwWRoqGsoyQihZmim77Fli
pEYixjqWCvGVUtG+p71u273VTSSU8nue330/733mO49/P895zvd83/Oec979
1Xzi3SuG+FaNmxLuR/ZP3EuXwge+F4NzxVZkJwce9+tVh8I/U9hegfuqU5TG
O9tLSQLsFcCf7o0XErckC4gbZz/ylBf+RYtTBeiPwM3ulwW5nk8VpPnLbl/J
Xw76Sv5yDuUvV5J9Cbi1tzi3LiH1P7gN4d3Jbsl5E4d8F7naZ7OeDtzFySde
o69chB4N3Gx8K3f/23JxFtmXgNfENxs8T5GLTSTfAtdoErW1fWSs1wNPN082
DNivrjMGvJ76cSD+H/iqAc2VdWFyAXo08A/v9X7QHCZnfRP4n7cLQnzbVTDd
gCtrcx3N9MrZPwu8tX7r2FFTCnnfgVcm+zeZPCvhvADgTZkNbcojKkTo6Wx/
i+hvHva3XIQeCvx06DEN9yC1Pxf4mMhlk/2c5ewfAf7IzinEeK1chF8J8lhV
uLFYcKSM6lDXMT6jXlxsnl8tYF+AP2l8ve7T5hrWa4BvXukTtV+nmvP0gd94
fP73HLGC86SA72h4GHdql5LtS8Cf9qx57DyjRgSdgR8Pm/bJs08V+3mBB/4Y
K6/JLBVAZ+DXDmfdcnaTC6APcNdxVrpXm5QC6AO8lf2mD+frlByXiPfoGtV5
QN0Mlj9/75jUdU20iPgBru9kMCnbMCGF71WuE+X4s4XPs4tPsyV1M8ZR3Yww
SVxNKMXVLJbkCyRTvkCMJC/AlfICQH98N/2H/gtGD5SJ68kODFwWsXP21dOF
XPcA80ydvLp+XYBMtJDYT96Q/cSGzh3mGd4pMOW2fqmAcwp8/4vE+mVaMs53
YzuVcCJs6MAKQVVXtwvP34vq6z6U2GeCyT6DfBzM4/urReWbj0WCiySvoR3l
NQyTyCdGJJ/Av4l5LEbs7u3RPoPrHgDPfjfQY/CkBI6nxTwLKA8CfIjxd3o3
OFqkFXJ8AvD71Jck7Sv1RqTyTzbJP6irgHlG9/f68dHZHNFCktewkfIa7CX2
pTqyL42R2JFmkx1JW1JvYTPVW+gswdcSXiipw/C+s6oOwxJJHYZ1VIchQGJf
qiP7UjeJHWkQ2ZEgb3D8g5FiyN7N8eSfVduFYmr71C1ZVcPnGvhgsi91l4yP
ovGYHzj6jLhK7E5bye6UIqkLEUx1IVIl+A3CoQcBP1Dz9Ezvomp639Xx8A2+
zW3vX88SqyS48QUVDns+5LQU079jhtYUi8fp3uY8d7N2r5v3yli/g/xZtrPz
nI6pGWz3wDydKA45XyJP2pM8OV/ih51NfljwD/CuDsuLxM1lfG8Aj3KzyC2M
KhIPk/zM8cbKRf129MkRmkiPwPj3VBcOfAL8+z2vLRx/qBBa0v0grSOXLKn/
Fkf138APwIs7+Qbl1pSL6V8Zf5zeC6zzT//lolazmg+BP4mqzWycI2d/BNep
iO7QsC6vhOMNgI/sfiYpclm+2Irea8xj9amqR6/HCtaXge/sevBo6AQ57zvw
5cE6cZ81SkVfkpeAtzv1qefxLAXHjwFv/JiYbWdUJoSR/AP8I/U3MaT7CnjP
Ucm3rfcVc/wY11uws9qw5XMh+4+AJ3XK3xY+vpzlCuD+KxfJNhxQiGZ0L0FO
fnbdalKqTpywVII/Jxz8AznZv9LYUFNRJuwk/gE+e4jZONNvCsRZpJ8C35w/
PnCsZokoI7kC84fONtFz/ClWrJTgtwiHXMF2CV/dHklNlWL9D6r4JeD262Rd
3NrnCPPo3AH/Ipv+bplHmeBFfkzgmr1GmldVy4We9N4Bt24+pDElUSmOJvoD
9/UZ59J4t1Q4QHzIceaOj3554iAXlKQX8Pyii4eBYRX7odjeuKLNofD4VM63
BW6f7Ngr8qm6bxFwPepLgncZ+M2GiJX69qlipaQ+khXVR8J9AtzwrZ3O5w5y
UZr/Xkv577AjAfe6Yu7R56RcAF8Bb3ju3rFbV7WdiuvTDqj3qxaVHL8EfKrW
Pqe1ugVsHwM+wm3hX6kONSLqULHc2O+y9qO5eSL0F+ChTW+6H5ufxevHO5uz
NaS3aUa5IM1DjKI8RMQN8nj7sIHG8zMExBkCb+tY9/FVVgLfw5yfNcVugXxE
DdMH+ImUuBkm2TVMB64DmVtgOX2pOr4a+Cyda8Hb5Qr2/4JPfp3m9Lp6VQXL
7ezfX2M9a8+8GpbDgfervhhrtFzJ5x342L7znpc1K/g9BT5xaeDa4GQl251A
z5Fv9ljVflfD8cDAw47JV9ZcqWI7EtuNNd1GLRqu5Lhf4G/ry90mbqvh/DLg
n3sbnFrYr0iEnMN1XC2b26UvLOd3ivvQjTi7U/agjOUQ9j8KAe3OOFew/AB8
wI0uTctMKvieB17QYlOgrGcpf5fr1FFfCXyX839DRVvbuAr+LvALCqu22XcU
HNcNOef4xR1CmkMirwfjw6Pc3UduVPB62M7mWao81aFcbEl8CH5YOc/rw8uA
LJYDsV+jG7/3ORVWLSAOGfjWjlaWNU057G9lv8yYpjkZkXJeP3DTmLmHDQ3U
8hvHIUTu2t93Tim/vxxnErffKjRbKWjROoH/NSJ+6uzOeWIynRfgR5YH6Yxp
VPdlw71kQ30lUB8AeEC4ZtXovhGs1wNPqE68+yE8lfP3uf7J7W/an9WLY/81
8FWzx1867ZBMfZ6K+H4TAm2ejzXMFntKcAvC11McFHCP9Ro+n39/KUjxA4Qf
pvgl4GfNVX0rpPgCwvG/0N9nLsl7V/pHjoj6k8D31R60+Gyewv/LdunVP7W6
OUfG9QSAW9qcGWNuqfbvAz+w8FOua1AJ67OcX2D+8z/Xy9NY/wV+fNBfo7sN
i2I7Ks7LxNMXtXUOXRfsKB4YfB7TrzJkxqMQ4QvpicADKu6vSmwZLaaR3gT8
bqSqP0UjjYd8O3N4ZbLuuWTRjvRQdZztzL5XOqeLG4kf2H67y29Ky3uZYirZ
eYDPvVOrN6FdpmhL9OG6ai/m7Jv/JF04SvQB/s3YwMAY3xS2g/F5GeajGGyS
Je4hOQHrTzxU9u0WuxfCIpITgPcx6dRy6JJY9oPgXJ9MXlF6a9RtYSXNg+9O
FcbcUDgkCV4kJwC/2bve1vl+iqDqv6u2J7do4fV/e/LRSJUfBPKP1rCkHiV1
l4SjL/6NuxuqcLwj2N9dfkPXWPYv4XuP+XDMrldBeytY/gTuWlyb1sa8lN8X
4J42Bzd7a6vjhYBf0fhlfOZttTzA8fz2Ls5aFmUi7Iq4/1tPm6pR2rmQ18n2
n5lyx+O7K1ieBC7POj3tvWY5329cD+SDdbVmsZzlXuDKDddeTkqW8XqA265x
+LK1TyX7W7FfGVS/FOeR3wv9SJ3B21JEAzq/wPvWxr3UGvJatCL/DvBw55Kb
m5rvidvIvwP8zZ2e2p0exHC+s9ReNERSN3U41U2FvMTxP6Nchn18nSVMIvkZ
+HhDe63GxnxhqGSeCTSPryQ+ZyzF53hJ6rLeo7qssDPzPG3SLLf8ky/g3Qfe
l+w8kMPZ3jXwx9+MP5dzPDbWaX7H65lSI4beQTUeYZayaXq3VJYfMM9Fsqtg
H5k+aW7GEQPU+gvwTSv3+G1frWD7M+QxZ7Kr2EjsG6vIvgEc507eNunt5JBS
lpeA39kxKbSgopzPEd7r1oYln7LOqe3ewAcb5Xx7/r2C5VLgc3NOj7pnoGA5
Afho3Q09RhxXsJ2f5cDF616/ryji+UG3hQP0FyR5V/D6gSe3dFg4/oN6/Xyf
N1RutTSq4HlAt8Ftjs8bmK5eJ/Bz522DRrVRCNK6uMFUFxfx/zhfWjtV/Tgg
bwOfqRU8QDEuVsR4rKe4t6pPB/IFgE/w+NvVNCiY72fQ54ab5Yr+WWmcZ4Tx
OyZeCe6/P1HoTPkmwBN6dSj8UztcMCL7P+7tP8JfTbTWSxC9KP4EuGx++aqL
sS853w1yhf716Orr3RL+4zdZQn4TN/ovrDNgnaoPCOgAvI/BIM8H1tGCtI6W
GdXRQhwj54Oss03UPZ0qulNfEqxz1tyhriN0IoVEGg/c+PU0p9iIeNGX6jjh
ffFadHHL2glpwiaSx7huw90Hs/z1M4Ww//clVec5ah8uHuYT8UKQ+tnnk59d
qvc1kt73tTyOo/TeYZ1peVUyL6MoQZPsKuyP1h4Tmv4hUWii7+Kceh7Jvdhc
81CoIj2a83RCJtj+EZcuzEUfJaLznRcjrgnVF8QMkkO4zqSLMCBvTb5YRvMA
vzoq02vIkApxI/o403tq8rfz7n0DooSu9F/AQwrkGaJOjHCS4gQ4nirI+hen
uGjhKeUrcb7q909X6Pa+yf5BvI+mu5+fT1xWznHOOC+nDx65s9mqSoD9GXhU
QOU9p21FAuqKg8+NHYa0PZl3Ulwu8XesIX9HD4kd9TnZUZ9I4pzXU5yzF/pQ
E32m7VGejD4qF6eRfgQ6/LDWxWRMySvBluplgX+i9o7RcFjhIwLH/84qO/Zp
2JbHwmVJ3aHZVHfIjsaDHzz/ydT7xTRIvED8j31vFis8B42PF6ZTvB9wq+Dh
3/m5x4pLaB7OC1sQ82vquVsi+BzzP9SfPNnHIlp4RDjGDz7m5Hy0c7Lw9uG/
/fgO5MffJMlDuU55KJclfvkM8ssvl+SbzKd8kyf0XbbXmThYPHMsFg9I8iM+
rlTlRzyk8Vy331zf/MTRUmEq0YHj9p1TMrcOkfH/ch2zPl1yN9wrFbp9pb7T
Wtp3zP82tnayQUS1EEj3CfitqssiG9szZeIbSTy/N8XzR0r8Xw/I/4U6aZin
cc4HZditctFa4u+oJn+HN32X4xg3u+YcDqwSZtL/Ap/+7cTdLgNk4kiaH3ji
EYPUG3rq+myc/9vvkKZ8XirXu2M9aPuXrKqd5eIhiVz0gOQi0BnrD6Z+91Ml
ccKpFCcsrZdVSfWyHtO+YJ4Wyu9nLA8pFA9L+rCcpj4sN4n/8V+Hqe/zfbIH
Ai+ifs0JdG8An0t9mfG/oIOJ9h8l+vtS+L9Ahzjqt3ie7jes8/OgBafGpTwV
J0rk52CSn9HvjOu6UxwX+o9zvMRDiwHunpHcDw7vxf2PPS4FFxzlebjOJNWv
QH8xrneR+c1416xyHo/1n6F6iZgf65xHfffQt4vr/DuPbejsdJnH434w7afK
4+sq8Wf9Sv4srAd4xp29HzdNSOD/4rxapfukoN4nuB+cNL4oSXLP36V7HvYT
xJU9XpwwMs8hjfsqAvd+Fi1WHNnP/d2A/9McsSakIZrHYx+jTjiF2r29xN8F
fpb8m4sl7+mrcNV7miR5T79sUb2nyyXv5jh6N7F+4N1adBrfds4r/i7wqoLe
7jNsnvI6Oe46PnXokuEXuN8o9jeX+BPjue6lYXDwbePz3McNdC6k9wLrBG46
K6mF7eh07iMJfC+9I5if5aiSMy3WvD+g7hNK51RnaGjislUHWG4HvjpuU9gb
6xzmf+ALya8EPgT++qCNT3/HSzwP6JzVr0uLIL98nge4hdHq+YWPC5n+OF8L
mqZ0MIpOYfoA/8nc39JGYy9/l/N2Zaq8XczPfRMo3xbj2f6/3ntu5YEA7usH
+tdRfA7GA7+Wosq3xX+Bz+tHNDxblVUk4rvAPTUn6S3wlHGfR+C6ZGfG/oLP
vfZ0TPJ/E8P7CHzq7UdmXae94vE47zu8h219oFvAdGN9luzA+K40ThJ8i/HP
XTTepp1Q9yvnegJUpxH053jjG3H5/n96MD2B+1I+73aJfL6J5HPQB/fJU/JT
Yx7gf1Q4XYypusp+Isxzq3BF8RfNDP4ucA/K28V4zpNdZnR68LUypj/wd+S3
BT3Bh84/v/B325DP+8v5jJQfin3B+HoTVV4G6AO8Ib/bFr3EYzw/14PaYNE3
4KS6vy3wOur3hPmB37vz1uxCwDPmK9wnAdOmtZu9TvYfP9q35EcbLpFPWlqq
5BPMA9ysudrhye58tm+DHw5TH2rus4x+cHcfuEZkxfF7wXmdJJ9gPThfKXuW
hMUtLed9xzmaF7Vw43dxan7juoINo59f6lbN68f+XqB+EOBb7GP3Rd/tCnqR
zXwu7UeG8aDPaqqvApzr2HiNrZM/yOFzgXUupDoe2EesU56zYeipt0U8D9cb
7HfV78LEIrY7cR0Dly47fP2imK84D+J1r3zTqXn8zuK8W3tqV28L2c7vLHB7
qh8L/gfeslII1Wx/nOmM/dKo0b3f0yuC52d9c6mqrwfGA+9gdayD5rJ45lvQ
OflBfJfWg3KZPzn+oeupiIylecz/HNcxU8jY63iOvwt+9hhsNzNCvpHHA2/v
qNIL8F/A3wQNeX/Ncg/fh+w/Jb0A9JHWjwLfYn/1drT+7a6Nup8s2wGo/jnm
5zo2GoqWGbb5/M7iu9Mp/hDjcV56uuyJDl9ayPce1yfJTb9/drGSxwP3uN71
bGt5Md/b4NtWZH/bLtFf5KS/TJboC06kLwDnvAPq2wV+A310jX8790mRw+cX
dA7u0+2uxi8xvF+Y/4B3eeoONzVfgd9mHqk0qAuJZfqA30b0zDZZ7Z3A/A88
TqPAeENhOL8joFt5/gxjjW98eTz48HlsL9vvC14xfcBX2gYvtervlfG+Y/2d
KQ58uEQ/siH9SBpvfJXijcEP7LeieumYB/hBqjOP9XNdcaeuW8dOvsTr4Xwi
queGeYC7UD1t3Hugw2XqIzxZopdFkV4G+mO857ifRud7quUl8NU70jdLJHFx
Lak/EdYJvC3Fm2GdwG9tXP/CLFDJ/Az6683qt+VDD7WeAr4NoXgk/Bf3JaE4
H+DYr+5+KR0CfF7yvQp+cyZ9EPcq8KWk92EelpeurzDzM0nj84LvziM7T6hE
r6wkvRLrB55P9dakedNBlDcNPsF3t1P/XNCf4yvI74/xwBuoDyzG47sjyQ+O
8cBDqV/h1/zOGA88j+q8gZ58j70NLtJLyWW+BV48UeXPxXnHOkPnhKZ673Dm
eXB+LclOi30B7kf+UKwH53cG1U/D/+IczSA/HfgN9FTo3/T+PSCN3zv2K5E9
B+OBB9V23OsQqZZvwbc7Jf3Qwbcf26v6oeN94Tx9Sd9t0MG0/7/7boOvhm9U
2cP/B11D6kI=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnXXcFcX3x+/z3Ht378bdvYhBGKAIgo0oKgZgK4hii6gYiCB2i4qiGIDY
3d2N3YHd3R3YiNjx+7z5zPf1++N55uzs7Ozc3dmZE59zTvdd9hm+d3ulUnm6
qFSqKudrVCqfqrw6rlSWqlcqPfX3W1ul8qJOvq6Gn4p+KKpUVlF9m46vzyuV
sWp/clap3KX6Pqr/Q23uFX23/jZT/fW1SqWltpPV9zAd76b6ZVTeqWsP0LUP
694HqP9cbRbRtZPTSiURPVHtr9a1V+mvq+orSaXyo8r9VH+S+sjUZmEdr6l7
DtBfXcfH69yiqntL479Z/R+hy0ao/5V0fkX9/adzJ6v/f1Qeqra3qc3hKju1
KpVn1G7jup/FghpfD7X5QP3sq/v+JHp/tZuqvyVEv6f6s0T3Fv2x6MPVprPu
P011t2i8C4peXOfmV/+f6fwi6v8V9buN+n9J5VUaw4pqc5HaJzrf0N8Nuu5Q
PYf5Vd9d186na0/T+N9V2UF/p4p+W+XRpZ6j+nlO/ZylfmK1P0r91DSG5URf
IPoR0W+JblfZ1DUn6trz9JteFX2e6C9UfqTzQ3WfB3R8htptoOObdW0XnbtY
dUOblcpjGtMaanO1jt9S/Tk8X/2WG1Wuqvpv+G2q/07lSqpP1c+6qp+j406q
/1LlINXvrvHupr9NdI/t9beO2tyiPvdS3Tj9DVPdnepzbdX/qGu21fFg0Ter
zd46v4WOZ+j8q3rvB+h4ax2/qWf1nspN9fe47vu+yobK19TmULXZQccP6JoN
1M+v6rOpc8NFt6nuOJ2/RtfvqjbP6Dc+rb8Nde4dXTtZ53ZnPHq2O6q8T+2v
V9sxoh8R/bD+NlHbP9Xnh6rbWPQ9GueNarMX49HxTaLHix4m+hT1N01/++j4
co1hf5Uz1cfzuudz+tuS56jzB6t+K8agaz8Rfaj+TlP9qfrbT/T9Gs9YlY/p
2jNVd5jorfk2dbyNyprKwWrzs+iDRB+le3VVm1NFn632R4p+id+u899pvJo+
lRdU97PKBfU3SWM5Red+Er2axnCq6NmiL9Az+UznjmGuq/xIf0eJ/prx6/pv
1WZ/HX+uUrep9NA9puh4CZWbagwnie4uei/9LSD6JT23car/RvQ41f2qvx91
3Z2q30z3vU/1kf7WVf2VKldR+YXqTxD9vdqdpvveI7rOPNO5vfnOVH6rcb6n
cxdoTL11fLrql1L5mu71sur+FP2M+nlF9IU6t5aO/2P90X1jXXu76tr110XP
sKbycdXvqGvvFD2YtYK5o79lKv6h/+leNzEO0T+o31s4p3ZzdfoeXXuAjr8Q
HfHb1M+zuu8vOn+H2t+uvwtZv3T8NXNH7buK/kr0DaJ3U39f6/qO+lta9b+o
/m7V99XYzlJdH96v1oF11M+TepGpvu2FdKOGyvlU/5rqO6i8WOd+UV9f6Fs+
VNc+p2u31rWXqv5X1X+p+iGsQaqfqf43Zq6zpvLu9JeKfkr1q+nah0Vvoron
Veb6W11jGqN7dNW9rlJ/p+h7H6S6AzWGtfRsTtPvG6V2n2hcA3R8qo6vUbu/
dN9Zuu+laj9Y7Q9S+/f0fN5U2x2Zq6ofqnI3rRt7qP/f1P4rtW+y5qvNarpm
B9U9I7rQ3znq+ymVTeZT1Wt1J/0trPZd9beQ6Dj2fsTes7f6XlB1L6tutOiX
RW+jsl3jaIl+XvUXqs8vRHfQ3/L6fcvVvWdcUfP31Vl/dzBn9Pel6OG67/3c
R38XaPwba4yHq78x+l2fqG435qna/ML80t+/zBOVB6vchd/Heq+/3rpPWvMe
2kt0o+b9N8v8m17X2Iap/2fU/zM8t9Tf8G/q52ON5UZdc4H+anpur+jcIXqG
66mPE9XmZV1zhNqcLvpt0RNFH6lzJ+n4L7XdWPR8Kh9Tv4/q/HUae2+N7WSd
f0XH7zfcxw2qPzzy+32LerV5RH+n6LiL3tMTqttUY+yssR6idhdqPJfV/f7f
0Lmx6r+P2m+gfp4W/bTqbtJ4N1bbDcM84bfxG//QfLlS156hund0/Kzqn1X5
gdofqfZnqf59HW8ieiNde6aOjxF9rsqPVf9K5rG3NPb5NZ6O7LPq7yi1uU7l
2Wr3gtq8oDabacwfaFxL6+881bepzbeiLxF9j9o+Jfpivtmm18u3dN0nVa83
8E5dVT+fytdU/3nD97+N715/F6nNP3q2HXT/lv4uVX93Je7vBZV3c1x3uyGR
38U57F+qu7/uMeyj68/THFhW16+qv/Ur/k5WEL1ixevkcPV1mdp+JXpF1a9c
8bf8huqvVP1/6uMJ9Te06uOvda4f70T1n+vvBtXNUt1PVa+V9DWTNYZvXHSu
sf2h+mtFv6i6F/R3HfNP471c5Qrqa2udv170evCVOr+pjq9mziXuo6Ln86fq
nq362jLymsC9R+ncjSq/0Rje1LVv6O9Onp3OP1f1uZ/UPlf9zew9areRutxV
fc9W/fyqv4U9TfSrom8V3Vl0p8j1Hye+rq77fKj+dtLfbazLOj+H75l3GXk9
v1T0zirvULmj7vF14vOlru2l+ZfpN8/WO39L9DQ9uzH61n7VtXP1N0PtPkjd
x5ca42j1c5foXdXP7Wo/njW99PfKe/5Q9WupnF/tLhS9dtXveinRK4k+QvQs
0X1FH97mPeM2fl/d8+8c3XNZnRurc0Mjz98xrF8awxei59PYl4E/aTN/X6T+
Vj7ROP5i71DdQP2WFaretxZSfXf1vZj+3tdxom9jFbVZn9+beu/6Qm3O0vf5
D9+dyj/VT0fGzvfR8N53HXu92l/Duo1sobGtXfP3vJDOHavjT3T8qc7tzhqu
Mso9n9dTP6cUnlvTVO6o5zWTean6hdTn32rzkPpYFh5C9H2iezbMs9wlep+G
1/5XRf8u+jfVPyB6az2LC1S/gupWVj8XiV5J9Dcay7rhu/ta9LVhfdg89xrC
WvIee2a718yv1PbLwBcdrH5eY56qnyGJeaxFWeMb5rVu1327qL/O+nsHvlb9
LyL6XcYHT6dyS55vw7zPk2qf6b6P8m1rXm0R+KINdP5CPYuarj1f5dXqJ617
X98hMY8yUG121bNqY26pzaep96YNVb9m6r1yK9H76/esqXteqPuM0DM9F9kq
9/fLXg9PcJZ+36Nt5gOGNbz/PqMxtWXmAZ6LvZbAI8EzsR48qLLBnpeYVxjO
s00sex0mejp8pv6qbV5XRtTM552v8jz9laK7aZwfqdyl4W+UPZS9uZPaL1g3
r7C9zj2gciOV1+o5dEC20vGRuvZ1nkf47uAz4TsvU9/ftXnv51vvEHnvL+pe
T14QvZiufUXldg1/+58FHmBMw/vzi/q9F9W8X+/Z8Np2V+BF+e7hwebn+0zN
v41lz9Rvv070ANFXtXne9tDf4Krn3u+it1f78fB7avNBzfvKvjp+V/TH4bt9
p+bvmyW0Q8Mlcjr71fnhex+OrAgPpvpj9O4P0jWbquwau36oxrK5/o5W2yVV
103vfRpzVXWDSvP8e6qPnPmnv091/UX6Td/Dz+ncj/RXM28NYzur6vrVg7yw
gKonqP5wtdkNHiz2nghv30n3Gt3mfXYz3W+C6B6qT/X3bbtlCtY41jo9jspI
/TtS9CLwnOr/Cf0dCv+a+z5vZuYN3tS9doWvasxTEczjn7dTm07Iy5nXStZM
zj2tMUxhT2iaJ+C7Xjo1z3CU+tlD7UakfvYLNCzT7NdmuWbVquWj+Xlf8Dcq
31H/W+WueyOzLHVIm/mD79Tft/qbruMH1cE3gZc4Qu1PVt0bet7f6PyQmuWl
uTXv/5xbT21P5L3wGzSer3T8vH5AN41pEfgd0R/qN0xVm93V3865236oMfSv
Wubiff+pd3+U+lxAbf9Um/VZ61T+mlsGX07lkmozifVYbfYqLL//rGc4QWPu
rzGN1Lkf1W5l1R+hNuurzXqiV1TdrJpls8ltlgePZQ3XfT+vel1Uk8ps1f+k
v7OZu8ylqukBVcsyvKeHdK+/an4+6+i5nKP6fXXxHHQTbd6f1qy6nufeXTc5
U/Tp6FSafi97qP196md24NNG6rir2r6nZ3Jszc+K/Yn1eFKb5d8dcz/PDzJ/
j8e3+fg/9fNv3e/u/CD/ThR9aem1/HOVG+odHMj4G5bnDhIdB9n5wPAtdEw8
p0rkmsB7f0T7xDzqZ6I/RAbgWalsqX4k8x+eTX87sJYyD4Ms9ab6vFf9H6fj
EToemXkv/VhtZqn/j/R3fd1zYJ82y9XL6If+AH+hMd+sczcFnuM4tR3X5nPw
COy/7zHfauar+VavUdur6+YVWIf2DPzDjYllircb5v2nwyvpXL+qny3PeMum
5/AoPeMtmn62O4m+I/azXyr29803z/d+bezvbFGVp2oMW9e8rq6pcW8memld
NCr1mrSzyuN0fLTozZgDqeWU9zSeK9TJ5UHe6KK+3tfvvAQdU9O/d4vcaynr
7WfwVLr+X/Ze3mnmufuMft9HpZ/hlmo/Te23qFlfcLSO/1E5Xdf9HObyv2F+
sq4i/zO3Wd+Q2w/OvcbvqPuPya1f2Vr08rr+D9EnqVy2MN8ysPRcHVpzu3XD
OkC7QWF+0tdiTfMzn6kcUHpN7q0+PoSXCuvkNGSZdn+3g3SuH3s4bfUserX7
eGzuNWtb9XN/7O9lfj3LRZvmqXZQubL63E7tB4V1nvWNa4bV/H3ybR6b+9nc
i1yWe4/bpWkettJmPvZB9b+EygXU/2Fq86fondXmh7C38ExXRD/A71Y/Q3Sv
KwJfsRHfdJv1LyP1PrcP/MMiTc/xzuxrNfe5GO+y6m+XvvoVvm4j9flYbP3N
ghrDPmF9+YS5qT4va3OfJ+XWA+2h+uf0rJ6tW96Zk1snuYzKY1W3mu63k+qX
17XLRdYLd61ZD4zueErDOuB3dM/ba9bFLclv0Fh7qfyQ+a9xLqL6njo+JLHu
9yT0ZJn1wesxrxvWB7+NzrlqPe3qOj4N/Y/uu4LKIrHusF1tl9Z166vNajq+
MrFe8Rn0jQ3rFJ9Tea762Uj0AHgatT8i6BIPVv18ohcTPTWy3h59eg/93iX0
N0f04mq/dpg/D4heU/RKou+sWR9+lJ7pyepngOr78g40hneQuVRer3uvorqv
9FuuFN1D9WeqnKj2S4peivek+2zI/XQ8Sef+5NmoXFt1zZr13WvAs9Ws819P
9Lr6647MhbyivwfYR1LbB97QvdbRO/tL5ZLipffXvYp22xoOTGxHOFb9/yt6
oOjrRB+vZ7qq+p9fc+eOqnWn6Fj/07mq6AkqV1Wfv6nPxdXnKantIUeo/lhd
uyx8rK79SX990auoXFPtb9CzuUnvNtO9NlP7O+CNde4ptdlfZQd0K+gEGt5/
tqp5Dp9Ys8zCN/9iu79NvtU/GubflkSnF/gxZK1L0EuJvpx5jByqcmW1acbm
LS7R8Ze638G6xxcql9fYZutcP/2Wj3S8p+o/VPlA0P/syDqofo4V/So61aBT
Yq96WvXTePbo1fTNvKyyl/rZRH3ej8yl31uo74fV11S1G6r6R1T/qOpfb3gf
i+hTf9vDa6lcQm2+R/+qfp5MbKvIVd6YWvd/l9r0VpuL1M+l6mdZ1lV+m9pv
yB6j+hmqn6PfMEW/5WeVcWr9/BPohjWWd9ttw7hBx/3hX3T9dLX5vs3y+Xk6
voY1UOUevD/mvvr+PLdNpBv8j/7W4vvABpLbftFT5Qp6PsPbfe7v3N/ZRD2b
c3TfVcJ3tyj7abttCYuJHofuR/S9aodRrqVycM282Xasg02fXwv9YuG6IaIf
UP2+atNB5VLq56l28w13N91nqfKP3GvGUfBNatMvrCHTRS/b7t//T25bycqs
5frbSPRqKt/UXBoc+Vy1aXvHgNy6xMNq5l1GtZu35Lnvq/p9am73b267Sn/4
LN1rt3Yf/5R7P+nD/pN7TXhI383Duu6hmo/n5h7Xqnrv4wq/qz/0TtcrvLZt
UVq3+XSYh13V/5aiB4oeXLhcSn08rDEfgA6kab3loTXzUug2p4S5/Rt8Bc9K
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
2WbsH7Ii5auBflbl8+zLFcv48FTwVqvHloP2UD/XaAz/VX3uW7X5VHWHip8a
2XAfYBTRDYJLHF6xHgDM5n6Z5fzXwr1WLnw/MJnoHNAzoG8Y0bBsCC6xLD02
/CbYlGgzjKVfxy+yJyErFLbVfyM6qXv89FvWjRelHbI52N4lmPuF9+B+gb9F
53RHbn+cq4MuaJXU9Koaw6mF7cxHqc3vVetQ8RvZAFrl6mpTj4yPQfcxPNSD
Ne8VWY5GF7RGw3Xg0NFF4ENzvPrcGVsv942956AnAUOyW9M0uhN0mfCTvSuW
TW9us242iqzPpK9Riev7sZchW4o+n/4j+49sUrHsjb4FPQFyOtjtFdhXa9YR
wccj34JBRfZFDwAOfNmm90/2VPbQb/R8WrrmB/DF4Vr0TC80jTFfhrlTWtd9
Y24Zm2uR+0dH1v8g16FPAPO+fNP6DWS3VVRGsce5s9pcUjOu9djMehC+O/Qi
txfe15dT+1ty+6Z8ynofWe/M+95L43tP5VoBkwyNPuWmpu3styAjl/aZAu+N
Pe7jdq8d4GpeEr14xXbRh9ste/wd2RcJmXpU023Ab/+euK4Te0rT/nI3iP6g
sO/ehazfmffPX1XXo2rft5nw4ZHbs2c8WXoMd6rtwmrzgehbVf9eab8/MAD7
Fa6/UvQ/uva1quX0VUT3CDL7VaV9Or9X+Zfq3wtYkX46/3bVessp4DdUf6f6
+7Zu3zz2hkHoX3TP99X/ilX7czXg54KeB33PMuh7I7+zHxPrKudDn6c+3gr9
V1PbD7uq/vO6/Rg5HhJk9gt1/seG5Wt8U89PbbfaBJuFrnle9RNZqxteX/fB
FlLaV/fmYM/Flo2fzFOZ98+ZGtthkXGEYAhfqdsmsrTqb4yMqcb+sXDdulB0
ZItHnodvtZmPhJ8cq3t9XhiDcRl8XWE8+5W5dZdvhPVtk8x2l88S60jBay8O
ti217WNnjf241DaRUWBaI/trce4/lf/qb6ea+Wr0u7SbpbGdXPczRE/IONHd
7qK2u9b8bSNX4g+1TuCrsZVv0rTN8O12y9sbNr3+f5QZ18c876Xjk9BHqXxe
57tUPT+vrRhT8ZnolyrGrMCz3Fgab8Dcu7Fivhv+G/7/mdL0YWp7cGZ5DTsU
epU3VX+4jjfVPS6vGM8ATg981HQdn5F5H3tZ5zdqWh/wleoOanr8Q1SeUTV2
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
AQ7q/wB/Frki
         "]], Polygon3DBox[CompressedData["
1:eJwtnWOYA8sWRTuZzMTpubZt27Zt27Zt27Zt27ZtvWu9te7Oj3yp6kJXq+pg
n10TbLjdittWi6L4ol4UNf7X7RTFwZWiWLpZFK3hovikXRQ7cnxRypcjf3iv
KL6n4qQc25q645VF8ctgUfzYKIrpKK/w/wBl79Nplz5GoP4M1L+SY1fT1+f0
Mxv9T0P5kZQX/F4h/dxAUWxP27laRXEq9bvUWZH8L+SfpNqH1PmV9JT0sdFQ
UZSUb0z5792iGIn6/5D/jfQUlK9H+WK0mYNzXcrP69uS8hGp/zjjWZLxHsWx
Fxj/D5x/VNrPwrG9KB+BPranwWUc/4Nr+4F8m/IvaD8d6XfpbzLSm3NsCdIT
0N+ipJ+nvzcon5w+RiN9EnWmIN1hzPNTvh99vkD+Mtp8RPk2lK9J2WO0X4Jz
T0R5jfSH1DmF9D5cw7xcS0n+Pep/yrGRGNNP5J8gvRzl41G+DX38Sf8XkJ+D
ss/of1b6vpdjy1D2BH0uRf+Tc6zH9Y5Gfh7KHqPP1xnvG9SfkLIafe5O/5OR
P4j8zDyPJcjfRP2pab8N9a/r5X5+SHoL6ozA+VqcY+5a+my3cn/2pPxV+qvQ
/lDafEXZhBzbhPMvxjlfoOxP2s7A+7Im+R/Ij03d2civSP2DqT8R9Tej/hDX
OArXthD5D6jzK79xKZ+ZY6NT9qJjpux5+niJ9Nqcf2nSczO+M0g/wbGPuZY/
uYa/GN+HXp/XTp0Byq5nHEuSvoQ6Z5NfmN/EpBem/3Hofx7GsBR9/U67X3gf
LubYO9RvUm9mxjsG452X8WxAnZG5lk04x3fkTyT/K33/6/jIH8w5v/fboP6c
jGVv0j/T31jk56N8I+qPQvvrOL44/V/EGM6k7VIce438/aRn5HzjMY5dqPsp
/V1J+ip+n5Heg2Nj0nZc8gy9+ITf5aRnoP9V6X8G8kNcy+P08yF938IYPvEZ
0P+t9L8gdf/HeF73naavq2mzKNcyEu1nJT1EemLOvyz136T+EP3MRL5Ffi3y
91L+K+3n5/9C6o9BHzvS/2K035b8xvT7O+ULUf8Z6r9FvelpPzLls1N+A+O7
iXu7G23+oO2d1PmOc0xIm1fJv+VcQv31fYa+a9SftJ7nOQ3lW3JsOdJd+t+U
thuR/o22C9PfrZT/zDW/Sh8TkR+JtkdzbGLS+3JPLiO9Ff126f8f2o9GX1X6
+NvnwYneI/0IbWehfBSfH+U30sfNlG1Au4/Jf0n+Ws55M78RST9Nm1/of1J+
x9L/7N5zyg6kzZeej/5Gor/JGeMkPLBNafMj51vG6yR9BHWWJf0Q55ufZ/UT
+Y1Iv0n9zSj/ln6npv2IHJuR81/t+el7BsYzOulTqD8j6SmoP+lQ2vyP/qsc
m5b6c3NsLOpPy5guoO7/GO+epD/2nSE/IfmfOf+DzfT9NvmHSD/K+RZhPBOQ
r5Iel99CPl/ajOb7z+83yiai7uyM7yfyHcq/czykJ2E843PudbwG8jdRj0sp
nqTNzaQnpXwCytfl2HfOp4znUNp+4/tBejXKr6hljlmV9Nycf1Pyx7fyPb1C
nbFdC/gtzLFZuMbt6O/2Iu/gH5zjOOdq5yDS43HyQ6i7AM9nJfK70GZ1yl+i
fFfSazrn0f9Y1JmX9NjU34v0l5SPQv2TyI9fzZhOp/7B5Lvk7+F3JvmdeL/O
ov6q1G1zP4YZz2iMZ0POcQjj+Zlr7NL2B+rM1E35hJS/Rr5BelnOuQvlW1P3
T65vF/o7h7JZ6LtDfzNzvnPJL8H41+Acg14z9Rfg2G2UPUn7ZXhex3j9pEvK
F6R8DcpfpPwD+p3aZ8d4D6T9ppSPT93zObaZaeoc7r2k/9UoP53zP0r+EMo2
5fwTMMYVGO+uvkPUvZr+KPrvHnmv9uCc23G+Ozi2O+kjvF+U7UZ/u9HfDGXm
2kcpH5XySWg/Jul5KV+B8mU4tjPtn+DYcpx712ba+o0qk9xeT93T6XPqRuYc
556tlSeo+yLlW5L+lmPbWcZ4Z+d80/p8yD9G+eqUP+T3Rn4JBn8DfU9C/hjy
MymvcO5VqLM+/S3IeLai/ByOTcF4ZmX8S9Dfc+TH81qbOfcd1Xyjm5Ffh/zT
9DdnPTKLsovHNnet4dgYtJ2b/PLkXyO/M+ke7Q+h7k4c2478Lz4Dyu7uZW5W
JruL9PRczxZDeT8PVAYjvxn5TShfiPqnkt+c9Ob8H8Pzeq2ZubDlIsGxDenj
ulpkgPl7yTuXHkjxBqRvo86ujOViv03av8I7+jLtj6B8SdIf+85R/1v6+5Lz
30mbmXnfvqK/6bsZk2PzGnam7s4cG4H0TKTnpL+3lKnI38A5niG9CscXGsg7
7bu9H/3tWItMuS/pg3g+49L/8/y+oPwO5cv++W7ieTztO1eNTNKk7qP1PLsH
lGkpe5lzvET+vv56qvyzJ/nRaXMU5Ydx/Ajy45FfnrJx6fNU8sf57Kk/vWsY
13oz47mVe3NsM+Wu2a7d59H/XMoTpBeg/oX8T19Jn4dTd2X6PJG2xw9E/h23
kbltloHI3K/R/nXSD/fXmzf4/438lfSxJHVnpv3sRd7ZDZr5fg8mPTXnPIPy
/Tl2IPlRyC/j+BnjUoz3ZPI97sen9P8L5fPTx07OL/U8a/vw+7+C/HSkd+R8
ozYigyuLr8mxjSk/3jWN/L7k93X+435sQv/r08eJZeR7r21hzncVdSfg9y1l
sw5kPXtJ+Y/0Vhx7lvS9fqPkR3I9IX1bPd/CaZxjKtquoww0kDXKtWpBjg1U
cmxdyrbktwnp1zk2N+XDvA/T8eyvoP+ruL61KF+S8puc42k7I2NchPE+Tvno
fsscG7mSPlyTX2VMrwzkGS1NeibqLzoUHWRM6l9G/bOUH/wGqH8WdcZm7Cdw
fH6e1+J+v0XeKeXpjZq5d9dQ56tG1nfvxVaccyznLn6r+n1ybGvKnq8n7Xy1
LfW/43dvNffoHsrH5hmu7bvNmP4lPTu/WWl/H/XnIP18mfXoDNJbMp6jlbP4
Pu6i/u70tS735FPSn/H7gPz39DkK/c1InT0auYfey39dD0jfyjVPq+zMsbnU
dej/H873B3X/Ij0h/a04FBl0LI7dQ37/vq4zGeffhv63YOwT0sf6HFuVPo72
fNSfXtmPPpah/eb0vxz5pxnvJcqmHHvfa6e/A+lvZY5PTn8bcex96m5DnzvQ
95j8vlVWo83f1PmM3wb0/Tl1Pie9F+0/qGSuHZH2V3GOifvy1Mw+X+ocVsua
Mx3plSg/tBadYlu+/bGpczb9v6buSfvHyT/Iua+jvynIr03/b6jvUWcd0tty
z44lPSV1LiJ9Pf1Nyfk+5XzX0d/ntP+dsno78qzyu2rwnpXcvxWofwDnH49j
2/l98ruee3EDvw1cOyifhvLLlf8p25txrUj6Zdrv08qa5dq1F+fYk46XsE/K
X/QbVr9VH2J8e9DfXLTflGMfUdakz0+bWaNcq5qMeX/SN3DsfdqfTpsbSa/K
OV4gfyT51Uhf1Yzuezj5q0m/w+9fv2f6r9H/0+Q/I/85v2fUhTi2zlC+Yb/l
efjNQvt7+vOb69usnPsb8uuTnq0bfeAYxjIt9+uDVnTBuzj2Iel1qbMFY5+Y
9FqUT0L/q9L/5NSZmjYPU74A/Z3airz8ejvy8YSuC+Sn4v2bgvojcnwa8ltQ
/x76O5s6X/K8tuxFlz6e/Ajk96TekqQ35f9o6s9APxdx7X9RZy/SnzeSd76e
u5HvfwnqP1LJ/PkRvxp1R2NM6/q9tdLfY5TPow5Cv+MNRUbutTNnOHc8rUxB
2/d8WWg/MuWD7Xyfm9Tyzt9CelT1A/JbkB+F9Hoc25/0sYxt1OHcryt9vzjf
fN7rRnRDdSR1pQ9sQ34av7vhzL/TqetUMt++rA2CsTzI+D9T3mLMVdL3+46T
X1kZT/28L58qP2sr2YM+1iB9GPfwBvpam356w5mTnZvXos9NnMupczv1T6P+
mYzhvnqe5VXK367trbybl3D9q5I/gvH+Rvob0lPR32fNvMvqECXtV6G/o8hP
Sx/bk1+a9neRP5r8UqQXoP9bXHs4/6GkR+PYKn37wz3kL3ceHYzOVCE9l3MO
deei/zHpr8d5L6f8c/Lrka+WyT+j7M94pqT8J2X9WvSx7xnP4ZQv7f3nXozS
yrm0eUxP+jl+V1C+H/3NT39X+H1Qd1JtXM3I2MraDw9EX/L7fEhbAdfwMWU/
er20v54+b9R2p3xD273p7xLSi3HOFSuxzdWHI19vSL5N29XJT8r5t6b+9vRx
he9mM7agr+nvZ+q86ftI2bX8XqL8pXb03bHpu+H3w/9OtN+Z851P+jq+3+tp
vzLn6JCeRhtRkT5ebKUP+1qSNm/Q92v8riT/Hu1X7+uz3rvlavlmN+G3Pekd
KD+X9Kb8dlAeJn+etrVG1hLvifPVrbQ/kP7W4/5c04p+/p1zayVjfoRjpw/G
Plcqf/B7krZ/8JuN8n96uR6va0eubwrq36/8RpsHSb+j/kX6HH6Pk9+B/PMD
sWk6sf9M+xMo24H816RvUedVl9IeR7qlzEz+I8qHfb7UOZb625H/vJf581zS
d3Dsdfr/jWOnaD/i2GO0v5zfBbQ/n9Nd1I5cq3z7tzoA+W+1p1F/I+q/qX6l
DZTy58j/TvpBZTDy19JucedHZQTGds9A5vM7vP+0v62ITcX53rKjaP92I/q7
7+Ij2jfU5fmt4no5EHvBUpxzHdcT6q5G/3/2cr+97zsMxwalLermwayxJ3dy
/2933qT82G5kY2XkDShbvZ73cxuu77R65hnnm5X5jUr6Zfpfj74uJj027Q/x
nRuIzXVl2r9C+fp+z4xpJPIdzv8KbU9gzO82Yh99k/qPcv6VhrPevUz5rvym
In04/U0/EPvb6rQfmTbb0tc7lK+t7s33vzhj24qxrTwce+9blH2ljMzzuI78
B+pX5Bcgv1wztqGRlUfV1/nNRfkHlK9J+dT0+VqRMa7u98L41mX8MyjPkz6O
8cw3kDly+07sdNrr5nM+cgzN2DZ+U97y2XrPKJ+J35mk33D9oL+l6G9b0iPR
ftlabJgbu77ye9/xUz4afV1KfkPqz0j+fNLHc/756X9K+l9YfU8bonOzcqH6
HX1uRv0zlEEcH2O4nfqH0P5l0iM2YzvShjQC/Y3TiG3vPfLrKOv2Ys85mrGu
ORz7zuWUXcZvIcqPVoajvy9oszb9z0P5uZQ9SJuD6llfTye/Hr9xW/me/VbX
Vx8k/U4Z2f43ynal/+docz51v9aG0Eh/qxQ5Ni91duHYmJRdTH5B149W0q65
E5H+mz7PpP+DuL5JSD/qHFFkTnue9CPqf9S9nT4Wpa8jGf+MykfUWasTmUfZ
50jqrc14rqnnXvgMfBZP8ruAvl5xDnNs9NGr5BqVH5Yi3yB/ci36gPaphQdj
s1Mn0H43NmU/NaMf+P6+XYtPQd/C7I3I5sros/b1C/tazfWL843jNRe5htlI
38r47yT/EO0mGo5Orm7+HL+PW5mf1qTv2zm+COUXaFMbjE38WI6d040uqU75
dCdzrnPvX7TZj/SbzcjLHd6pWeux939Dvkp+KvLP0f5Z8h9qs6b9uVxfl/73
9D3mfCdS/4yB2Pi19Y/My7WD8gTnH4X0U7R/aiAy2h7kD6X+YeSno7/zGtFz
1Hc8p/6F93qRB5QLtqX/ryl/byA2pm0pf4L+Hh2IzLR7J/qhsrgy+ZPkX+3l
+/E72sb3jTZfUV7heqbkevYmv3f/fqhrv9ON/OzcvxT1zyS/+0Bs9I9qmyC/
E/lxyN9L/if6WJj03pzjBt/9buxJ2pW+KiODK4u7BtxKekLO8Snp8zj/Elz/
M43Mf+oI6grX08c6+qPo70bSV9LHXv30doznsTLyv2uB+tCp6huUL++aSJ3r
m9GXNqvEf+U643qznjZ96v7MuBapZI12rX6A8d49kDVoRHWvVvpSB16auqfT
ZqXB2DgOoK87nf8HIxNM7vg4dle/vWvZLa2s/Qe5hpFejT7OZLxbkL+sb69d
fDA+uLPUHeuRnZSh9GnsR38H0N8+HDuMule5bg1mDXItulObi/KDa1gr17O7
shH3cxXu502tlG2gTZi6Z+qDYWx/kx7mfi1J/b2KfKPaj5fyHSgyJu3HPs89
B+NzajGWf8gfMxgZ4QHK73MO1B7PGBeg/BHu2X39+ztSN/bcnxjrCvym0H7O
eSu16Hzqfk9S5zHfJ865oLIEfVxHfhfO9zjlTzQiuynDaQNU/3qS8z3F76NW
7F3aQrSJfNbJMcuqtfjrrqL8Usovofxy7se55I8ayDP4tBP/grLCZ+rk6q/k
TyY/J+e8xmfTiC7lOdX3HvX5VzLGC7U9kr+V9MH6/xxvPXOP9tzlyD/QiO35
Cuqc24x94BXKX9V+6FxUj+ykDHWGc2IjtnfraD+YRZ8l+bs5PsjzupLxX+y9
oM1lXM9ptDnPe8/51/B96GY8l3J8Mer/Uc+5N6P8Puda+rx7MD7brUlP1Un7
06m/MPVP5v9M8rNTfxV9M/R3Ql+++8H5jT42oP1qg1l/tRNqL3RNd21/U/1m
MOfwXPo7JnYu531cgfJ7u1l/XYf1bw9qx6imjv6QC7uZL503x+v7w/SPH1GP
/38F37ki7+D9rg30Mx7lc2ojbsR/NI5rjz7MRuQw5bGZlRe03fXiv/3G75r+
XiS/NuUXqXeQ1xmkbK3M/BDHTmAcp6lv8QyubUT/vEBflDpCKzqnuud9fiOt
yLfHUPdO8m+04k8cgfN1nANIn0r7c/rvq7a8Sbmn81H/ZtJVzn8p13vuQPT/
87Slc7zlt0N/h9PfJq6v2ofIH0b+fOof6/xJ/W870YfP51wPUP6usoFzWP98
57ajM6s7KzOtqI2X/P9q+Ub1t8xdxp62a98+MbL3ibJftXnU41/Ql/d9Jf6N
fan/2FB8Tndz/ib5Wwfjw9mQ/AGOv5o1ZS/qn8h4FiM9E+V7U74P9R+h/S7k
H9RWRX5y8iPod/d97MZ+ulZfX1+zGV9TpRIf/haUD5E/jLGNTHmjjCyvjjpF
L8/AZ6EO43rTLvN++p7q/1V+2pxz/1iJPLUedZYbiAyiLHJaK/abhxjTvuRH
KvPt3kx/t4ltYJxXUrYS9Q9gDF9S/3VlD/r7xnulv5Dyu11Pud73KX9M+wHt
X6d8hzK26wk5vupw3infrbOpPwPnO4nrW3wgPqADaL+p+r3+Hsov4Pwt8keR
fqqZ9XkT8pdS/hTHzunFf6Otu12N/+MB+hiR9OH0Pfpw/Fn6ckauxh+mHVl7
8iGc8yDyu9PffUORWW5XdyF//lB81sf34qPQV1FS/3hlS9qPW40Mc4h9N2Mr
VWZVdlUuUj7SRvc2ZRN0Mt+cQnohxjNfO9iTt/UP0N8TlI9Vja1/TMr35vwP
DsXG/SL3ptYMlmLVwfjTRivzLv7SzPd9HvmJ+3PDWMNZz7VHTV6NfLCyMthQ
fLIncL7/NSOfzsSx0fQ90f5u0ts5njL+jQNIT1nN+t8t8+1PwbEdGOsKtLmT
+n8rQ7v2Uv60siL5YZ9fM7YmZWZl550pv2Mo9u3rO/lm/XbP1N9A+V7khwdj
c3uXtl+Tf8N8/xmuxPkeHso3tB/5v5uxFc5fjb3GNcG1YRTneNJDnG/pWmwm
g6Tf5ZwzVSNrjiMegPz8nPsW50ryO/KMH6P+RdS/lHPtRf75vv92SdLXc2xr
2tdbwWdMrr+3FozDH+qPnGNqxnaXNspu5KW7KNuS/F3OLa6p1L+AY8uS/sb5
kLLLfY+Gswa5Fo3I+E/WdlIPlmuFauZMdV513+214WmfcL2k7KT++tHm/91q
fPAzM55ZtQeoO6lTdfr+NtKzVeMfu4A+Z61mzj+e/M7Uf7IWm8sy1B+JPqbU
98H5vmzGv/ws5auSX7yXNca1RhniaG2trei6Oypfqm+UeXaLtGIPvUEMFflH
KJuE/Mtl5lvn3fXJH0UfJw1kzXXtPa6TuURbekn5L9yPm+hy/WpkhK1pf9NQ
7P3TdiPzKftd6xqhfbwT3f2Svn3i30ZsRXXKp6Z8Q9+Zgfj45nP+od68g/nm
9iG/cRnb55POL/R1IeVrUf4sx872XGWwYCfrI+lE/hSrsm418ukWlF9L+ZuU
X+p834ttTczan/qD9VFTdxzGcI7rDeUP16K/n609sh1b0r2ca0LGPx39zUB/
DY5V9BWRn578kPavXvy3L9ViA9IWpDx+gPqr72Qj8uaDVN2xGnnuU8pfGIwM
pix2gfZ8fQscn2A4+oj6x8u0v4Pyw9SXtf8r03fiDxmZ8h/EWNB2beqMMphj
+kcW4dhRlG2rzC2+y/lmIDK/sv+8ndhm76fd0HDwJkcMxQahLWLeZu7N4pXc
g/c5tjV9L6e8o65L/ROH8j39j76+cI5W3q9HX1InUzdTp7qO9CeU70r+Qupf
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
PN3Im2sPxcYxM21fpHzZoWDK1c8WK3MubSgz9YI/VXa0jfLpc2JCh/KNG78j
JlZsrPdsGcon1Ybk/aTN7Iz/105s8dsO5fufgPJfq/EPGSt0HO3/LuKj0Vdj
HJzxcNoE/ovdKIMlU4dUl3Q+sS/ngEVoO7I+6mrsf8YrOz9vPRQZWln6kOHg
3sS/ragsUSbtGr2QvlTyp3h/yO/Si/3B+J1HiuAxDx0OzkMbm7Y28SrGemkz
XLf//PS1HNmXD5TPxeKIKRJbNB75n6vBDE9Pf3dQ598iMr2yvfEB2pb+wwv1
Yo9wrf6E/MGkT+N3DX1dxLGNtJX2Yqu+UHst+WO4v3dU4mPT13YI+YtJD/D9
n+G70Q3WXZ+evr2DxWD7jpJflvyP/bTxPI/R9pJebN3XcGzzMvHUYlH2ZTzT
8h0e2Yksp89O351xyMYja1PRtqL857t+szZj73WZ9CSM52rKtiN/y1BkrGvI
H8P5bxyKD2CrMt+A34I+Jv1X+leMHfOZut4e2055vZ74mTfaiQczLqw5nBgJ
faFrDEXfm7eM7VEb5NSU7T8cO6TH5uvPBy+6NhWJ33ikl1hNfcT6ivXfGn89
VZF4wecYz6ND8bkZz2k8lbGv+hz1Pe7G756hxFjpfzTmS3+NvsY5OPeR/H5v
xp/3Kn1Vu5H13qDNQbStd2N7e1N7K/m72/E/PdwK/vNt2jxD2eS12BvfJ/+c
78Zg1vspO4llfJFj+5exUWqrFF9zQBn/nbH/+gj1FT7Vy1j0+en7M15ik2ow
iWITPy4T86l+fz7pZbqRrf2m/LbUGdQd7qf+npQ/q8xXD6ZbbPcZ/EatJwZs
Sca2RCeyuscsO3Y4crvHTi8TL7Yz/Q1qd/Jb6SbWV8y62HVtdMqxfiN+Kwdw
X96qRB/dn/SplLfqfcwo5Uf0YnvUJqBtwPgpdfH9isQH7cWxB4Ziw9Sfv0eZ
a5lDe2Y7MqKyov5Kff/6x/SvXFMED2o8tljltyg/hPLfe4m9fJf8oWVkXGVd
/VH6gn/pJpb3f+QPU3ZX5x2IjKOso33xE/srgj8XT+7cregov8ALZWx/rrmu
veprrhOuFzf25Q9xWOKxrigTD2JsrZipazuxzygnKy9fVkaf106svfiGMvH4
yjqjFsGz/taIbWWsIniK+bvxfe1Sjz42VS++EdeYecrYW/z2/ouh78XHpK9p
laHIS2JuJy+iwy1URp6yTJv4NL3Yw4wzOJo6l5bBG9zeXx/99p8qY/uWO0G8
8Un1xPEZz/em9qwydmTtydeR/rQMzkWf94XKa2XiBowfuKCMPD5LM/7mvbqx
fxu/fncRvLwyzszN+HOVfZTxxOmI11H20x40aTtzuHO5+oN2SO2R15aJGTi/
GX+msQRios5phj9BrFRtOJg4/Y0PlYm3MhZWjMeVvciP4sjFk19VRh/VD6c/
7sMy9h4xK7uRv6mM/UDehIN9f5RPyuBmxM9cVEa+NK7b+O7bytgr9MPoj7m4
TMyBtnfXxHWU56j7x2A4EB5rBnMp9vJL8rvX47++mLajD0TfUf8xrQyubUKf
nvqZPjX1G+dA50LxFztou+NaeuIxtQFR93D1G+r/Xo09UIyr2E7rbNeNvdAy
Y2CO6ATjpa1am7X6yQ70/dFQYvYuricmSWzSyAPRz3zGo/TxZ9oK/uwEazfG
QPQr7X0/VRNPu6u6RDM4c/Hmh3ajj1lXnUNbi/EX2tLfV6ZyXupEdlGG2bQb
TLrYdDHIT7SCiVH2UQbSnqf82h6IP/IRyh7uRHZVht2a8v9R3iE9BuWPd2JD
0pbU5NhW6obczzH02apzdxMDaCzgx0OJr/uunbrDrlGdYF7FvjY4tiX1f9bf
NBDMitgVbU7anjznNt1gcMXiWmdb8ot0I8so02zQDSZKbNQv1dhztO+YvpQ2
+3RiP1MeUAYW+6Q9dHggNm1t29+2Mxbjt+/pRJ7Wt6+/aYlu+Dy0zdhG++n2
3bw7Ynie6UT/9tlqo/6qE3lH26UcKBOU4ajQh6J+KnfFxZ2sFfqQ9CUZY2Cs
wXX6yFvBbIndUuZV9tWPoe1RDMtXlL+sTEt+LH5t5yPy3wzFZ6fv7st2YiUn
cv7tJcbbWG/rbNCOD19fvphX42vE/bvWGjNyu/Me+d8rwdDJ53BNJ3ljIuWT
0Uevr16fvzbHM3vxpSnzKfupc6h7aLP0fotJ+7oZ/4dYNeMvfTf8RtZS92sn
1vGFSvAlxsAYC6MPRXvYg43IImKGxb+IWRWbN9JA7Bl3abepJkbn5r69wzJt
jPoWnDNH7OMz9VUYI6xuqY65SzcxtcbWaiMz3lq8/on6TpWJ24lpMrbpqsH4
q8QA6+OTb+KJMpgSsSVeQ1lGRv+FvjZvRXb/xG/I958+xi8Tc2bsmTFjz1Ln
lE5iH5QBd20nLk5Zw2e8kf7RTrAjSzPmHcnv3orPUXvlDu1gwLTpaZPRvjqx
96d//dpajYEXl6tNSPusMbkr0f6eIrG6YrCUnZWh1+rG3vC99iZ1Ksruawer
K0ZWrOzj7cTeyKFjPPYTruXVxKTJ9/Aw+aOrwTQ/TP3724kdEcN6D/kH24k9
FWMiP8DynaxVh3Js9G44qUZsJb5Mrip1dHV1dW7xUdo/vyN/nPbCTvhptE1/
37eP3NALF8lN5G8kPQJ9vMS9Hpf7OXEZzLvYd+OhjA1+qJ3YWDHs93fDYTRR
kXNoXxVjPUGRmGXtqz4vfR9Xkp+U/PPtcD1pE5VP6lWfL/mdGN+qncQcfUr9
Lzi2grJ1J1w/1lme/HqdxOp9TX4l8u+248s7jPbrO7+309aYZmOb32wntkcZ
89S+/iG3ifwda1L/nXb6khNMbjBjoF9tRZ6y/Vj8zqoGIyKe7YV2YoXVsVbo
ZH411kyflfxDi3bja1Jn1L/zZDux03IgGV8/63DijBzTit1wRD1Qj81A24Gc
Ocb8/6fftCO/yR2jzUD8kphSsaU+Q5+lMSff14PvNhblwnawuucPxB6ovfHC
gfgQf+nEXmiZPr6fOuFgEGOtfCwX0PntcOGI0ZP/Q8y2PCvqKPr/ZuqEu0l5
QdudMXmu555De6YYYOcbMcjaL5WXzmqmzVe9cAjs0UzMiLEjylfiysSXPVyG
U+LTejD3Yu9n6wSL9Lj4BdrPTflsjdgg6p1wVP1Qj8wid5WYDe2BftPilcQY
aWvQ5rAc+QfaiUVcuxK8nRxPX9eDJ9G+Zwy1vCbKdMZWy6FhzKFrmmubMdTf
NuOvN7b6nl58O3JM3dvL+q/t8r5q1mP9nT9Wg5ket5sY3h+bwWOoHxnzbUyE
Mr+yv5wCzzciz8o1IB/O1EVkHP2Z6nNy+xgzq79kce0F1cQIyTdxRDt5bVf6
cx5rJ9bFmBf50E5qZ60WI3J/L/qq3HOra/+gv/W74UqSj2KPTtZ06xvzKR5W
DgK5CIypebIZzgE5YJYpwkUgZk3smjEd4r+UFw8rgtndri+/HFoEA6x8ov6+
0GB0dHX17fidWgkHX9GJvqvvXAztq335Tg4P5wTnBjG7+zTTp/KQMr6yvphc
4/GMJ5L75wDKz+hmjnauFlP3bzv68o31zCnOLaeU4RbZn/zJff3j1npsyOo7
2iS0Tchh8Fc7fDrKetpsxYs5xzrXygn3D+XjcM5zqsGs/90OBvajevwl+sP1
j5sWAyAWQMykMQX6S8RS6t8RWy1GTz6ouzrB+hsTdQp9f+UaVwQDPzLlD3WC
tTaGyusVg71nI/qz9lHly31dz6uRR9W37qzHJ+/7OS3Xt1ItHBEV6t/Ir1IN
Z4F8PMfVw7viPVLe1f4vVlmOJfkD1OnU7eQs0//yXC+xHNpAtIVo89X26zO5
q4wMrSwtR498PPLZHVgJhk8snzZabbX6rO7U9qe8WQ2nlHxf8s/5rY1ZTbyd
+GVtwdsXkf/k4zKe4RPq7TmcGDtj7eSc0Z9vPNie1P+WMf7ssyyDzxKntctw
+Bm/GwymyxjKBvV/Gswa/Uoj8WllNTFNPg9jrI21to18jsb8GPtzJL+7W+ET
VB8WwyOW5wcxPYPp83exPe305Zzg3GAMoLGAXzPePeqJp5u0COZJ7JPBpHId
yXkj3l/OFLlTlKFeaQaPJt/IU63Ef+rj0dcjrmi34fBaym9pjPblzegc6h5y
KKzTi699RPobgV+1HU4GuRmMsXq/mfhFsRGjDoXzQxleWV5ew93p/4B2+MBa
/O8xnPg/dRf1X+M15tIPMBTOCOMbmtQbfSjHLJMjTKzs6P0+5tdXPxQOMfnF
RmH8ZwwlxlN8tph6sfXG6Mjvps6h7nG4NqVOcNHio6caSnzk8e3grcVd7zUc
ngz5MoypkZ/POBHjRYzJlW9Nzg+5P7wnYhHkaJSr0Rgh8UjGX9q3mPRF6tGX
jK3zHVF/U2dSdzJm8TTyB5O/tpIYjFYnNlFto3vrcygjoyirGAN8VDdzoHOh
cQXaJtfohFvFGNsjKF+4E1+WmG+x3/N3gu3TRnKN8hn5ZSvB1IutF1MttlpO
IPGkcujIpSPGwfgCMVxiubSnyvUmZ+pSzeCJ1u3LT6blmFMeG7eZuPvn+vrm
h33bx5+V8MPorzD2RBut/hHlNWWt3SqR97TZads7oRVb3n8ccK2sga6F6/A7
oBIMqVhS7XFLVoLBv7ob+43cD/KzPmJfjdjejUEVH6hNVfzo/+qxtS7Zjq1e
jg/jIeQvkY/RmBtjbxy/WHdt3luW4aiRq0YM3MGMa+l2bO9jD8aeuWInXKzG
5B/MeHauhwdJPiTlj22pv3UlGOgDyS/dCf5ZTiHX+2U7id0+zjmtG5lY2diY
/MP68rK2g50rkYfVBzathFP1mXYw3WK7Nyf/QS+cFfJAyAfxXhmfnr49ObC0
j3zRDfZnTK5hojIxSMYiycl4Sis2UNf+u5uxjd7Z7mOpa+G7kzPtIspuLcKl
ZkzFaY34APQF3NUN1lHO2btJXyG+ifKd1Hm6wdj/Wg++Quz9Le1g5eXwWLyT
mIU/xUUUeZ+v7+ZccmDe0I1NSduSMVydTuyJ0zUS33JoJza7S/r2H33PxnAb
y70V+du6iSmRU+DaIt/DNe3cOzlR9Tfr49HX87eYjU78T7cUiSHQ3nZ7N7qh
JMN39PWRcYtwCoovnKAbLKiYUOMVNAyLhRTj+U4vGHGx4trojQUQ8y72XRn8
rTI2GW0zxqrfWw9e+RjKStJbUv+4Mr7lLdrhv5PvytgRfRorWt5OrJAcV/Ln
7KXMXkkMt/h55wvvrRyn+r/HV4cg/Svj3bSTGBdjJbUZajvcj9/llcTYKX9P
1wu+W46KWic2OG1xYkAHOrFn3l0PRm+8vjx/aREO2386kTGVNeWwGfTd5HdG
JZwPVdLb9MKVc9JQ8BPq8/LiGCNirIj4Csu0V4idOr2XZz/I9Z7VC+Z4mUb8
m9qPxEzP2IgNRiz1SZ34lkfXJtMLhlVcq/hWsa1+H29TPj75y8jv3g5eW0ys
8SWeT9/d9f33Tf+F2FHvifdGefqPIhhGsYwn94JV/of8KfrTeokF+I38sb3w
8+ovEH+wkDJLJ3h4bSTGC4iZN3ZH+77zn/yH2q7k/NL+vAHlkzWCgVC+fasd
36RzpnOnNjVta7/XEl9njP+NjWDejf3XX9j2XjCGCbuJd3tvMDK68Zejk/9w
MBwsD3aCWRS7+NZg5E9lppsa8ZEpS/3bi29WDLRY6DG1iQ8mprfRl19t+yfP
8Ogy8SnbDQbjIdZDPL6xJ1v2x7c/v9dq8bk83Y497bpKMOM+zxNof28lMTEX
9mLz0fbjNRmveHQn2Jke+fN6sTc9U0nMoNwKcgbOT/0RBxP/KJ+gsZDGyJ3f
i//Wsks5/0Td4Ln99l1T52vG3/tXH//tty9mUOygx07qhWNbrm0564zvFNN8
TCt4dbHOYrCPaGX9FT8pH9My9DUPbeZsBi+k79AYsg8Yy4SdlMlxItfJVq5p
rWBYxR8bo+X6NdVg7Dvae0xro9R2KX+ba7Mc2HJhyxmnPdSYVPVfOTTk1ZBf
Q24N48XkRhEj9FU98VnGooiRkWNdfXi2wegMJ9D/HK5Pg7mGfzuJrzMe+aoi
uB4xi2IXbaP+bDycunndOIvhrAmuDfYhv4/4dW1f4usWEWPeC9epMR3Gdhhj
fVYjx4y9Vv8w1kNOjhd8v9vxbWvjFh8qft+1SZlJfgHxzPpixNCJB5XDSC6j
AeeQ4eAf/HacA50LxYCKBZVj0PhD+dflOpeTXG7ya8rEExhXIP+U+Hf5btek
/RztcGQc14j+IneGMWjikzYfzPrgemFajpm3yV9dJlZQnib5huq9cEvKSfE0
6WYvsaBySDxDuttL33LqyK1zVCu8AMYYG2usPXlBdefB2GON/zMtplhssZxQ
j7XCKSO3zEAZ264+Y33Hc2pD1r4xWPwX3yBflrZ5bWbazuRrkGvhoSL2zSV6
0Y/kSPqrF/vrvJXEmBlr5nxhX8P69tvhGDNO4dki/unth6NHqU/90Eu8mFxe
4kPEcrp++245hyj/yB9tLKicZHKTuca61u5M/uO+/920/iWx7v/W+3H5g+G2
0r/vuZyznLuMZ1u7mhgtY7XkI5PLSo6Kn3rBgIkFO0n9j/Sj3XDRy2klt9XS
w/HD6Y97X3vOcPQ69bsPu5GxlbW/Gwie/YNuyrSJaBuR82WhRvQ756v3uunr
HvrvlOGgn7AIp8q73eDj7UtOAddfY/C0dSkDf9bLnObcZhzwIo3Mn3JbPO0z
0Dbfy7V8QPvb2/GXnzYYG7a2bDnd5Xb32B+96FBfNINxU7cSkyk20zn7gP56
O1ALRl2suvPxPwOJWe9xvr2p82It+rW2cGNuTm5FHjUWR86364vESMofJkfk
5fp+yH/n+01+sqHo/PJvq/PLMyjfoLYA+ahvr4YzXO7wD9rh/lfn056nDKws
bEzLN93orOqk/8Xf8/++8nsRnVD/jPzft1XDcS7XufspGLuvjjpZGT51dZEV
uAeLdnKNXuv7/fs9YS/c0MaIGSvmPffeywl0Yif2+Otp/zLHRnQ96MZWsXgt
8WST9sLNrA6v/V98t7yA8gPKNS6GWSyzNgDj0dT5X2gF86ctwO/Zb0sbxLhl
bATaObR3aDuQs17uemNa5XeTH0Rb7aKV4DXd/0LuD3Uw8Z7f9MJFI4e81+v8
v0QlHG1ytWk/tq2cMtqD5U/ZsBoOEvGgxpPKxSNn/iKd4G18ttpklCeMF9f3
bgymsZjyT4iVdQ4RH/9AGby2Ph59PQ+WwcZqw9aWrU9J35Lv3Jfd8GGIrXVN
Ml5GPn5tGb6jX3fDfyA3nRwyG3fyjfmtyfGwVSc2jg+bwWxp+xBTL7a+R/tf
Sd/XCzZFzI14a/nm1F28J/oP7y2zn4WYXbG7+ru17Yo5Fusgh5jfgjFbrnfK
+Fv0ZT5lv1f65X4zrpmXco7R1K+ZU+YdDj5R27TxE1M0wyGjf8oYLNcfn4HP
QkyDtvpmHytszPDcpK/uY52NwXZ912ev737WZsYrXlcuBznnzqHuRb1wfyqD
+f4qYylrKWN5v43BVX+8cSBr6rll+PjFaIjVkFda7LUclp/UI5Mrm6uT+zx6
zcxF7mGhfGxcu7YOY+qUv4wZNXZUDuGxSH/dDpZGHiL51eQkk5tMDo6H6328
uPaTZvi6tXFp65KjtNMOxl6svTGCz9SDARALMH4zeEDj2ZX92/oo6uHkkZvH
GHfzy/bz7tkyubKMMjT5l8Txc74LlCcr6Xse8qc0EpskJ9N79ez3si7X0qqk
vXhNfWlN3/dm+NDdH8B4nWnb4QCXC1xMp+Xyrco9bryM1+O+FmKZjflXftNH
o6/m23qw5+o46jrGWBkPdKoyyGAwjeIj5K/+XxH7lHzu4h3F7oihEEshX/3P
pPerhN9enUbdRs4a9UljkLweMUximYwBEs+uLdHYIPeXcW8ROfomqIc/0tj6
x6uxT8pnqO90j1r4AtXx1PXUAcRPyq/jXCunuvyV8hOpy29RDT+S+2PIZyJH
xTj17OejrUF7hHaJV8rElosh1R9t/Ljynxz9K/btv8qnzp/aa7doRTdTR5uu
Hn3u135e3e2EXnR/MQ1iG4xvrlWig1vfuFixDXLwyecnn7vP1hgx+fjlD5Yf
Sn1CLl75GJwrjaExlkZ+W2P/1NnFqxo3qm1BDlf1BXVYdVl1WNczOeDFjooh
FVdqPGxRic5tfK34PG1ZcnbL3W3MlXyDcgMai2VMmPg9ubyNFVOHVZeVQ077
iPqtthJjpoydcv8B311tnPK5i1cVu6YOrS4tP5v3Wx+J/iT5cPWd6oOQ39iY
f/0DYm6ma4bfQOyumJpX6+G7vbOWmA7nC2MYjU8QMyd2zph+Y/vFrItdl/9l
r1pkEvcfkj9T25h7kmivEy/i96mMIJ5AvgJtd8NF7HXibfQ3iNkSu2UMqOcX
AycWTn7bvWuxyYlXML7+vUo4veX21ockdk5Mm74l+RH9luRs1n4rn7X8G6+o
r5M+qBdspBhKsZT6qLS1ivHUd+X+D873yiDy8xmf6/4V71ZinzR+3G/5nUri
YeWT9NsUg6s92Xgi5x/x8cb/qPOo+4gxE2smplNsp5xk4kHlXBq/CCZXbK78
EtqOjGlxvdAmpW3q5SL84Fu1I8trs5I/1v0A9LX7qbrfyeVl+FbUBY31kG9L
350xvsb66pPSdyomUF+Va5/2Lm0Oh7bir2vUg8ESiyWm2/dDzJ3YO/FX+rp2
aSa2T3uFvjIxeGLx3G/JWGJtHHJ2Gf9rLOp59LdbJxzpkxWR0ZXV3RNM/4sy
vLK8+wOIbTYmwPgC958xtt+YZ2OflbmVvcX0aQsbrRF7LtX/299o/Xpsj8bw
nF0P347xTmK63q6HH8X4K+MT36yHP0p74FAl65ecoF8UwRSILTCmxNgSY6b/
7Ga/ks+LcLBPVM8eGO6F4bcvttw9Q+Til8NemUGMlFgpOdldo47uzxdytHj+
UduJ9ZUTyPFN08jeJHLM31HPnh76N+Qg8fuUY1SuUWMklD/E0IqlNaZU+Wjb
/vnd08P1Sz5Cn5cxua5/xngZ66XMLf5czLXYazHPyvtieMXyGjOmvCjfvfwA
+jMdjzY512cxptqG5Sf13snRI7+nfHqu3cbAyucpn4XYqpcq4QMQIyhW8KzB
8JuKH5OrwhhY8WHuIaE9XfXX/ajkz9WXIcZPrJ/2TNfDsZrZ/0v/quvnxO3E
Q4r5FvstRll9VP+E2G91TPUz/UPOzxM2s9+Q+yNom3MNUb6Rk3bKIhgD46nF
MItlNkZGfUxMltgsdXTxjPLx6jvQn+1+TeozYs3E+Iv1n7iX2B05XuV6dQ+5
o4pw2rl/m/sruNfGm0XwmsqY7oHg/KLsqQwjp4L3T9lGvIecX4dQ/74yMbhy
dsmHZmyu8XRyuIhPMdZ9mr4Pzhi/Z/t4EGVC5/fRO8G7yLXq9zJNJ/gNZRrt
UeN0ggdRhnU+mq4T/4sxJ/pk9M1M1/d5Kk+8VEbmM4bKmEFlQW08lzQjL2j7
cT8xsUQuk+Jp3dNAP6c6grqCeD19hO7H9EwZf4g8kvJJXtuN/0IZVfvgQp3g
O9w7QhvIqN3gy+S9kf9mz17wIWLaXH+eK+Mvn76Z9U/sqf58ebn0Yd7QiX98
mmYwmGIxx+gGq+UeBuKTVm+El0V+lp3bwePd2Qzfvlyd4ntnaGY/O2MfxHc9
6LfWDF+2/shRm8FMiZ2SU0ofqvyycu/rD3RfFzmsj+kGzyRvnjHy7U7mpNGb
WXOcq+SbMzbed1p/p/YFsdLG0GovMZ5LrIJ7HhifpH9MLIwc6PKB6R97uAhn
ufzG2sC0hSnvyb+0ay9Yafdk2q2XeCpjIeS8Eu8u56A863JCGX9lvJtYYTnF
jE9zjy+5Qpaohd9Y/VpsnTFUxlJpf366iA1Pe4bfi3WNiTXeTYy7WHf3C5Rr
W47o3+qJhzU+Q77+I2vxCejvEG8mL7icgvUyNkJthcqbctcb37BxERnfeA3n
AGOulKecG+Tgna7I3mbyI4jPMKZODIhYEOccY36U75yLjH92TxHlrXH6/lpj
npQf9f2czDVMM5Q9zdyv7fB6/Nj6s+VaMz5orSIx48YL+X7Jmex8KveZ+Mt5
ij6/Sy8YFrEsU9bC5y2eV1+MOoC6gO+k76YxUceqP3SyV9iYtfBtuR+F3ERy
xJzVif9QDlwxkWIjny6j32jj0dZjDKhcfPJ1GhsqR7kxxj6zF8tcj34x/WPG
/shpKPewOr66vpwKdzUjT8m14Br/bDP7Xbr2+zzFAKu/z9nJfmTaF1zDjU83
BvavZjAxYmPkCFSuUL7Ql+IedlcXsWFqy5RvS74xfZrykWnfk8PQmK2j9MV0
w68mB5v+UP0FcqGIOXutzFxoLLE+POUH7WVy1YhHeqMMH79zmRzW4n0fLeOv
kHtG/lb5U3arBQPjfina3Fdpha9KW7zxw3LoKVMb+ysnjTqGPoeJGM9wI3sS
iIkUGym/sbqUc4j4UP25jt2YIWOH5LBwD0X5PeW2cL8297/x+Rj/rf9DDPf2
5F8t46+TE0jMwM6d+FO2bcWHpn6hTPZCM/sBKqu5H6m+dNcw4+nlCJG7xvVd
rgvt3+4ZpE9U36j+QXUwMcWndmKP07ZmTKuxrcq4E7WzX6Gyr3xJYif0+bof
g/4usULyFdxaxh4k9kUb6lfd2NvE2mgzr5Wxp7vXgj6xt8vEiLlXgBg8sXhy
UsgR5/4+clX8x7dXTYy+8XbOyXJMi8F1rta//0orNndt71N0s5/KkkW+F/Fx
clvKQX52N+/cPa3YxH0X9b/L8ybGcvZO8GlyNRqTPnIn/ugrW7Gxa2vXvy9P
j3w9r3Uiw8jtoL6mbKM/Q+5vMV83l/EvyiX+H/9PNzFIckOIaRXbqk42fjv6
uLqa8cNyC4gvH7tvTxabI9/S99Qvu/HdG2MnXlHOA7kYxMiJlVOmnbGdPd6U
deUf2aw/hziXGAM3UzsYSrGU+vD05S1QZP7R/i+PtjZMbZn6k+RcEx9zSxmO
O7nBtVFqq9SG4x5G6lvadsTkiM0x/rtB+btl/FX6MPRlyE8rl4YYVrGscrLK
zeoeN8YXyxehbOKeu+6963ou1liOcfHX+hMeGAimU2yne7K6N6vH3C/jaf2Z
A8GAigV1jwnjpvVxywczdTdc8tZxPzplAGUB3xnfHf1HckXIWSR30fPd7F0s
BlTsqPvX3FZLTPkofXlJO572vJu6wWfcMJCYXPEgcnTLlyYn+kPd8NkrK7lH
mnulOd/KZeM5Xugm5l7ft32I79C/Z+yknHf68+TLk2tBm6H8SHJiyo35TH+9
v78Md4EYfrH88kvLheCezPInKR9Y1z307miH31huB22w8h2JIb6gCGfoDn3/
mWuXnPb654wXEbsmJ5j7lSoDKQupg4oXlf/btUcOCfmZ1uplLwf3eDKeTxuk
tkj305Rv0T2d3NtJTKZ4Ozlv5L5xD0T3SnA/MbmQRuvjP9zvUq4ifbz6eo1R
M1bNNcK1wj3hrigSoyge6mPyI9bCGbtL398hdln/r7Eq7g9gbIY2A/l8jHfU
dq0PRV/Kx/252D2o3YtaDlnj4e3T/ajlMxi5Fgyd/h7jP8U2K0MoS9zaCV/R
GBxT6X+pk1jB8WvhX5KPybQcW3JtyX/g2i/G87ZO1lO5JXwnW734O/22xCCI
RZAPwb6NCTU21D0Z3SvRMan/yuntPprupynXt3soWi7nt/vfut+jsq97ysnf
5fwiFvrmgeCDbuzm3dZmLfZJjPw1jP+qgeDpxNeZlhNCbgg5/eXml6NffJP7
R9iXMTfG3oiHum0gNnhjReSI0ZftMfFRfm+bFNlz4e3+9yyXj3tIupek+3fJ
XXKpdlGubbgbX/ItA8EfiUcy7ZpqvIprvGu9GKz/4lHKxM44Jzg3yAFuvN0j
tfCLnE7+klr2hHU/K/e3di/h74vgmcWTiD1RxzbeXX6MC4vIB9rexCM8VAuH
2Wa9jNGxysEiP5bxn3LUueeYe4+537qylXtIFX15wn1o5BBwvzz5T+XuENMi
tkX5RD+H/o59epHvhlvZX0V+DPe3UxZQxxa/LL/XMUVsdNrq3A9A7h9twPpz
3I9u/1r2cBTP7X4z7s2ozi7+SL5x1/7viuC3z1CeqWWPdPGkyjTbtINZU9Y5
qx0uT++B+83Id+y9ld9gwb789E09fHxy/f0fqWtEUw==
         "]], 
        Polygon3DBox[CompressedData["
1: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
gq3itsW6G9ti3qW56X+yEtok2MPzP7rFp6s=
         "]]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ztIlXEYx/HHbsfuRbQEHotuDuoQuBW0RRgNLVEu4mbkOd7CY2aJQR5E
ChrSo4OT0dAglrU4mUXhEFhpmaZhS2s4aDb4eWk4PN/f77m8z/v/n/dYXfZK
pigiJv3WtkckPL8t4ibI7I44QHfRWVyKe3EjrsQP8Tmxmb4kXt0XUeDV4Of4
pHm9cjfoEf4AbscvcAHn8Ws8iPtxg55J+iluwe/xOL6Fp/EUPrI34tGWiAv0
J3phqz3oTCriM/3YM7P4C25LdsWzOIfnxPJddsBf8TU8i7/hGjus7IhoUj9P
3+Y34++4A7fgBXwHn1d7T+0i/c6MIc/8gStwp/wSrsR38TL+Vewd7VhN/6QX
7VygL5sxY9ZMsivu403Rb+hW/Aq/xHNydfQzeoTe2BNxkS437wn9UX6ZV8Xr
oadxCc7hvv3q5SfoM2K/GfX8Vfebx9fxH/6o/Am1aVzN+yB/VsybNYaL+RXJ
HYttvGFemq7FPfifM9Aev+30gC5zXq4t7uPT2LVFd1LnXDbUaotBs7p4p+St
EiXOqZNWEsd5O5P75rXzVpwZjHHmW5zj/TXnqLpU8h+hS4GRkRaloolnnSgw
D2tupNcltMcA7xCvgefV4yCuL/r/DWwC3ZFmkA==
       "]]}, {
      Line3DBox[CompressedData["
1:eJwVzbkyw3EUxfGrIGLvaVSI3gxh0KUT/yR2ER4gGjUzWeyUGo3H8B5i3wqe
gsZHceZ87zn3/n7DO7tJtS0iylTtjqj1RtSp0BOxwPdSEQlu4CYV8Wd/ROdA
xJ39QVm7uYNG+iL25ZO4pZvV/fBR+ZTsHpfcH8pz6YhlnMcP8iV8hLPuj/mK
eZE/6oZ4Rp76/5fGvJfl13Qgn9P/2svIp2Ul2ZN51RsnulNax7e6tO5Zt2Y+
k5/TBp6QJ/hFd2Wv5q06feE8b9CrbtNuE1fst3TjeIa/6ebd3+Bv2rJXML/L
y7jL/oX5krbNRf6hq+A/zKowZg==
       "]], Line3DBox[CompressedData["
1:eJwVzrkyA2AUxfEbNJEErQKjt3U6S6JDIfZ9ZGKsk1gGLY2tQWVGh7fxDvbt
JWw/xX/Ouefc+83XXCjnS4mIKKKcihiqifiiLbSrNqIb+3URhXREkv/WNWQi
6pMRozSLOxT11fp+u/fmByzKDr3z42aZH5ONY4nPy6/tv6OV76G9WNEdmRe8
8+tu1TzhZhI5dMhT9tbkafooe8KAfF127DZoGc/yFwzqSuZhXYK20QNZ1n0O
G7IzexV0C526KfM0Ns0ZOzf4QKNsBrPowzlu5Z9o4l/xhm13Ke9c8JX8Lub4
eez8/1034h9VfDs9waU3TukV3ZP/AbSJMPc=
       "]], Line3DBox[CompressedData["
1:eJwV0LcyhGEUh/GjEDdwA4y9A6lQKK1UmqFkg1gIhULOceTdld2DWqN3AXql
i2DGb4tn/uGc8858X6awNLpYExHzWE5EjKUjapMRa8ilIs7l1saIVflTnmiO
KPIb+OKPWyIm6YW9dd0lvcIM326/zW2eZlGn6zTrt59FBz+Oj/qILbOCnSI2
+RLt83Y9v4Nrezk3N3RbTpnd8nndgpyxX5ILcrmq5rv6Cn+HBr6LDpj/4hsD
bhr1+3iX/zCl25PLtIkeotdb0/J99bvoge6BL9p/w0/1P+gedS94wpH8TF+r
e+5X5G5+0O4QBr3TqU/oe/TDuhGcyGl9xTzJn2GWn8Mp/w/2WjNX
       "]], 
      Line3DBox[{1166, 259, 2114, 436, 260, 2586, 1115, 420, 2116, 438, 261, 
       440, 2118, 262, 442, 2119, 263, 443, 2120, 426, 2122, 445, 264, 2123, 
       447, 265, 2124, 449, 266, 2126, 451, 2127, 267, 1549, 2817, 268, 453, 
       2130, 269, 455, 2133, 270, 457}], Line3DBox[CompressedData["
1:eJwVz0kyg1EUxfFrRGnSWIGIdgFYgYGJgZGxEs2E0oclkETfizbIkF1Q1qGn
yhL8Mrh1zvmf+973vczY7MhMXURMmvmmiLPmiL5ERJmOJyPyjRFzeBnLyet4
e0vEBh1ORZzjr3Kb7oteyAVdQh5siLiU3/AFd1zxE3hRn8VKdBEftdevu5SX
5KSdpLs35Q57W3QSe+cztX/SffPXzmzrUtgOvZE/8LS+HfvhK9iurpPfo0O6
J92y7+zLXfhB7a34ClbhB5z5s/NopsytnNfd0Wn5weTsdzt7aP8e/+Sz+C+t
1t6pP9L1yMf0ha6649lOSneC9WKndA0vYEVdVS7RqI9opWnTYf4BqXI4UQ==

       "]], 
      Line3DBox[{2952, 878, 3241, 877, 4159, 2951, 1187, 3641, 1186, 4185, 
       2950, 875, 3239, 4231, 1712, 2949, 1564, 3238, 4158, 873, 2948, 872, 
       4083, 3237, 871, 2947, 1184, 4082, 3672, 1183, 2946, 4115, 869, 3235, 
       1707, 2945, 4217, 1560, 3371, 1489, 4212, 2944, 868, 3234, 867, 2943, 
       866, 3233, 4157, 865, 2942, 1180, 3640, 1179, 2941, 1025, 4081, 3370, 
       1775, 2940, 1554}], Line3DBox[CompressedData["
1:eJwVzzkvhGEUxfE7lcJajKi11orPQCVRKRRCYSmQWBP0ti9iGTNh7BIJnQQJ
iVBh7OMLkCB+b/HPeZ5zzr3v89b2jnQOpyJiAIulEatlEWsYLI9IV0Xc89qc
L3CNS6zLzysjquV19EFnhGYq7KAbtCWZcW7UqaePOhlzWdkWcsi6F/hD8gI+
0IUn3igdwyTGkdP9svMbz/IJ3g367V+ieftaZT9ocJ8viZiie/xpup98145f
+R86zL3Ys8k7lB2hB938V/6xc162jQPzNfw3frvZK8wm3+Cd0R2d0G9yfteZ
oSfuc3RB5zZ5h06K15z8p86u+53zoPyU34cifyV5J7+YvFknTT/5y/QfUjhG
yw==
       "]], Line3DBox[CompressedData["
1:eJwV0DkvhHEUxeGrs8SSCL3CFvtSWb4AncIHUE2CEQoJOg1in7F8BzQmQSIh
JMoRVBI0OpV9SSh4FL+ce865/5u8b8XASF8yJyIS2CyIKCuOKEd3UcQKXcZi
ScSGbku2jfbCiDNaL7/Rr+veZbXmD9qGC3Odfo7+8mt2XmkN/0Zb0aO/one4
RNrOibun+LDXRSfpBFK6DH1Hi91j3RFW5deyhFuHfLPuB7Oyb7qin9I9m6tl
L7QJB3ZL+fl832hnj99HJ8bk/d6M0iVdiqbRi2n5/f8/kQ/SITS6l/FuFwvy
J75K/pAX0WD+wgz/Sef1j7SSn3QrS+v5c9wiizk747kRHe4l9cPYMf8B2jFC
Tw==
       "]], Line3DBox[CompressedData["
1:eJwVzrsyg2EUheGdKoUIlUHnAmjRkAtAoWAiDiOlQ3IR9BqJIDpaM1oZwjgG
40YkjqH2pHjne/da+9/zD+WLs4VERCyg0hWRTXNMYKonooqt3ojzVMQcn8di
Z0fWtJ/jp7rR7ogRWUtWM5fMZVzyNe+7/ILv8Qre3Lkyr/MPXZ0vuZVzY9k7
iWk7n7prXb/8zDtm/0jeZ16xs8tLuNVt6HaSETd8nx/gntf0A/a/3Lozr/ou
jwy25TP6b92D7pg38ar7kQ3zE7Qw7t4m2vJHu3VZxveHsidzwfura/BBebXz
r3gxF71/umf+DwF+OjM=
       "]], Line3DBox[CompressedData["
1:eJwVzzkyRFEUBuBjbPRoqCIgsAUZS0CAJSiqVJunlFwqsgErIBOpMmvd6G5t
ZgNSQt8Lvjrn/ue+++4dnl2dWWmKiHkO0hHZTESJtWzEOqOFiHG1xp28kshH
FOXnuYhmyrIzdUd+ou9Xp8xbZBe0ci+/VK/I6au06dt51B/65ocF61/3mFOv
WXRO3rzGhjtsMsGIvKqeygd8l7L3lg72zOryG/2uWUH/TKd1iS6m7WnIuila
76ciXvQ9vDJmvuX8bSapc+ysJfmD/WkqZHizv5y8kSN7lpP/67PJ25L38m7P
YHJnfY1e60/+vPVDHTLrU795Mm/wpf8HTxg8Mg==
       "]], Line3DBox[CompressedData["
1:eJwN0Dsvg3EUx/HTUVwXlyptvAaLtRWjS8uCWCQkImFzqUsZvAlDi8WbQLwG
i8FGXEJoSIWmgs/wze9yzvk/yTMwv1pYSUTELA6bIxbaIjpbIu6w1hrx2x5x
hlt5mnbRRTtl/g/38hVudBU51RHxIJfddtMnrPMbeOQrNGunh3/BplzEM7/k
jTmzJJ/lx703gVc5rb+mw/q8roAD3ajbXn0VW3zozs3e5CM5RT9woUuYbeve
5WPaRz8x1BSxI9f4GXunqGLZt+r+yZjZoNt+8xHdpNkUvuRLmjNL83Xs2i3h
m8/oT/gM/4M9fh8N/h+VVDcm
       "]], Line3DBox[CompressedData["
1:eJwVzkkuhFEUhuFTKAbaJVTp+54FUCzAVGJgIhKqsALGlqBvS7MKzSZEGwrR
DITEQCLxGLz5zv3ec+//pydzY9lEREzjoDziuDJisCLiFwNI1kScV0fkuSOu
X/eDPrxVRZTwZ/w+v+D8il5uVPbIZX6Jf3bes/Mon9DNzcjPsoh5ucv12+3S
f6MTh763oz+QI1yH7gvtyOu2uVNvZ7g23QdasagreHOLT3P35geUupORSZnS
X9rbtNPizpC+WRbr58wb+n17Tbp3NKKI29Otc7uyQfeCety5s6Nb427Mt8ja
T+iuzCGv5SqfkxNcnXtT5lp58b+PFf7Efw3zaX0BKYzrZvk/LTU7Gw==
       "]], 
      Line3DBox[CompressedData["
1:eJwVz8kuw3EUxfFriKJoTQt2hL2NmOfZso/QB1CJeAHDVmLHG1CtWd/AM0js
7EjM4059LE6+955z7u+ff1c2l1mpiIgslZIRfamIXVpuiNjHJdzDnXTElXzR
nmyMWMAE71p2yW9vipjnPWE5EfGFj3Qha8NtvTn5gznnLm//NN/Tuc47ftAh
/4fqfWNW/0zWqz9jnqZTe4+9VXfKXqc3iUU8kfXLbsy11OmdBG7hm/6q7Fin
xfxKE+6q5eNYI7vjFeVj9m83B1SwN/NHeVW6I1jAI36aX9JZd9uBlfxNfOHn
5SncsGfkw+7KNETP/Nv/f9Xplg3yfmmA1vh/G941jw==
       "]], 
      Line3DBox[CompressedData["
1:eJwVzssuQ1EUBuBlKHqjiblI6JNoqzUxMUAkHkAjqXvxPELqrhctbV0eyX3g
O4Mva59/rbX3mdmsLW+NRcQqrxOkI97I88KIUs5Zb+A8ZIpnzsb15SeZiFMq
rJi9yJqTL6Ui6rIN2bHaYCDv233ix9yk2uMxuVOvqxbNv+vlnDu0k3m9gvzQ
HUcsUnV/Xz4vnzZTlv3xy7asp1cxk9VrMSt7SN6S36n3ZFiQ36o3dPX27R9Q
Yo9dOvKWf/qm6PuTD9ryc9kXafvXXCXvyefc23S+JMW6mTV27P0DxZY4vw==

       "]], Line3DBox[CompressedData["
1:eJwVzscuRGEYBuBvsJBos9CG0UtiJbpoV4BRE2tbCQkJGxI27oa7YEZnbBBc
hxLlOYs3b/3O+TvWt5Y2UxGxAcWKiLGaiFUYh1x1RLo84kG+WBmRqYooQF86
Iq+/lz/zHXYveAYe5f36Ntwrv7Npw6N8O5622dOX8a1QCrc2JXhH/o4bbRb8
70Z+yn/DvNsjOIRreVG2Yj+SfEfW4KYH/0A3XNkc6LP0sE0LnrJJJRp2dW/4
0q5JN0Q34zqbL3zMf+ILfc5b5ug1NyfygqyRH6QzuNZNHj7o80Trn3ADv+zm
ym6S7+KzdGeys6nHA/y+zQOesInkHfCnO7N5pbf1v/wszHtLk90/4jI1Ng==

       "]], 
      Line3DBox[{3671, 1670, 3230, 861, 4114, 2939, 862, 3231, 2819}]}, {
      Line3DBox[{369, 228, 3624, 1101, 240, 3176, 399, 251, 3633, 1110, 261, 
       678, 3363, 441, 1121, 3640, 273, 691, 3374, 486, 3247, 507, 285, 3262, 
       527, 296, 3284, 550, 306, 3304, 572, 3305, 318, 594, 3331, 330, 1135, 
       3656, 342, 636, 3348, 353, 1144}], Line3DBox[CompressedData["
1:eJwVz78rxHEcx/E3d4U7xeLHcmQxcMqExXDhUqeubtBJujKxMJmV0uUPYLRd
2LmNSzEysmE5damzKSaPG149X6/X9/X9fL7fie390l5XRKzTWE/EJQ33Rlzh
al/EKF/EG3mSr2NzIGI2FTFEt/II3uEcLthU7B/kPP+I8/oMleVx3MBN2rVb
HIx4stmRn3EpHTFDR/ppLFKWWu5cxhV6sTu2f8Uv/YFzqvIhvutO+Q9se1Zw
3xo15Zo+59xP/sT2Qj7Dttytv5a/+S368e4vNnR/eG53z9cwb5vofC8lqeT8
qc7/6dPyG/VTWZelf234Lms=
       "]], 
      Line3DBox[{1823, 1962, 2071, 816, 4155, 2073, 826, 2087, 4193, 1261, 
       1693, 1262, 2103, 4156, 839, 2106, 849, 2119, 851, 1772, 1481, 4111, 
       2138, 2121, 2141, 867, 2153, 1181, 2594, 4182, 1720, 2896, 1721, 3958, 
       1724, 885, 2182, 1194, 4187, 2596, 1679, 2634, 4203, 1357, 1738, 1358, 
       2214, 4189, 1213, 2597, 1221, 4099, 2229, 1390, 1745, 1391, 4102, 2240,
        938, 2243, 4131, 948, 2255, 1430, 1758, 3974, 1431, 2271, 1686, 
       2649}], Line3DBox[CompressedData["
1:eJwVzU0rBFAchfE/CwaJsrHS2EhWslM+gC1bY2GaSY33kiax97b3FfARMEyD
KNYUFoyGETVKGUs/i6fn3nPO7famF8bnGyJiCsnmiMuWiCtUEhF3rREDnRG3
3IUMsqjrHnhQd8+PmMUchnUz3K7LcdV9BKMouz/j5d/+aGqLyNuVnVP6dfka
0vIKL+teOaer8hvesY0d5OVbPGa/ydP2GecP509s6Ltlq1xDwT8naEQRQ7pT
znpTs//Cnl2PfJf73PdxgKQsYXuGEr5lx1iUF7hkf8SH6Mc5lnQX3GFf5x/8
YkV+zTd48m7S/ylM4A9kZT4g
       "]], Line3DBox[CompressedData["
1:eJwV0D8oxHEcxvHPDeJILJS6weV+yp+ilLtT7qS4BYlFMkjKchjsCtstBpMy
G2RnM7EaLFYWq2S7lNd3eHo+n/fzfPp9+xX3jjeOchGxRSOdEfdU6IoYyEcM
Ur4/ooStmx/4hKzUE3GGZ3wSe6Ia/tcXMaxXpBlsl7/wFVlmHqWKfdW+7/60
O+LCPp/uzT/uX81N+ZjuOC3af/FD7FKnZd9x2+DL9nfekk3pTtOQbA07N3/w
a9kV30zf1f/id1hOb1anTNupx7/5Ev4ov0nvpzZl2DNW11mgA6yB3Zo78Deq
+hdz1Ew33tuLfVINq9MJ/g/pYCjd
       "]], Line3DBox[CompressedData["
1:eJwV0D8oxAEYxvFXqfNnYDVabNxgJwbqCndKMR1XJtxhMVlYDDYboljl3+bP
wCI2p1DEQkJKmCjyueHp+7zP+z6/369ffa7Qmy+LiBFqSEQMVkUM0SbfVh2x
he34UBORlSepmfbkjRUR+/hkdyd7Mk/iPTXxKb0kPttPyFr5XGXEqU4Pf4aP
8hd+FodrI9J8l14GZ2SDOKbTYld0XzBfYF72xh9gym6cD34CD3FONs0veMaN
+3n+Ft98y4psleq8Z1Fe7n4JR3XW5cfmZfNa6dt0NvhXfNft0OmWp+lTVuX2
C3fMW6X/4nYbd6ngeb92x/wfduoe8Rnqo6x9wv0lVdC37AOLOGX3g1fmfr1r
HMBz2Qn9A+1JQkk=
       "]], Line3DBox[CompressedData["
1:eJwNzL8rBHAYx/HnSp0fXXdlUko3SUmUicFlcWc8P+oMBiwWJ0UxWBgdKeeK
5AYGvzphcWUw+RcMRpuymaS8hnef9/N5nu83u1AuriQiYh69yYhCW8Qkfloj
Hsyf6YgePqWbxiCflR2ZiBk5bC7JOfzyIf2rd13tESMYRVG/ZL+IL/4sm8i4
/TNvuFlHFmMo6XNyzW7VXRnfvF9/rK9h21yVR1jWT8g8CqjYbXmziZzdoXmH
7+KMX7rp1l/IunlPX8EdH9cf8H00zCfyFC36pvnJm0e88HN9HUm7lEzo3nDF
r/HOb+UNPnifuwa/RyfSugF//QOdMzEh
       "]], Line3DBox[CompressedData["
1:eJwV0D0vQwEUxvFjEJTQySBUxSIxqo1Qk0QniZekpooiaQmJyUsYdEKqXYnU
3sbLajKI72CsyQcw+xn++Z/nPOfm3tyxwv7yXkdE5DHRFfGKVHdEricikYxY
4rS8xuuYMk8nIvp0GR7Eu2fm7Tf0/fZ5zspbXMSKedbdDFIo9kZcudvmtFzQ
b+LA7Zz9IR/JC7osxrHj9lq3yxX5XP8zEHHBx+5PUDWf8ZC7U67Jl1zBg3nE
vu1bG+aq3S1a5jqP6mr8JN/xPTrt3uRfzwx7bwk3dmX+sH9008CnucmLuhZ/
/f8v37iKSSTlNl50z/g2/wFm/SzW
       "]], Line3DBox[CompressedData["
1:eJwVz00rhGEUh/EzK2+LQXayGFOEEmUKC1MoWdA0xWpYTDJeahSTQSmhRtlY
jIWFkpG9L2CLD8HXsJPfs7g651z/c9/P/WTKB8VqKiJKqLZFtLDXFbHUEfHd
HvHZGbFv/lAPuyN25U+Y5r7kL/aG+JZa5h8xp3+XDfK/5hIe8MYtcPfyJta4
Jqb0f+mIZ/mNvoECf4cZ+5PmFH7My7jFFT/hDZfO1GRHWOT7+IY6ltwpO0be
fI1R+1vmHVmvvYo6y1/g1P+ty07UOnLcOYadmec37W5gnDvDgD7HV+xuY4Sr
J3e5N+tMRrZqZwX9fC15W/Jd/lXfo/4DeHwrFg==
       "]], Line3DBox[CompressedData["
1:eJwVzz0vBGEUhuFjSXZ8LSIiWAV/QE8521CQbEGyCREiQWF7UdPoZBNqhT+g
oFaZKE1HR4UKm21kXVPced5zzv1MMnM7zfpRT0RsolmOyAYiNgYjHmVDZklE
4n0yGjFrrvVHpKig5NYZidjVu+fcYZ1T53bswjxtXuIuoowtty+3tcKVLXR9
49q33rx/OZM6P/Ibh/wr7oX7pVzhNOzOZWrOZU2O6UzYf+p84MxuT+fd+9i+
4j6MIZTwpNcr+/DKeSk8nVVuqpebu+YqZor/wIPOAg6893HKXdaf52f8v8KT
U2jb3XKrSHi52zO2+TfFP3iPc/4B9B4v6Q==
       "]], Line3DBox[CompressedData["
1:eJwV0L8vQwEUxfGLCG2HIiSShhKMxICFkckiDB2YRGorixgkFgaLTQysEmYS
f4KlrNRCJ0TSSv3u5mP45px77j3vvbZ/eW2+0BAReay3REylIibRnoi4aY34
SkZc8QttESk+iU8kcG1fRD0dsaI7rjeGlPsL+YbOu7smZOSNtIYGnKFgf+7u
lM/pHyIjO5EdoCr/9axu3R9aMc/Zf/PH/K6bIzqrNyLfpzuyTby56dAbllf5
V3cVukdX7V/4tP0zfUJelkPNbymbm+0e6QO2dGbsyrRkDrs7eotp+QRGvTtr
7kXdPIR795f//yOuUfr/Vt9T5AftB9Cj1+d52/Is/ZB1YsntIrr4PwPPOTc=

       "]], Line3DBox[CompressedData["
1:eJwVzr8rxHEcx/G3ovvh6OTHqG7yY5PccinLLdziMphuuLrFcDIo14UMSgZl
oYRSNjY//gJWzohJJiaDBSUPw7PX6/16vd/f7ydXXSzX2yKihqVExCkqnREv
yYjudMQgv5qN6OIXdCfI8A/6IXmL1mTHyNvNpCJuMaG7oRX5AdrdXNs9pznd
GZ2X72PTPO62w/4PvjEr38WcfFv/Jdtzf+TuECXdDgZ0RXO/vT4UZVso8x9u
Gm7eaa+5afeNn/r/J7KyJNJo6FK0IN/ADP/6/373z7RHn5A98Xn9Gh75af0k
xsxNVO3Vvacga+l/+Xs6qltBSX9nHtEPIydbxro85/ufskv9Ba7wB5/GMqY=

       "]], Line3DBox[CompressedData["
1:eJwNz80qhGEYxvHbgvGxmMGOlWliopQpDTUWSkqaZLCwEgvJFGUxEuVjoWaB
svGWhVIWcgDjAJyAcSS2eslv8e+67//1PM/bO7JzWDvoiIhtHGUiXjDXFzHQ
E9HfG5HDei6izj8ja293c7LIr8ld/gll9z50Ga6g65Jb/CM6zS3dAp94+wGb
fIJpc/Cv+j/zL2r8PVb51J7oLuUFqvwdJs1N/lg2sMitON+U3/ZT3a3v3mCP
n+evUdTVdXU5yO/LCn+FMXOqW+LfzS2U+XMUzMu6We/NoMSdYdR/p9mIH92X
M21M8CeoeufTPq4ruTOFPL/BN2Te3WHdm3lI/gN3DC3X
       "]], 
      Line3DBox[CompressedData["
1:eJwVzr8rxHEcx/G3FI7CdgoDUtQh5zp3Qn5EBhHZxDmTgTtlMSiUicV/YZDd
hM3kx2CxmowkKSkehmev1/v1er+/30/benmxVBERa2itiVipjbiojlilyURE
tjGiiXbKFuglTdlr5gd1LbRHVrZ/Q7dpuyyn66AZWZHe0jl3XXUR3cib9+2+
NUQU5LOyA/MhRnWbbj50j3xJ36vvw6T51M6nbk/+i9T/G5D0zxn9Lv9MT3T9
bo7kaTove0GlPo0h+QBdkh3TV3ruJsfnsWx+R8ZewjyMERRlV97w5Q0//DU/
Lp/AhvmMfuuqfOsJU+ZpbOl2fOvOfr284E33/APG+D9TuS1f
       "]], 
      Line3DBox[CompressedData["
1:eJwVzrErBHAYxvH3Ftzd4JJkNUmS8E+YDHdkdXdlw+B2C0lXxB8gFlmIAcOZ
zoTN3UJkUQpXuihFnc8NT9/nfd7n/fUbKCxlFxMRUaSRVMQdPXRF1PAef7GH
RjMRTfNhMiKFGUzirHzIvkphvsJWZ8QFnlFFdoTn9C2fSUeU3Xzxx7JB+uAn
ZB3efOfLuOtuz+6AFuy2zPv8JrbsP7HRHfGk3+fNR8zhinxDf1u3xO/gMjbd
DMsbfFGvrp/GGq7Lp/i83ar+NK7hvDzHv7h9w7zOrX4Cb7C//TaNt9/ULfFj
/DPW3bzy2Tb981L/x1zBXvs5/QKemot4gpPevdb/M/8DeCo9Jw==
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
ZOPaZxnKgBMKL20LrgzC5zUL1hdoH9CX6x912rcxITs9YdPBUiKM8MWvb7cr
QdT9MwlX/Wiw8c6WmphnRBTD8dimfaEa3rwYXy5ygQZaJ48W+V4kw1fNbb6b
Lj0AX+r3d6xOCihu2EPWcifCcDAvKBpUo56DdknnzGhw4jpXetDaFpBofnPs
dkUnGqSN/wlKZAKx5O75ys8NKOLjoV2iJl1obXTXmo4eJiiec981e4KMVp8h
3+879xTFXr8Y+Z5IAROlgf7s8+y8yMWYdWXSH/wlj+9R6GH/v8t3vhgjdoHW
3V+3mW1x7H9/unx5whgUrb+jvcG3FigNz5itlgRkd/3Jw9UJdCAvySqVCmuD
4sz2Aw+XNcHKMjtH8wdjkMPpFt7/shEpr8z9xi3fDPGu7qMXOVjgrsuq/vg4
D0l5v63RCRkBqXDtCc6jVHD//ZJ1b1sz0vIyo6qz+tCvqsD3CrEMeKd9T3DJ
32oYXrN38lJ7P/o6kBhWSGDA3aXfm/ZmEWBgZtVGinoLOkhWIy+M0MDMnjDt
bF0FiSe/ShvIEEGq3LpwMI0Ghi4FhyqXliKbD7aNKgFEqElQfWuaTIO2GOFb
bzJ7kce26rH3lt3w1tml8v5N9rp6dcudlyN5kPSCj+z/coSdj37c7KlLhU81
Sp+H32VBXNAgX0XXCHo2+SHCdgsVbqdbN1QntKExg9dSG00bkciG7d2hrmPQ
+y750YePjeBXf1BcM6UJNayX9hfkZUFd1UpPz6YquJIQwPr5jADSQtdTTiE6
FFhzmZr1VaIf/h+3PkUE9IzH4rt5Ih3azRM26pwZBCEx2XKmUAcwTYtjSyXp
sIoCHvakYjjR77He/Q0JthxQt06fZq8Dl/dAeWUJ6tnMPH7Il4SWpnNJCE6y
3xdPlvG16AJ00SKsbGqABMVhb0TPtVPhW5qgw6aPjaj4uNDhw6WdSOZZkd82
GhPmOM21Z8WI4LbkRLQXpQb2tmxuW/eGBksan/OrDQyjth5pzZ+valH9sV3W
RV9pEOt12GTOnoQ+x/pbqgylo2/8ch9f6dEg2ZFnzyY1EuS8DsqjGmfA6KWU
yT8PafDYNHjtyQYSEP10lsXtSYNGv8IBFT4aPLDjWFawbgQqEgYDGj6mwuMn
jzRkuqnQhPMsJs6zCnGe9exd1/ZGNyLK5IhJ1NGrRnKP5/e9vUmDtUGaPbp8
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0, 10}, {0, 20}, {-0.9999750232917758, 0.9999950046273903}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.596926028890662*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
gk30JWXYGnauesKjirLK0kmjFV8sfFpyd+FW863cjqB7tKORNa/mWu3c32Xm
cR6QQgFhbZziRIGgllj+kdyCYjxVTHREvgTYj9Joz3u7vF1fkQUm8yft/vlF
47Jj2UusUkCjdXPSydeSDsHcTrziXu3GqdZHub8iN/eU/GLhb0uujl0tuVUC
caAr3VfKHFALs0MaSC+glhqnFb10ro5W9L0fLGx+4fgNU+2ZW/WrZQn9O3o1
v30CGXp5ELOuJInL/8RLEg0ZTsIGwZ2sT/XIUgm09J7ljjQ9UO82uaMdje6y
jgI3i6e1NkiLp9jTY9IM3Aglco8S35cWHaWy7V0jGe68zCCWefTZDHdjYupB
+Ufa3ep3vIDdnWvE54QSZ9QhJ1QoUd6O4cQscLLkDI+uji7RmL+ueLjwsOLT
se6SG703Kq6o1xeud3c0sogYs3qr2Z7XmofOsv06UpRnrxLK1CQBE6aAQo1j
sNwhayteDBo4hSE/nvtqFmDxu/3zywW6MlWkIDHvEAO2q+4lmreNFdee+aj5
o4q/K0Fb+c/Hfl7izL0SJaiMXulxFDmy6r31jnp7okRdir5C0ekj63NQvLmE
ycfxNYSFRXOJLE308xeUvEfjWmf6+sQcU07S1JIAlGR6l8Oqg2AyEh5VgwjO
peaFkmdjTypGFr6ouDvqKb8+er3pemFHloLmxWQ2+CkyuD0dLXICJfSV1rCD
RVIFne8Bh7TzihKbmNGBszUnKSyJxx/DzhYqToSdseJgA3FEh1GcxGYubGuC
hmPJutS41L3Q9HX5P1QoyudjPbm/6L2qXm2+pF4au9TjaHIUEY3P272QcqrP
s+dpYGYoH0BrpmiC5qE+jE9k6Os5d9hzCcs1Cq+E8bQrVQyc6lfKPQbivf1f
bfKwXcR8+TRswSVuXnLQkk8eJx8zJQ3HAgHmYYT33mtPnL58wa0otl5b7oWx
2h4HFbZXupU0R9mlohp/jQciVJBBe0Wuf2qOz7Tyn6UE9rEYTvQdK4yTG3VL
WVrCkolML0WHTpajr2oO6RVBKmPrGWJnNp8eZqU/OlSHgSqu5DCOqijTzXir
Q59XjKhfjH1a4hm7kXtl7ErZ9SKIF8oAzQNeFAYMRA0kraSKw2EtsSpgT6wx
M84qWlXL1mfYvDlAhctjyj3wAHGKdzlrmaYQYumfphBuCtE57uqKz3qAm1XH
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
FsIHVxkRT2SeEYLWSOYOmhevs2LIJyhu0+o0TT2pnJZEZJZM2PASNrYMpk1w
R5rQDBTipEg0aQyNG5I1hJgHDhjpJUqNOwsNrEL8OPH+I03Qdqc0nCZ2i7Qy
9Sg4E5yemsEBAtEdLCUZE6Q/ucqXsoCgjiQydDbLfruEpK1JVKq8GFDJ6RQ/
ikdoB8sTFqph3GzQhramhw1SNi4StlusP0BwSe5RD0c3Q5ugDeQT1IOYH8SJ
o0EbJgMDCD3MurSzZsgXAhdCIBrcYUf8CeYw8VoVBy8XhETj9JUqEpXgDXmK
qI3lKgHnt12SN/oZEmL3SyO7F/MECuuam3sCfFqZAdLQCK7uE5S5R6rl/F7q
/G2YhdgcTzsuHC8tfN9CtdGHzBp8OF1TlNwl+id3yYtV3bj2ckcFatRVG7HV
ioxEwtBESHcqNGrCpIoC3ffgjJI8NR1cx2YUn12QnUwxmUZNJ22vSOeaOikB
ZNg8z9UzAcWF9T5MYjWAwNSCNaRaiyDosDyEJ1gjGY1wd6ikAz2/w9vnlFQm
MDl1yLU+J4S8OHHLeoOTyqnYidoENUlZdggZyRmporpp3rQYaZ5HgThP/OFl
8WsWvKaKdEiJTWEEbyDDiJkD5liQKwV3GOh3pMpjZuilPikW1jshTN+fAU3l
tzmxDMcLaJFYQkbGyLbAyGrG1LQQ/quT2pdCBw3jhTjeG1g1qcnECgrk/ywF
tWdKG0s9pQ5C920sYbLupbwpJFWsW/ESFE/jxHW/fLfpvKKTvtTgwjcta4ro
WOLeJRLQpz9hWf6fajoL8XP6clUM7Tzf1asI71zfiOvwxQuW1YzgzNTMs0dT
0w//hmjnPXkkQcT0lKYR2KBLsyKm3xEZFuqfVNSKmYQgnwZMMqmwYfIRhIMf
1NWFMeLhswzMPbfv8JZ7/ym567GJA68v5l9QBC/zBIfFhBlZuAlJIktKqMX3
tRpY1O3Nukc6cM1q4ColeJnmS7Pez8JaI+C0j9MRlzEmocIu71VA5ZNKVa2i
rdoL6hHHwSWqLos2bkN/HnpD30JHCYeE/YVLEOYaz3CEEjITD3cisCiQVPRk
HXgh/if0PKFqCGCx/J+t1Fl74v2R0sj79BCIV4lyyyA0VvZrc1cpjSc0GYwR
r1wZifWKMaiAwr0Qg+eOwX/SOgZHwp5/Evtlt377JF3bdZMy8im8yIZ/zd15
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
2Qz/WlsiqsRib8yHAkZ+0bfMV98SbvwHjNUgLtn4WAnhEYpl+EbJYuTvt8gt
bcnNUAV8FhdnshC6Vv52U5IhSlXzHvW0vwcewsB8CMWgnYPDl2uvj96te5B4
1n3sQ4m8+0jxEL7HW0LxEM6m5OC4o4jQVkpWXYpwe5cjLxxU6R7LVqc8CBHf
U8kutxVzQsXJ7qvofDm9fjolt8HRvqG+CbkAT9B/CwCG7X6VUYTCHNJsR3f/
lGGs2p+XlGnzm799C/wbbTV48skP0eT/MZnYOBr2T5ut4tSvD9u69Nn8WAlK
3BmyxEVBT7dWHGT+YgeCwJH1Zt2zT1BN9K0NsFOip5RiOALNPtX0C+ADdToG
xsJj8au1dxIPqFIsP5lgX0H/Q7EhEbgQPZ90KELIUXSE5pF9covGPmpm59kJ
rGy9qCYSRU02kPJQR5qN1VBekegIfCx1G6E0Be6xzyV25MbAPHq5DzA0IrJ4
33vf8yiAgsjl6jXqahHmXv1sY2mdoQ1yovO3W/yxbRb/Budrx1Qj7biydKI5
uGjK3w0OcXuqIjHdl9eYVCsI9F6ck4CUG1O9iy39rGbpXJyuZFjV+fF12Gkf
EVCCL8eqxvxXole2ol13lkCveNH9YjpbrhJ9zsg5GhvanBN0Sja7vhok9NYV
0i4lUFQ07lgOL28lA8ko4AF4XkCf1z4ZVNSvj2jWqeX11Dp2eAE1+k+ikZGn
PZ/6KTbveG2PwsauWFTYWufalLA0YefP7UsvSfsnd84tozeOZ6233DfZy7BK
CBQkceBmAQM2czSYFaB7n4PtWCU6D6k2/u9URbRDxNp4EmaU5mQYXS6fJM22
fbJzCZxR7fxyyncPkGsATEJ1LF+JRp2c8jxuXs6+6MrMoOVzB9t5oYI1nH4J
Y6S5NvIYmcHGLWv2q2LcOBtNNibF9hPmPUydU7RZZFNrEDvcCRUm6lGDFGOF
MO+OvslB+2BpqDT48rMNnmh08sXi+MC14UxZpkt4k+rn9pwu8LxtM278W+1f
/Mj8wQwLxs1cOV2Qq9Z3qLiLSRbb9CV18fnEjwWvDiAfOBIRysU3iUqQT7HE
kuySPIdvmTa3OSvTRpmo2dQpLNJzxU9lhveHH6Xj6IPvyoxklrB6fIilcMPV
E1x7TqiJo8QPoe+BXX9FDBGRrugR2hyd1BzuTcbFTHdyw8lOqQYYZMMm87K7
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
NcTRddPmPNPYO9I/daEs3HR5+kbt3ZmHtUsz4M3yk3xD7Hj6Hf6+O0+OnEn4
s+ebL8x8XneDx5w3VzfXLW8D8pUEF9UsurRJ+AHNaLBhqwFzj5a0qQvOcOPV
6auZqa67S0vNzxJ0dMmDtLXBWu75vuKzVI2OnKdQ1uSZVmGWvXFPIqpHGBMw
bnUh0Hyol8AtWacxmdNnu+r5ptJgAPMrYkYy75QZxsmmM0uBsvNN57vC2c9r
byTu1c0mEnXf1Pw5vtA7ne+MYiow2JszM+Uz3Uz1YPW6trdJR8qdtW7J4Ut3
vwNWSFNbpz9zvjG89HnZja4bSw+b+XT2MH0z1hpvj+7ir8kNZKr0Kj+nwI9T
mdeV16QaGVnQHotAypgu0bm4YYEK/NBok7fq/qZUdo3seafuL4RP8mQ+6Aos
/ab806bPE1/V3Ut8U4eL/UIRBZq8M97sr5o7Z35b97vRH+mLSjo0Xi0Tkefz
grbsB7XnZz4t+3L0xhL1R99b+iLwO09LXGyygAhkNMEip8/jem5jh5Ro1DQw
mcaiat/k4+FFlN0csArNlZT6Chencl+BaijJR5l5okSKooov0vzLmV/XfTz6
aXak2fi1vkKoajAatdRAfo+890fFlDCOteSLpt9Vd25ks8ftJMbsbSlFjW1r
CWSyIV6rpI8t6WklCFsul4qe2iy90ch7XKUMFe/lUhItr+IiD7U7sy4M3+hR
tiMCM54pjSZtyrmlD8lNWf2GiIKNbjuUyzX931sdT+TY9JILrRNNKmJDhcyq
R9elo1c8KyGrZ1NV8T8vnisxujmv55nEU7rRrMUEJG976heoUk5K1JLeL10K
4g17Z0dOhQHyJ1nZrVp1oGg9zqXTVCI/r0pElz1rkaTdaoeiEvmjS+tGQC4t
GSnuLo0Tmt/5CSfLu0l6WZX7WtJGqP164w9Nkt6my8/XZt2XXdZ9Ke+K53VI
vXTo84PrJqMldzBGER0tzIpVXEmeuohh7JR6nrJ3kM4wdvQwgT6j1RHOsSih
LNALxRaWPWIwXNs4ycsFMcK/1qcFsdk4+a2RTNarkSg9uFvQPy1CpcF2KUjZ
rsQSx+hdf1W2MKBSJ4i3StlGF7I01JfW2/X5gDMxfqmNAmHTfuwSlQzKx6tc
yTBrOrRSFKB4UJR30XiNrLeCJmOeVTeWS1fQz8fdZmQmqMb735WRijM98jrj
r7SAjVHsZ1CXWQBnjuL0xQ4lrlMgpyOlJA0PaXVLR2V5biX6ihB+12SLuSxV
rPiV7oGwUYz/VfNAiBMF9Zfo4EllXdYz4kVV02WJVZrtY6h0g4ViPQ6IkCe2
8P0SrMfTzeVKtA+i+EWknqWpylWY5yndnSMrNv6D5lveYmmd3UzLxiywuJAl
MCRVq0oIJEWKyjLaYg2UtgAec1E4XU1QHhROw6v9L/r3R+JJg9G/f6H67lxi
gNJVLpEyK3HkBdNBFR74NH8FIRAVOKxqi7lHgwUrQuah6Ed8eIv+zZHWGK3a
cQe/9ko9v+0mMJ7z1Q8NHB3Awx3p9DAEBSWqj3xQlSCgB56vwvjiKbTg/M/q
p7S9TcU+xvua/WND7Gt7y3pENov5pKYFfi6/nR9S3C5LG4QKKSJSymERMjOk
NlC5WtKo733EdeNX2k+VtwtczqNeKunNmIoonpyW77EK4/4eZKQkFopgD7cX
SESD3svWIHQQoPcyT6rSrW93vM8Z/1H7wUiEXsOCS1CyWuhLqojo9JOOVE+F
Kd+Bl/IDXM9zDebljoGQ4aVn8mo8nWS9KffzEjqYmV8X1/jG/6Ztb2SeJOnJ
X5i+sXp+m0AtNezria/E5+pz8ePbweCQfBzmswWETVCwEiCuhXw1WXXT7YL5
bf8n/IDTmkm/of2eui2PWW9F6lFkvb24B8IieBU5yEztzxSAfuK+nW4LAmvD
JH0xRcAov7pII1+GI7vRrm3h72vTze+CeLpwoMGFviXd+/Z1DEgEssksV6fu
4bU4bnMI+R6effK2vmlx2DPOaN/qj3hP8W0pvuJ3TK60vMOHfhFdig4RfvwS
/UTGsWzQY3L1ChQPgFquyXoTJcf1XerBz/tA+3L68w0Js5rvBq5Jo/DEAjrz
xNGp0gf4W1DSq/ddKSWC8iL4goQyi2egr1CzWv289F/r3w+ZDCWKKp35rvZd
87IWuI/YpSX4eXTtGxSn/sm+IRCD5RPFIt1ZgheI5wnAZByz8/fGqYrJ/HoI
x8aH2lcq136PQ6STLmEnCXa4QDA4oA5jPYt9iwMTIWYERogROBV30jU23rlq
ZhfuTXBdoXQ7iDPGR9qHb39Vd8i7SuIq4j6xFbdiiz1b9NgD4GwEjD/ACJeb
VkYydXjkWdp8uFGrbzz4U8p/1I9xar/HyUMcb+pDIg/bFD9kk5qOQ+Lwv2Xs
79satPONSdRxp9Mw4nW4CsW8rdYkqugwbm4z+BPDl7VOVw7tyyAtLiYe0iJ+
iki+/O1R31ZvTa8DF9ZX4tcddxrvDD8Sw19JJLvpcq/xqP4lsJcoo1Q2V6p9
iZ1s5a/Vb1H/r9Ee9Tv9Nf01g15cR/IN22NxbKbbsNHU9D/VB458zOjUBlui
/R5HltfQ1dTgIIhTvD3d29RbMzgSil8tu951J/GgPD7zrJsvpn6mDxhTYXRp
A9bL6Iq4anx3S/xMmb+pv2twWl7qlD9OPOuW8TFB8dG87RKBAR9Hmb7aCIe1
oe7hlWzJtJX5u3tHBrPhuqszN5rpMTcv0fw8IZ9jTDs/i087q41KL4jlBhJj
V1viXN35meHyL8XU3Zv5pvyb5txD9cf4kB7tL76mDYm66XDZK58/877ovpm9
VWf8iT6MT/AJvdon6L0IONnuwDxks3/V3MmRyvzZv8HfPKf9zQPa7yuUKYp5
+8/4gx9roUcndOQYwwX8yf9D+wp6W9lP9fW9hD/5f2qfozcCv6V/Zhh/8pNt
K7Ut5vNn/hf8yT7lIbKqdeZt8xpPGcJl/MHz2sfoLarf02f3/8Kf/I32X/Wa
2jJ9Nq/gT/42d1eZvy/VP/O/40/+J206dd7BIf0zr+FP/udtXk1fZ/Mz0bRk
DGifk7fNCpTTjOAPDmofqb+17tZncxp/Egu6gz8mmxV/fZe+Mv8P/sSnahi4
cN+hf8A9/OeLmAn+nuqvGf8v/oPxP/x/4cKqwg==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GPIO", "Section",
 CellChangeTimes->{{3.596932343318726*^9, 3.5969323543494368`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindDevices", "[", "]"}]], "Input",
 CellChangeTimes->{{3.5969341043511467`*^9, 3.596934110812419*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Tinkerforge", "::", "noconnect"}], "MessageName"], 
  RowBox[{":", " "}], "\<\"Could not establish connection.\"\>"}]], "Message",\
 "MSG",
 CellChangeTimes->{3.596934132371874*^9, 3.596974478928096*^9, 
  3.5969746174609833`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["DeviceObject",
      "SummaryHead",
      Selectable->True], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{18., {0., 18.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"DefaultShellCommandDemo\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"DefaultShellCommandDemo", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$ = 1}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm],
                  ImageSizeCache->{107., {5., 16.}}],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"DefaultShellCommandDemo\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"DefaultShellCommandDemo", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm]],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"},
             {
              TagBox["\<\"...\"\>",
               "SummaryItem",
               Selectable->True], ""}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    DeviceObject[{"DefaultShellCommandDemo", 1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["DeviceObject",
      "SummaryHead",
      Selectable->True], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{18., {0., 18.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"DelayedRandomSignalDemo\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"DelayedRandomSignalDemo", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$ = 2}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm],
                  ImageSizeCache->{72., {5., 16.}}],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"DelayedRandomSignalDemo\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"DelayedRandomSignalDemo", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm]],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"},
             {
              TagBox["\<\"...\"\>",
               "SummaryItem",
               Selectable->True], ""}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    DeviceObject[{"DelayedRandomSignalDemo", 1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["DeviceObject",
      "SummaryHead",
      Selectable->True], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{18., {0., 18.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"GPIO\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"GPIO", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$ = 1}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm],
                  ImageSizeCache->{107., {5., 16.}}],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"GPIO\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"GPIO", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm]],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"},
             {
              TagBox["\<\"...\"\>",
               "SummaryItem",
               Selectable->True], ""}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    DeviceObject[{"GPIO", 1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["DeviceObject",
      "SummaryHead",
      Selectable->True], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{18., {0., 18.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"RandomSignalDemo\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"RandomSignalDemo", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$ = 2}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm],
                  ImageSizeCache->{72., {5., 16.}}],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"RandomSignalDemo\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"RandomSignalDemo", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm]],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"},
             {
              TagBox["\<\"...\"\>",
               "SummaryItem",
               Selectable->True], ""}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    DeviceObject[{"RandomSignalDemo", 1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["DeviceObject",
      "SummaryHead",
      Selectable->True], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{18., {0., 18.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"RaspberryPiWeatherStation\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"RaspberryPiWeatherStation", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$ = 1}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm],
                  ImageSizeCache->{107., {5., 16.}}],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"RaspberryPiWeatherStation\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"RaspberryPiWeatherStation", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm]],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"},
             {
              TagBox["\<\"...\"\>",
               "SummaryItem",
               Selectable->True], ""}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    DeviceObject[{"RaspberryPiWeatherStation", 1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["DeviceObject",
      "SummaryHead",
      Selectable->True], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{18., {0., 18.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"RaspiCam\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"RaspiCam", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$ = 1}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm],
                  ImageSizeCache->{107., {5., 16.}}],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"RaspiCam\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"RaspiCam", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm]],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"},
             {
              TagBox["\<\"...\"\>",
               "SummaryItem",
               Selectable->True], ""}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    DeviceObject[{"RaspiCam", 1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["DeviceObject",
      "SummaryHead",
      Selectable->True], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{18., {0., 18.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"ShellCommandDemo\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"ShellCommandDemo", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$ = 1}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm],
                  ImageSizeCache->{107., {5., 16.}}],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"ShellCommandDemo\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"ShellCommandDemo", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm]],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"},
             {
              TagBox["\<\"...\"\>",
               "SummaryItem",
               Selectable->True], ""}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    DeviceObject[{"ShellCommandDemo", 1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["DeviceObject",
      "SummaryHead",
      Selectable->True], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"],
                 ImageSizeCache->{18., {0., 18.}}],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = True),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"TinkerForgeWeatherStation\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"TinkerForgeWeatherStation", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$ = 1}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm],
                  ImageSizeCache->{107., {5., 16.}}],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           TagBox[GridBox[{
              {""},
              {
               ButtonBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]],
                Appearance->None,
                ButtonFunction:>(Typeset`open$$ = False),
                Evaluator->Automatic,
                Method->"Preemptive"]}
             },
             AutoDelete->False,
             BaselinePosition->{2, 1},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
            "Grid"], 
           GraphicsBox[
            {Thickness[0.038461538461538464`], 
             {FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], 
              FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, 
             {RGBColor[0.7, 0.7, 0.7], Opacity[1.], JoinForm[{"Miter", 10.}], 
              JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1,
                3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
               25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
               0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
               1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {25.5,
                24.605}, {25.5, 23.5}, {25.5, 2.5}}},
               CurveClosed->{1}]}, 
             {FaceForm[{RGBColor[
              0.45999999999999996`, 0.45999999999999996`, 
               0.45999999999999996`], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               11.020999999999999`, 15.084}, {14.979, 15.084}, {14.979, 
               20.542}, {11.020999999999999`, 20.542}}}]}, 
             {FaceForm[{RGBColor[0.7, 0.7, 0.7], Opacity[1.]}], 
              FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
               15.979000000000001`, 16.541999999999998`}, {
               10.020999999999999`, 16.541999999999998`}, {
               10.020999999999999`, 10.542}, {12.020999999999999`, 10.542}, {
               12.020999999999999`, 0.5}, {13.979000000000001`, 0.5}, {
               13.979000000000001`, 10.542}, {15.979000000000001`, 10.542}, {
               15.979000000000001`, 16.541999999999998`}}}]}},
            AspectRatio->Automatic,
            ImageSize->{Automatic, 
              Dynamic[3.5 CurrentValue["FontCapHeight"]]},
            PlotRange->{{0., 26.}, {0., 26.}}], GridBox[{
             {
              RowBox[{
               StyleBox["\<\"Class: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["\<\"TinkerForgeWeatherStation\"\>",
                "SummaryItem",
                Selectable->True]}], 
              RowBox[{
               StyleBox["\<\"Id: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox["1",
                "SummaryItem",
                Selectable->True]}]},
             {
              RowBox[{
               StyleBox["\<\"Status: \"\>",
                FontColor->GrayLevel[0.5]], "\[InvisibleSpace]", 
               TagBox[
                DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                  Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}], 
                  Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                   9, ImageMargins -> {{3, 3}, {2, 0}}]}, 
                 Devices`DeviceAPI`DeviceDump`status$$ = {
                 "Connected", "Latent"}, Devices`DeviceAPI`DeviceDump`d$$ = 
                 DeviceObject[{"TinkerForgeWeatherStation", 1}], 
                 Devices`DeviceAPI`DeviceDump`ind$$}, 
                 DynamicBox[ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], StandardForm]],
                 DynamicModuleValues:>{}],
                "SummaryItem",
                Selectable->True]}], "\[SpanFromLeft]"},
             {
              TagBox["\<\"...\"\>",
               "SummaryItem",
               Selectable->True], ""}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    DeviceObject[{"TinkerForgeWeatherStation", 1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.596934139784442*^9, 3.596974485980528*^9, 
  3.5969746245864973`*^9}]
}, Open  ]],

Cell["DeviceRead[] returns value where direction is \[OpenCurlyDoubleQuote]in\
\[CloseCurlyDoubleQuote].", "Text",
 CellChangeTimes->{{3.597048086554503*^9, 3.597048159915476*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceRead", "[", 
  RowBox[{"\"\<GPIO\>\"", ",", "17"}], "]"}]], "Input",
 CellChangeTimes->{{3.596932385272072*^9, 3.596932400950458*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"17", "\[Rule]", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.596932403014278*^9, {3.596932800678236*^9, 3.596932814389591*^9}, 
   3.596936377924238*^9, 3.596939604274652*^9, 3.596939961573008*^9, 
   3.596940030076016*^9, 3.596940411466487*^9, 3.596940466305834*^9, 
   3.596940516610446*^9, 3.596940826365869*^9, {3.596974436465266*^9, 
   3.5969744473431787`*^9}, 3.596974505433099*^9, 3.596974651103174*^9, 
   3.5970482256044693`*^9}]
}, Open  ]],

Cell["DeviceWrite[] sets value where direction is \"out\".", "Text",
 CellChangeTimes->{{3.597048168417424*^9, 3.5970482132540293`*^9}}],

Cell[BoxData[
 RowBox[{"DeviceWrite", "[", 
  RowBox[{"\"\<GPIO\>\"", ",", 
   RowBox[{"4", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.596932425361861*^9, 3.596932436067958*^9}, {
  3.596932507879058*^9, 3.596932522619821*^9}, {3.596932694716658*^9, 
  3.596932698191765*^9}, {3.5969400204485817`*^9, 3.5969400209392014`*^9}, {
  3.5969404164142227`*^9, 3.5969404170114527`*^9}, {3.596940715485237*^9, 
  3.596940724609585*^9}, {3.596974674603633*^9, 3.596974689267825*^9}, {
  3.5970482170647087`*^9, 3.5970482186920977`*^9}, {3.597048352337535*^9, 
  3.5970483713810053`*^9}, {3.59704840733607*^9, 3.597048410152959*^9}, {
  3.597048443785483*^9, 3.5970484442919188`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceRead", "[", 
  RowBox[{"\"\<GPIO\>\"", ",", "17"}], "]"}]], "Input",
 CellChangeTimes->{{3.597048421751605*^9, 3.5970484345757236`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"17", "\[Rule]", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.5970484364111977`*^9, 3.597048449230391*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"x", "=."}]], "Input",
 CellChangeTimes->{{3.597048477790155*^9, 3.597048479832202*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.5970484583981028`*^9, 3.597048464892626*^9}, {
  3.597048952707217*^9, 3.597048953296626*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`x, StandardForm], $CellContext`y,
  ImageSizeCache->{13., {0., 13.}}]], "Output",
 CellChangeTimes->{3.597048470586535*^9, 3.597048955059668*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "1"}]], "Input",
 CellChangeTimes->{{3.59704854054594*^9, 3.597048542199175*^9}, {
  3.597048711740932*^9, 3.597048712279923*^9}, {3.597048778431719*^9, 
  3.597048806522373*^9}, {3.597048867239056*^9, 3.597048867823557*^9}, {
  3.5970489822360373`*^9, 3.597048983428238*^9}, {3.59704902145918*^9, 
  3.5970490220761147`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.597048544436983*^9, 3.597048714606943*^9, {3.5970487812046843`*^9, 
   3.597048808870037*^9}, 3.597048870254084*^9, 3.5970489857352457`*^9, 
   3.59704902511084*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"DeviceWrite", "[", 
   RowBox[{"\"\<GPIO\>\"", ",", 
    RowBox[{"4", "\[Rule]", "x"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.59704849714561*^9, 3.597048531965076*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   DeviceWrite["GPIO", 4 -> $CellContext`x], StandardForm],
  ImageSizeCache->{52., {0., 13.}}]], "Output",
 CellChangeTimes->{3.597048549089068*^9, 3.597048613360939*^9, 
  3.597048722576976*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DeviceRead", "[", 
    RowBox[{"\"\<GPIO\>\"", ",", "17"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.597048856609796*^9, 3.597048860848044*^9}, {
  3.597048959379559*^9, 3.597048964695072*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.597048863836678*^9, 3.597048876496928*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"DeviceRead", "[", 
      RowBox[{"\"\<GPIO\>\"", ",", "17"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5970483267936153`*^9, 3.597048336272833*^9}, {
  3.597048600675605*^9, 3.597048603252014*^9}, {3.597048648496913*^9, 
  3.5970487050128593`*^9}, {3.597048742239374*^9, 3.597048794875965*^9}, {
  3.597048967121324*^9, 3.597048967789345*^9}, {3.5970490031694813`*^9, 
  3.5970490078402157`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`y = Part[
     Part[
      DeviceRead["GPIO", 17], 1], 2], StandardForm],
  ImageSizeCache->{13., {0., 13.}}]], "Output",
 CellChangeTimes->{
  3.597048337929077*^9, 3.5970483908422737`*^9, 3.5970485621654367`*^9, 
   3.597048604961319*^9, {3.597048653856636*^9, 3.59704867108523*^9}, {
   3.5970487066137323`*^9, 3.597048817724613*^9}, 3.597048970753202*^9, 
   3.597049010309708*^9, 3.597049051820301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["y"], "Input",
 CellChangeTimes->{3.597048975811973*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.5970489779962482`*^9, {3.597049015852538*^9, 3.597049058617426*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Device*"}]], "Input",
 CellChangeTimes->{{3.597049187191354*^9, 3.5970491919230433`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["System`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["System`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["DeviceClose",
          BaseStyle->"InformationLinkLF",
          ButtonData:>{"Info3597049193-4500671", {"DeviceClose", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["DeviceRead",
          BaseStyle->"InformationLinkLF",
          ButtonData:>{"Info3597049193-4500671", {"DeviceRead", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DeviceConfigure",
          BaseStyle->"InformationLinkLF",
          
          ButtonData:>{
           "Info3597049193-4500671", {"DeviceConfigure", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["DeviceReadAsynchronous",
          BaseStyle->"InformationLinkLF",
          
          ButtonData:>{
           "Info3597049193-4500671", {"DeviceReadAsynchronous", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DeviceDriverRepository",
          BaseStyle->"InformationLinkLF",
          
          ButtonData:>{
           "Info3597049193-4500671", {"DeviceDriverRepository", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["DeviceReadBuffer",
          BaseStyle->"InformationLinkLF",
          
          ButtonData:>{
           "Info3597049193-4500671", {"DeviceReadBuffer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DeviceExecute",
          BaseStyle->"InformationLinkLF",
          ButtonData:>{"Info3597049193-4500671", {"DeviceExecute", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["DeviceReadBufferAsynchronous",
          BaseStyle->"InformationLinkLF",
          
          ButtonData:>{
           "Info3597049193-4500671", {
            "DeviceReadBufferAsynchronous", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DeviceInformation",
          BaseStyle->"InformationLinkLF",
          
          ButtonData:>{
           "Info3597049193-4500671", {"DeviceInformation", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["DeviceReadTimeSeries",
          BaseStyle->"InformationLinkLF",
          
          ButtonData:>{
           "Info3597049193-4500671", {"DeviceReadTimeSeries", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DeviceInputStream",
          BaseStyle->"InformationLinkLF",
          
          ButtonData:>{
           "Info3597049193-4500671", {"DeviceInputStream", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["Devices",
          BaseStyle->"InformationLinkLF",
          ButtonData:>{"Info3597049193-4500671", {"Devices", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DeviceObject",
          BaseStyle->"InformationLinkLF",
          ButtonData:>{"Info3597049193-4500671", {"DeviceObject", "System`"}},
          
          ButtonNote->"System`"], 
         ButtonBox["DeviceWrite",
          BaseStyle->"InformationLinkLF",
          ButtonData:>{"Info3597049193-4500671", {"DeviceWrite", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DeviceOpen",
          BaseStyle->"InformationLinkLF",
          ButtonData:>{"Info3597049193-4500671", {"DeviceOpen", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["DeviceWriteAsynchronous",
          BaseStyle->"InformationLinkLF",
          
          ButtonData:>{
           "Info3597049193-4500671", {"DeviceWriteAsynchronous", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DeviceOpenQ",
          BaseStyle->"InformationLinkLF",
          ButtonData:>{"Info3597049193-4500671", {"DeviceOpenQ", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["DeviceWriteBuffer",
          BaseStyle->"InformationLinkLF",
          
          ButtonData:>{
           "Info3597049193-4500671", {"DeviceWriteBuffer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DeviceOutputStream",
          BaseStyle->"InformationLinkLF",
          
          ButtonData:>{
           "Info3597049193-4500671", {"DeviceOutputStream", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["DeviceWriteBufferAsynchronous",
          BaseStyle->"InformationLinkLF",
          
          ButtonData:>{
           "Info3597049193-4500671", {
            "DeviceWriteBufferAsynchronous", "System`"}},
          ButtonNote->"System`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.475]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellChangeTimes->{3.597049194111004*^9}],

Cell[BoxData[
 StyleBox["\<\"\!\(\*RowBox[{\\\"DeviceConfigure\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"device\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"config\\\", \\\"TI\\\"]}], \\\"]\\\"}]\) configures the \
specified device according to \!\(\*StyleBox[\\\"config\\\", \\\"TI\\\"]\).\"\
\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3597049193-4500671"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "DeviceConfigure", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{"Protected", ",", "ReadProtected"}], "}"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[DeviceConfigure],
  Editable->False]], "Print",
 CellTags->"Info3597049193-4500671"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Needs", "[", "System`DeviceInputStrem", "]"}]], "Input",
 CellChangeTimes->{{3.597049256407341*^9, 3.597049331302141*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Needs", "::", "cxt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Invalid context specified at position \[NoBreak]\\!\\(1\\)\
\[NoBreak] in \[NoBreak]\\!\\(Needs[DeviceInputStrem]\\)\[NoBreak]. A context \
must consist of valid symbol names separated by and ending with \[NoBreak]\\!\
\\(\\\"`\\\"\\)\[NoBreak].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.59704930375486*^9, 3.5970493348578043`*^9}],

Cell[BoxData[
 RowBox[{"Needs", "[", "DeviceInputStrem", "]"}]], "Output",
 CellChangeTimes->{3.59704930392247*^9, 3.5970493350330973`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeviceInputStream", "[", "\"\<GPIO17\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.5970493459958878`*^9, 3.597049378382043*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"DeviceInputStream", "::", "nostr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"No input streams are defined for \
\[NoBreak]\\!\\(\\\"GPIO17\\\"\\)\[NoBreak].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.597049366496087*^9, 3.597049381115922*^9}}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.5970493665360928`*^9, 3.597049381165615*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 756},
WindowMargins->{{Automatic, 117}, {Automatic, 0}},
ShowSelection->True,
Magnification:>1.5 Inherited,
FrontEndVersion->"10.0 for Linux ARM (32-bit) (November 19, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3597049193-4500671"->{
  Cell[463917, 8355, 363, 6, 133, "Print",
   CellTags->"Info3597049193-4500671"],
  Cell[464283, 8363, 480, 14, 51, "Print",
   CellTags->"Info3597049193-4500671"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3597049193-4500671", 466551, 8436}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 110, 1, 234, "Title"],
Cell[CellGroupData[{
Cell[715, 27, 102, 1, 45, "Input"],
Cell[820, 30, 128, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[985, 37, 92, 1, 124, "Section"],
Cell[CellGroupData[{
Cell[1102, 42, 246, 6, 45, "Input"],
Cell[1351, 50, 189, 5, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1577, 60, 336, 9, 45, "Input"],
Cell[1916, 71, 310, 5, 75, "Output"]
}, Open  ]],
Cell[2241, 79, 492, 13, 162, "Input"],
Cell[2736, 94, 1110, 25, 249, "Input"],
Cell[3849, 121, 817, 22, 220, "Input"],
Cell[4669, 145, 179, 3, 45, "Input"],
Cell[4851, 150, 134, 2, 45, "Input"],
Cell[4988, 154, 126, 2, 45, "Input"],
Cell[5117, 158, 126, 2, 45, "Input"],
Cell[CellGroupData[{
Cell[5268, 164, 130, 2, 45, "Input"],
Cell[5401, 168, 87, 2, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5525, 175, 132, 2, 45, "Input"],
Cell[5660, 179, 87, 2, 45, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5796, 187, 91, 1, 124, "Section"],
Cell[CellGroupData[{
Cell[5912, 192, 116, 2, 45, "Input"],
Cell[6031, 196, 71, 1, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6139, 202, 237, 6, 45, "Input"],
Cell[6379, 210, 28897, 483, 239, 19385, 325, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35313, 698, 368, 10, 45, "Input"],
Cell[35684, 710, 318998, 5267, 311, 258344, 4271, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[354731, 5983, 91, 1, 186, "Section"],
Cell[CellGroupData[{
Cell[354847, 5988, 127, 2, 67, "Input"],
Cell[354977, 5992, 278, 7, 51, "Message"],
Cell[355258, 6001, 97890, 2044, 1659, "Output"]
}, Open  ]],
Cell[453163, 8048, 180, 2, 73, "Text"],
Cell[CellGroupData[{
Cell[453368, 8054, 164, 3, 67, "Input"],
Cell[453535, 8059, 483, 9, 67, "Output"]
}, Open  ]],
Cell[454033, 8071, 136, 1, 73, "Text"],
Cell[454172, 8074, 690, 11, 67, "Input"],
Cell[CellGroupData[{
Cell[454887, 8089, 166, 3, 67, "Input"],
Cell[455056, 8094, 148, 3, 67, "Output"]
}, Open  ]],
Cell[455219, 8100, 111, 2, 67, "Input"],
Cell[CellGroupData[{
Cell[455355, 8106, 200, 4, 67, "Input"],
Cell[455558, 8112, 192, 3, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455787, 8120, 359, 6, 67, "Input"],
Cell[456149, 8128, 218, 4, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456404, 8137, 229, 5, 67, "Input"],
Cell[456636, 8144, 231, 5, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456904, 8154, 319, 8, 67, "Input"],
Cell[457226, 8164, 94, 1, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457357, 8170, 588, 13, 67, "Input"],
Cell[457948, 8185, 454, 9, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458439, 8199, 69, 1, 67, "Input"],
Cell[458511, 8202, 121, 2, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458669, 8209, 119, 2, 67, "Input"],
Cell[CellGroupData[{
Cell[458813, 8215, 5101, 138, 708, "Print"],
Cell[463917, 8355, 363, 6, 133, "Print",
 CellTags->"Info3597049193-4500671"],
Cell[464283, 8363, 480, 14, 51, "Print",
 CellTags->"Info3597049193-4500671"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[464812, 8383, 146, 2, 67, "Input"],
Cell[464961, 8387, 455, 9, 171, "Message"],
Cell[465419, 8398, 139, 2, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465595, 8405, 151, 2, 67, "Input"],
Cell[465749, 8409, 304, 7, 51, "Message"],
Cell[466056, 8418, 102, 1, 67, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
